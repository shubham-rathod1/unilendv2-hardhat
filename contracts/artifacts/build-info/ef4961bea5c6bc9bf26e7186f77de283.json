{
	"id": "ef4961bea5c6bc9bf26e7186f77de283",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.2",
	"solcLongVersion": "0.6.2+commit.bacdbe57",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20.sol": {
				"content": "pragma solidity 0.6.2;\n\n\n// SPDX-License-Identifier: MIT\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// SPDX-License-Identifier: MIT\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// SPDX-License-Identifier: MIT\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n// SPDX-License-Identifier: MIT\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n\n/**\n * @dev Interface of the ERC2612 standard as defined in the EIP.\n *\n * Adds the {permit} method, which can be used to change one's\n * {IERC20-allowance} without having to send a transaction, by signing a\n * message. This allows users to spend tokens without having to hold Ether.\n *\n * See https://eips.ethereum.org/EIPS/eip-2612.\n */\ninterface IERC2612Permit {\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    /**\n     * @dev Returns the current ERC2612 nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n}\n\nabstract contract ERC20Permit is ERC20, IERC2612Permit {\n    using Counters for Counters.Counter;\n\n    mapping (address => Counters.Counter) private _nonces;\n\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    bytes32 public DOMAIN_SEPARATOR;\n\n    constructor() internal {\n        uint256 chainID;\n        assembly {\n            chainID := chainid()\n        }\n\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(name())),\n                keccak256(bytes(\"1\")), // Version\n                chainID,\n                address(this)\n            )\n        );\n    }\n\n    /**\n     * @dev See {IERC2612Permit-permit}.\n     *\n     */\n    function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public virtual override {\n        require(block.timestamp <= deadline, \"Permit: expired deadline\");\n\n        bytes32 hashStruct = keccak256(\n            abi.encode(\n                PERMIT_TYPEHASH,\n                owner,\n                spender,\n                amount,\n                _nonces[owner].current(),\n                deadline\n            )\n        );\n\n        bytes32 _hash = keccak256(\n            abi.encodePacked(\n                uint16(0x1901),\n                DOMAIN_SEPARATOR,\n                hashStruct\n            )\n        );\n\n        address signer = ecrecover(_hash, v, r, s);\n        require(signer != address(0) && signer == owner, \"Permit: Invalid signature\");\n\n        _nonces[owner].increment();\n        _approve(owner, spender, amount);\n    }\n\n    /**\n     * @dev See {IERC2612Permit-nonces}.\n     */\n    function nonces(address owner) public view override returns (uint256) {\n        return _nonces[owner].current();\n    }\n}\n\n\ncontract newERC20Token is ERC20Permit, Ownable {\n    constructor (address to, string memory name, string memory symbol, uint256 totalSupply)\n    public\n    ERC20 (name, symbol) {\n        _mint(to, totalSupply);\n    }\n\n    function mine(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n\n    function rescueTokens(address token, address destination, uint256 amount) external onlyOwner {\n        require(token != destination, \"Invalid address\");\n        require(ERC20(token).transfer(destination, amount), \"Retrieve failed\");\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":8880:14634  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":8880:14634  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122066316473e040c6077993b04d8192293c848608eb5bdfaed50d98de8b2a3a203d64736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066316473e040c6077993b04d8192293c848608eb5bdfaed50d98de8b2a3a203d64736f6c63430006020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x316473E040C607 PUSH26 0x93B04D8192293C848608EB5BDFAED50D98DE8B2A3A203D64736F PUSH13 0x63430006020033000000000000 ",
							"sourceMap": "8880:5754:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066316473e040c6077993b04d8192293c848608eb5bdfaed50d98de8b2a3a203d64736f6c63430006020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x316473E040C607 PUSH26 0x93B04D8192293C848608EB5BDFAED50D98DE8B2A3A203D64736F PUSH13 0x63430006020033000000000000 ",
							"sourceMap": "8880:5754:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8880,
									"end": 14634,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8880,
									"end": 14634,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066316473e040c6077993b04d8192293c848608eb5bdfaed50d98de8b2a3a203d64736f6c63430006020033",
									".code": [
										{
											"begin": 8880,
											"end": 14634,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 8880,
											"end": 14634,
											"name": "ADDRESS"
										},
										{
											"begin": 8880,
											"end": 14634,
											"name": "EQ"
										},
										{
											"begin": 8880,
											"end": 14634,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8880,
											"end": 14634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8880,
											"end": 14634,
											"name": "MSTORE"
										},
										{
											"begin": 8880,
											"end": 14634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8880,
											"end": 14634,
											"name": "DUP1"
										},
										{
											"begin": 8880,
											"end": 14634,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0xe5bcbefc02f80b7477f0810b17666b89f45c7ba75ad7fb623cdf715668d2ace5\",\"urls\":[\"bzz-raw://6edeffd1f0d9c269b25d4b7f0f4d2493596666489814c487d7bc1b5bdbff2413\",\"dweb:/ipfs/QmQGunwjqiMjppFK4Nq7jZAK27HUUa1Rwh9uXC6pMvTLBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0xe5bcbefc02f80b7477f0810b17666b89f45c7ba75ad7fb623cdf715668d2ace5\",\"urls\":[\"bzz-raw://6edeffd1f0d9c269b25d4b7f0f4d2493596666489814c487d7bc1b5bdbff2413\",\"dweb:/ipfs/QmQGunwjqiMjppFK4Nq7jZAK27HUUa1Rwh9uXC6pMvTLBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":25727:26575  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":25727:26575  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209829b4668346d73a939d43288a623000e1f18d41fb2a1f2af33401cae165f19264736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209829b4668346d73a939d43288a623000e1f18d41fb2a1f2af33401cae165f19264736f6c63430006020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0x29 0xB4 PUSH7 0x8346D73A939D43 0x28 DUP11 PUSH3 0x3000E1 CALL DUP14 COINBASE 0xFB 0x2A 0x1F 0x2A RETURN CALLVALUE ADD 0xCA 0xE1 PUSH6 0xF19264736F6C PUSH4 0x43000602 STOP CALLER ",
							"sourceMap": "25727:848:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209829b4668346d73a939d43288a623000e1f18d41fb2a1f2af33401cae165f19264736f6c63430006020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0x29 0xB4 PUSH7 0x8346D73A939D43 0x28 DUP11 PUSH3 0x3000E1 CALL DUP14 COINBASE 0xFB 0x2A 0x1F 0x2A RETURN CALLVALUE ADD 0xCA 0xE1 PUSH6 0xF19264736F6C PUSH4 0x43000602 STOP CALLER ",
							"sourceMap": "25727:848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25727,
									"end": 26575,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25727,
									"end": 26575,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209829b4668346d73a939d43288a623000e1f18d41fb2a1f2af33401cae165f19264736f6c63430006020033",
									".code": [
										{
											"begin": 25727,
											"end": 26575,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 25727,
											"end": 26575,
											"name": "ADDRESS"
										},
										{
											"begin": 25727,
											"end": 26575,
											"name": "EQ"
										},
										{
											"begin": 25727,
											"end": 26575,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25727,
											"end": 26575,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25727,
											"end": 26575,
											"name": "MSTORE"
										},
										{
											"begin": 25727,
											"end": 26575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25727,
											"end": 26575,
											"name": "DUP1"
										},
										{
											"begin": 25727,
											"end": 26575,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0xe5bcbefc02f80b7477f0810b17666b89f45c7ba75ad7fb623cdf715668d2ace5\",\"urls\":[\"bzz-raw://6edeffd1f0d9c269b25d4b7f0f4d2493596666489814c487d7bc1b5bdbff2413\",\"dweb:/ipfs/QmQGunwjqiMjppFK4Nq7jZAK27HUUa1Rwh9uXC6pMvTLBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18.     * To select a different value for {decimals}, use {_setupDecimals}.     * All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":14636:24080  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":15304:15445  constructor (string memory name, string memory symbol) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"ERC20.sol\":15304:15445  constructor (string memory name, string memory symbol) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"ERC20.sol\":15304:15445  constructor (string memory name, string memory symbol) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"ERC20.sol\":15304:15445  constructor (string memory name, string memory symbol) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"ERC20.sol\":15304:15445  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"ERC20.sol\":15304:15445  constructor (string memory name, string memory symbol) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"ERC20.sol\":15304:15445  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"ERC20.sol\":15384:15388  name */\n  dup2\n    /* \"ERC20.sol\":15376:15381  _name */\n  0x03\n    /* \"ERC20.sol\":15376:15388  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"ERC20.sol\":15408:15414  symbol */\n  dup1\n    /* \"ERC20.sol\":15398:15405  _symbol */\n  0x04\n    /* \"ERC20.sol\":15398:15414  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"ERC20.sol\":15436:15438  18 */\n  0x12\n    /* \"ERC20.sol\":15424:15433  _decimals */\n  0x05\n  0x00\n    /* \"ERC20.sol\":15424:15438  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":15304:15445  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n    /* \"ERC20.sol\":14636:24080  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\n  tag_29\n  swap2\n  swap1\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_30)\ntag_31:\n  pop\n  swap1\n  jump\ntag_29:\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":14636:24080  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ERC20.sol\":14636:24080  contract ERC20 is Context, IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":15510:15591  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_17:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_17)\n    tag_19:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ERC20.sol\":15510:15591  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":17546:17712  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"ERC20.sol\":17546:17712  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":16553:16651  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":18172:18489  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"ERC20.sol\":18172:18489  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":16412:16493  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":18884:19099  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"ERC20.sol\":18884:19099  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":16709:16826  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n        /* \"ERC20.sol\":16709:16826  function balanceOf(address account) public view override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":15704:15789  function symbol() public view returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_39:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_39)\n    tag_41:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ERC20.sol\":15704:15789  function symbol() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":19586:19852  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"ERC20.sol\":19586:19852  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":17029:17201  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"ERC20.sol\":17029:17201  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":17259:17408  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"ERC20.sol\":17259:17408  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":15510:15591  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"ERC20.sol\":15547:15560  string memory */\n      0x60\n        /* \"ERC20.sol\":15579:15584  _name */\n      0x03\n        /* \"ERC20.sol\":15572:15584  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":15510:15591  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":17546:17712  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"ERC20.sol\":17629:17633  bool */\n      0x00\n        /* \"ERC20.sol\":17645:17684  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"ERC20.sol\":17654:17666  _msgSender() */\n      tag_58\n        /* \"ERC20.sol\":17654:17664  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":17654:17666  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"ERC20.sol\":17668:17675  spender */\n      dup5\n        /* \"ERC20.sol\":17677:17683  amount */\n      dup5\n        /* \"ERC20.sol\":17645:17653  _approve */\n      tag_60\n        /* \"ERC20.sol\":17645:17684  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"ERC20.sol\":17701:17705  true */\n      0x01\n        /* \"ERC20.sol\":17694:17705  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":17546:17712  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":16553:16651  function totalSupply() public view override returns (uint256) {... */\n    tag_25:\n        /* \"ERC20.sol\":16606:16613  uint256 */\n      0x00\n        /* \"ERC20.sol\":16632:16644  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":16625:16644  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20.sol\":16553:16651  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":18172:18489  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"ERC20.sol\":18278:18282  bool */\n      0x00\n        /* \"ERC20.sol\":18294:18330  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"ERC20.sol\":18304:18310  sender */\n      dup5\n        /* \"ERC20.sol\":18312:18321  recipient */\n      dup5\n        /* \"ERC20.sol\":18323:18329  amount */\n      dup5\n        /* \"ERC20.sol\":18294:18303  _transfer */\n      tag_64\n        /* \"ERC20.sol\":18294:18330  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"ERC20.sol\":18340:18461  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"ERC20.sol\":18349:18355  sender */\n      dup5\n        /* \"ERC20.sol\":18357:18369  _msgSender() */\n      tag_66\n        /* \"ERC20.sol\":18357:18367  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":18357:18369  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"ERC20.sol\":18371:18460  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"ERC20.sol\":18409:18415  amount */\n      dup6\n        /* \"ERC20.sol\":18371:18460  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"ERC20.sol\":18371:18382  _allowances */\n      0x01\n        /* \"ERC20.sol\":18371:18390  _allowances[sender] */\n      0x00\n        /* \"ERC20.sol\":18383:18389  sender */\n      dup12\n        /* \"ERC20.sol\":18371:18390  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":18371:18404  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":18391:18403  _msgSender() */\n      tag_68\n        /* \"ERC20.sol\":18391:18401  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":18391:18403  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"ERC20.sol\":18371:18404  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":18371:18408  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"ERC20.sol\":18371:18460  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"ERC20.sol\":18340:18348  _approve */\n      tag_60\n        /* \"ERC20.sol\":18340:18461  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"ERC20.sol\":18478:18482  true */\n      0x01\n        /* \"ERC20.sol\":18471:18482  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":18172:18489  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":16412:16493  function decimals() public view returns (uint8) {... */\n    tag_30:\n        /* \"ERC20.sol\":16453:16458  uint8 */\n      0x00\n        /* \"ERC20.sol\":16477:16486  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC20.sol\":16470:16486  return _decimals */\n      swap1\n      pop\n        /* \"ERC20.sol\":16412:16493  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":18884:19099  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"ERC20.sol\":18972:18976  bool */\n      0x00\n        /* \"ERC20.sol\":18988:19071  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"ERC20.sol\":18997:19009  _msgSender() */\n      tag_73\n        /* \"ERC20.sol\":18997:19007  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":18997:19009  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"ERC20.sol\":19011:19018  spender */\n      dup5\n        /* \"ERC20.sol\":19020:19070  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"ERC20.sol\":19059:19069  addedValue */\n      dup6\n        /* \"ERC20.sol\":19020:19031  _allowances */\n      0x01\n        /* \"ERC20.sol\":19020:19045  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":19032:19044  _msgSender() */\n      tag_75\n        /* \"ERC20.sol\":19032:19042  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":19032:19044  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"ERC20.sol\":19020:19045  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":19020:19054  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":19046:19053  spender */\n      dup10\n        /* \"ERC20.sol\":19020:19054  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":19020:19058  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"ERC20.sol\":19020:19070  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"ERC20.sol\":18988:18996  _approve */\n      tag_60\n        /* \"ERC20.sol\":18988:19071  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"ERC20.sol\":19088:19092  true */\n      0x01\n        /* \"ERC20.sol\":19081:19092  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":18884:19099  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":16709:16826  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_36:\n        /* \"ERC20.sol\":16775:16782  uint256 */\n      0x00\n        /* \"ERC20.sol\":16801:16810  _balances */\n      dup1\n        /* \"ERC20.sol\":16801:16819  _balances[account] */\n      0x00\n        /* \"ERC20.sol\":16811:16818  account */\n      dup4\n        /* \"ERC20.sol\":16801:16819  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":16794:16819  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20.sol\":16709:16826  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":15704:15789  function symbol() public view returns (string memory) {... */\n    tag_38:\n        /* \"ERC20.sol\":15743:15756  string memory */\n      0x60\n        /* \"ERC20.sol\":15775:15782  _symbol */\n      0x04\n        /* \"ERC20.sol\":15768:15782  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":15704:15789  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":19586:19852  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"ERC20.sol\":19679:19683  bool */\n      0x00\n        /* \"ERC20.sol\":19695:19824  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"ERC20.sol\":19704:19716  _msgSender() */\n      tag_84\n        /* \"ERC20.sol\":19704:19714  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":19704:19716  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"ERC20.sol\":19718:19725  spender */\n      dup5\n        /* \"ERC20.sol\":19727:19823  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"ERC20.sol\":19766:19781  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":19727:19823  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":19727:19738  _allowances */\n      0x01\n        /* \"ERC20.sol\":19727:19752  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":19739:19751  _msgSender() */\n      tag_86\n        /* \"ERC20.sol\":19739:19749  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":19739:19751  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"ERC20.sol\":19727:19752  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":19727:19761  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":19753:19760  spender */\n      dup11\n        /* \"ERC20.sol\":19727:19761  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":19727:19765  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"ERC20.sol\":19727:19823  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"ERC20.sol\":19695:19703  _approve */\n      tag_60\n        /* \"ERC20.sol\":19695:19824  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"ERC20.sol\":19841:19845  true */\n      0x01\n        /* \"ERC20.sol\":19834:19845  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":19586:19852  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":17029:17201  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"ERC20.sol\":17115:17119  bool */\n      0x00\n        /* \"ERC20.sol\":17131:17173  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"ERC20.sol\":17141:17153  _msgSender() */\n      tag_89\n        /* \"ERC20.sol\":17141:17151  _msgSender */\n      tag_59\n        /* \"ERC20.sol\":17141:17153  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"ERC20.sol\":17155:17164  recipient */\n      dup5\n        /* \"ERC20.sol\":17166:17172  amount */\n      dup5\n        /* \"ERC20.sol\":17131:17140  _transfer */\n      tag_64\n        /* \"ERC20.sol\":17131:17173  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"ERC20.sol\":17190:17194  true */\n      0x01\n        /* \"ERC20.sol\":17183:17194  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":17029:17201  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":17259:17408  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"ERC20.sol\":17348:17355  uint256 */\n      0x00\n        /* \"ERC20.sol\":17374:17385  _allowances */\n      0x01\n        /* \"ERC20.sol\":17374:17392  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":17386:17391  owner */\n      dup5\n        /* \"ERC20.sol\":17374:17392  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":17374:17401  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":17393:17400  spender */\n      dup4\n        /* \"ERC20.sol\":17374:17401  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":17367:17401  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":17259:17408  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":589:693  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"ERC20.sol\":642:657  address payable */\n      0x00\n        /* \"ERC20.sol\":676:686  msg.sender */\n      caller\n        /* \"ERC20.sol\":669:686  return msg.sender */\n      swap1\n      pop\n        /* \"ERC20.sol\":589:693  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":22648:22988  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"ERC20.sol\":22766:22767  0 */\n      0x00\n        /* \"ERC20.sol\":22749:22768  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":22749:22754  owner */\n      dup4\n        /* \"ERC20.sol\":22749:22768  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":22741:22809  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"ERC20.sol\":22846:22847  0 */\n      0x00\n        /* \"ERC20.sol\":22827:22848  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":22827:22834  spender */\n      dup3\n        /* \"ERC20.sol\":22827:22848  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":22819:22887  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"ERC20.sol\":22928:22934  amount */\n      dup1\n        /* \"ERC20.sol\":22898:22909  _allowances */\n      0x01\n        /* \"ERC20.sol\":22898:22916  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":22910:22915  owner */\n      dup6\n        /* \"ERC20.sol\":22898:22916  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":22898:22925  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":22917:22924  spender */\n      dup5\n        /* \"ERC20.sol\":22898:22925  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":22898:22934  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":22965:22972  spender */\n      dup2\n        /* \"ERC20.sol\":22949:22981  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":22958:22963  owner */\n      dup4\n        /* \"ERC20.sol\":22949:22981  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":22974:22980  amount */\n      dup4\n        /* \"ERC20.sol\":22949:22981  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":22648:22988  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":20326:20856  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"ERC20.sol\":20449:20450  0 */\n      0x00\n        /* \"ERC20.sol\":20431:20451  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":20431:20437  sender */\n      dup4\n        /* \"ERC20.sol\":20431:20451  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":20423:20493  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"ERC20.sol\":20532:20533  0 */\n      0x00\n        /* \"ERC20.sol\":20511:20534  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":20511:20520  recipient */\n      dup3\n        /* \"ERC20.sol\":20511:20534  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":20503:20574  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"ERC20.sol\":20585:20632  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"ERC20.sol\":20606:20612  sender */\n      dup4\n        /* \"ERC20.sol\":20614:20623  recipient */\n      dup4\n        /* \"ERC20.sol\":20625:20631  amount */\n      dup4\n        /* \"ERC20.sol\":20585:20605  _beforeTokenTransfer */\n      tag_99\n        /* \"ERC20.sol\":20585:20632  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"ERC20.sol\":20663:20734  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"ERC20.sol\":20685:20691  amount */\n      dup2\n        /* \"ERC20.sol\":20663:20734  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"ERC20.sol\":20663:20672  _balances */\n      0x00\n        /* \"ERC20.sol\":20663:20680  _balances[sender] */\n      dup1\n        /* \"ERC20.sol\":20673:20679  sender */\n      dup8\n        /* \"ERC20.sol\":20663:20680  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":20663:20684  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"ERC20.sol\":20663:20734  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"ERC20.sol\":20643:20652  _balances */\n      0x00\n        /* \"ERC20.sol\":20643:20660  _balances[sender] */\n      dup1\n        /* \"ERC20.sol\":20653:20659  sender */\n      dup6\n        /* \"ERC20.sol\":20643:20660  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":20643:20734  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":20767:20799  _balances[recipient].add(amount) */\n      tag_101\n        /* \"ERC20.sol\":20792:20798  amount */\n      dup2\n        /* \"ERC20.sol\":20767:20776  _balances */\n      0x00\n        /* \"ERC20.sol\":20767:20787  _balances[recipient] */\n      dup1\n        /* \"ERC20.sol\":20777:20786  recipient */\n      dup6\n        /* \"ERC20.sol\":20767:20787  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":20767:20791  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"ERC20.sol\":20767:20799  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"ERC20.sol\":20744:20753  _balances */\n      0x00\n        /* \"ERC20.sol\":20744:20764  _balances[recipient] */\n      dup1\n        /* \"ERC20.sol\":20754:20763  recipient */\n      dup5\n        /* \"ERC20.sol\":20744:20764  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":20744:20799  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":20831:20840  recipient */\n      dup2\n        /* \"ERC20.sol\":20814:20849  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":20823:20829  sender */\n      dup4\n        /* \"ERC20.sol\":20814:20849  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":20842:20848  amount */\n      dup4\n        /* \"ERC20.sol\":20814:20849  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":20326:20856  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5324:5511  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"ERC20.sol\":5410:5417  uint256 */\n      0x00\n        /* \"ERC20.sol\":5442:5443  a */\n      dup4\n        /* \"ERC20.sol\":5437:5438  b */\n      dup4\n        /* \"ERC20.sol\":5437:5443  b <= a */\n      gt\n      iszero\n        /* \"ERC20.sol\":5445:5457  errorMessage */\n      dup3\n        /* \"ERC20.sol\":5429:5458  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_104:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_104)\n    tag_106:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ERC20.sol\":5429:5458  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"ERC20.sol\":5468:5477  uint256 c */\n      0x00\n        /* \"ERC20.sol\":5484:5485  b */\n      dup4\n        /* \"ERC20.sol\":5480:5481  a */\n      dup6\n        /* \"ERC20.sol\":5480:5485  a - b */\n      sub\n        /* \"ERC20.sol\":5468:5485  uint256 c = a - b */\n      swap1\n      pop\n        /* \"ERC20.sol\":5503:5504  c */\n      dup1\n        /* \"ERC20.sol\":5496:5504  return c */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":5324:5511  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4452:4628  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"ERC20.sol\":4510:4517  uint256 */\n      0x00\n        /* \"ERC20.sol\":4529:4538  uint256 c */\n      dup1\n        /* \"ERC20.sol\":4545:4546  b */\n      dup3\n        /* \"ERC20.sol\":4541:4542  a */\n      dup5\n        /* \"ERC20.sol\":4541:4546  a + b */\n      add\n        /* \"ERC20.sol\":4529:4546  uint256 c = a + b */\n      swap1\n      pop\n        /* \"ERC20.sol\":4569:4570  a */\n      dup4\n        /* \"ERC20.sol\":4564:4565  c */\n      dup2\n        /* \"ERC20.sol\":4564:4570  c >= a */\n      lt\n      iszero\n        /* \"ERC20.sol\":4556:4602  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"ERC20.sol\":4620:4621  c */\n      dup1\n        /* \"ERC20.sol\":4613:4621  return c */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":4452:4628  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":23986:24078  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212209d4ac624ba63326aabbed3a9e5d25fd7f6b349b6f35986c31449aca7aec52ce864736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620013bb380380620013bb833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002ba565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b620002b791905b80821115620002b357600081600090555060010162000299565b5090565b90565b6110f180620002ca6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025f57806370a08231146102c557806395d89b411461031d578063a457c2d7146103a0578063a9059cbb14610406578063dd62ed3e1461046c576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610586565b604051808215151515815260200191505060405180910390f35b61019f6105a4565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ae565b604051808215151515815260200191505060405180910390f35b610243610687565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6004803603604081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069e565b604051808215151515815260200191505060405180910390f35b610307600480360360208110156102db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b6040518082815260200191505060405180910390f35b610325610799565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ec600480360360408110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061083b565b604051808215151515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610908565b604051808215151515815260200191505060405180910390f35b6104ce6004803603604081101561048257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050905090565b600061059a6105936109ad565b84846109b5565b6001905092915050565b6000600254905090565b60006105bb848484610bac565b61067c846105c76109ad565b6106778560405180606001604052806028815260200161102660289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061062d6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107476106ab6109ad565b8461074285600160006106bc6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6109b5565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905090565b60006108fe6108486109ad565b846108f98560405180606001604052806025815260200161109760259139600160006108726109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b6001905092915050565b600061091c6109156109ad565b8484610bac565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110736024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fde6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061104e6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fbb6023913960400191505060405180910390fd5b610cc3838383610fb5565b610d2e81604051806060016040528060268152602001611000602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dc1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610fab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209d4ac624ba63326aabbed3a9e5d25fd7f6b349b6f35986c31449aca7aec52ce864736f6c63430006020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13BB CODESIZE SUB DUP1 PUSH3 0x13BB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2BA JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2B7 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x299 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10F1 DUP1 PUSH3 0x2CA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46C JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x365 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x392 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x57C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x551 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A PUSH2 0x593 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP5 DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x67C DUP5 PUSH2 0x5C7 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x677 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1026 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x62D PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x747 PUSH2 0x6AB PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x742 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6BC PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x831 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x831 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x814 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE PUSH2 0x848 PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x8F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1097 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x872 PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91C PUSH2 0x915 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1073 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFDE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x104E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFBB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0xD2E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1000 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDC1 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEDF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEC4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF0C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212209D4A 0xC6 0x24 0xBA PUSH4 0x326AABBE 0xD3 0xA9 0xE5 0xD2 0x5F 0xD7 0xF6 0xB3 0x49 0xB6 RETURN MSIZE DUP7 0xC3 EQ 0x49 0xAC 0xA7 0xAE 0xC5 0x2C 0xE8 PUSH5 0x736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "14636:9444:0:-:0;;;15304:141;8:9:-1;5:2;;;30:1;27;20:12;5:2;15304:141:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15304:141:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;15304:141:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15304:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;15304:141:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15304:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15384:4;15376:5;:12;;;;;;;;;;;;:::i;:::-;;15408:6;15398:7;:16;;;;;;;;;;;;:::i;:::-;;15436:2;15424:9;;:14;;;;;;;;;;;;;;;;;;15304:141;;14636:9444;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025f57806370a08231146102c557806395d89b411461031d578063a457c2d7146103a0578063a9059cbb14610406578063dd62ed3e1461046c576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610586565b604051808215151515815260200191505060405180910390f35b61019f6105a4565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ae565b604051808215151515815260200191505060405180910390f35b610243610687565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6004803603604081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069e565b604051808215151515815260200191505060405180910390f35b610307600480360360208110156102db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b6040518082815260200191505060405180910390f35b610325610799565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ec600480360360408110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061083b565b604051808215151515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610908565b604051808215151515815260200191505060405180910390f35b6104ce6004803603604081101561048257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050905090565b600061059a6105936109ad565b84846109b5565b6001905092915050565b6000600254905090565b60006105bb848484610bac565b61067c846105c76109ad565b6106778560405180606001604052806028815260200161102660289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061062d6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107476106ab6109ad565b8461074285600160006106bc6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6109b5565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905090565b60006108fe6108486109ad565b846108f98560405180606001604052806025815260200161109760259139600160006108726109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b6001905092915050565b600061091c6109156109ad565b8484610bac565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110736024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fde6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061104e6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fbb6023913960400191505060405180910390fd5b610cc3838383610fb5565b610d2e81604051806060016040528060268152602001611000602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dc1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610fab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209d4ac624ba63326aabbed3a9e5d25fd7f6b349b6f35986c31449aca7aec52ce864736f6c63430006020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46C JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x365 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x392 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x57C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x551 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A PUSH2 0x593 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP5 DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x67C DUP5 PUSH2 0x5C7 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x677 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1026 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x62D PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x747 PUSH2 0x6AB PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x742 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6BC PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x831 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x831 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x814 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE PUSH2 0x848 PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x8F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1097 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x872 PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91C PUSH2 0x915 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1073 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFDE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x104E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFBB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0xD2E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1000 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDC1 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEDF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEC4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF0C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212209D4A 0xC6 0x24 0xBA PUSH4 0x326AABBE 0xD3 0xA9 0xE5 0xD2 0x5F 0xD7 0xF6 0xB3 0x49 0xB6 RETURN MSIZE DUP7 0xC3 EQ 0x49 0xAC 0xA7 0xAE 0xC5 0x2C 0xE8 PUSH5 0x736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "14636:9444:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14636:9444:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15510:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15510:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17546:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17546:166:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16553:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18172:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18172:317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16412:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;18884:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18884:215:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16709:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16709:117:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15704:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15704:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19586:266;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19586:266:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17029:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17029:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17259:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17259:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15510:81;15547:13;15579:5;15572:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15510:81;:::o;17546:166::-;17629:4;17645:39;17654:12;:10;:12::i;:::-;17668:7;17677:6;17645:8;:39::i;:::-;17701:4;17694:11;;17546:166;;;;:::o;16553:98::-;16606:7;16632:12;;16625:19;;16553:98;:::o;18172:317::-;18278:4;18294:36;18304:6;18312:9;18323:6;18294:9;:36::i;:::-;18340:121;18349:6;18357:12;:10;:12::i;:::-;18371:89;18409:6;18371:89;;;;;;;;;;;;;;;;;:11;:19;18383:6;18371:19;;;;;;;;;;;;;;;:33;18391:12;:10;:12::i;:::-;18371:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;18340:8;:121::i;:::-;18478:4;18471:11;;18172:317;;;;;:::o;16412:81::-;16453:5;16477:9;;;;;;;;;;;16470:16;;16412:81;:::o;18884:215::-;18972:4;18988:83;18997:12;:10;:12::i;:::-;19011:7;19020:50;19059:10;19020:11;:25;19032:12;:10;:12::i;:::-;19020:25;;;;;;;;;;;;;;;:34;19046:7;19020:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;18988:8;:83::i;:::-;19088:4;19081:11;;18884:215;;;;:::o;16709:117::-;16775:7;16801:9;:18;16811:7;16801:18;;;;;;;;;;;;;;;;16794:25;;16709:117;;;:::o;15704:85::-;15743:13;15775:7;15768:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15704:85;:::o;19586:266::-;19679:4;19695:129;19704:12;:10;:12::i;:::-;19718:7;19727:96;19766:15;19727:96;;;;;;;;;;;;;;;;;:11;:25;19739:12;:10;:12::i;:::-;19727:25;;;;;;;;;;;;;;;:34;19753:7;19727:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;19695:8;:129::i;:::-;19841:4;19834:11;;19586:266;;;;:::o;17029:172::-;17115:4;17131:42;17141:12;:10;:12::i;:::-;17155:9;17166:6;17131:9;:42::i;:::-;17190:4;17183:11;;17029:172;;;;:::o;17259:149::-;17348:7;17374:11;:18;17386:5;17374:18;;;;;;;;;;;;;;;:27;17393:7;17374:27;;;;;;;;;;;;;;;;17367:34;;17259:149;;;;:::o;589:104::-;642:15;676:10;669:17;;589:104;:::o;22648:340::-;22766:1;22749:19;;:5;:19;;;;22741:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22846:1;22827:21;;:7;:21;;;;22819:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22928:6;22898:11;:18;22910:5;22898:18;;;;;;;;;;;;;;;:27;22917:7;22898:27;;;;;;;;;;;;;;;:36;;;;22965:7;22949:32;;22958:5;22949:32;;;22974:6;22949:32;;;;;;;;;;;;;;;;;;22648:340;;;:::o;20326:530::-;20449:1;20431:20;;:6;:20;;;;20423:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20532:1;20511:23;;:9;:23;;;;20503:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20585:47;20606:6;20614:9;20625:6;20585:20;:47::i;:::-;20663:71;20685:6;20663:71;;;;;;;;;;;;;;;;;:9;:17;20673:6;20663:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;20643:9;:17;20653:6;20643:17;;;;;;;;;;;;;;;:91;;;;20767:32;20792:6;20767:9;:20;20777:9;20767:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;20744:9;:20;20754:9;20744:20;;;;;;;;;;;;;;;:55;;;;20831:9;20814:35;;20823:6;20814:35;;;20842:6;20814:35;;;;;;;;;;;;;;;;;;20326:530;;;:::o;5324:187::-;5410:7;5442:1;5437;:6;;5445:12;5429:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5429:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5468:9;5484:1;5480;:5;5468:17;;5503:1;5496:8;;;5324:187;;;;;:::o;4452:176::-;4510:7;4529:9;4545:1;4541;:5;4529:17;;4569:1;4564;:6;;4556:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4620:1;4613:8;;;4452:176;;;;:::o;23986:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "867400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1150",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "MSTORE"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MLOAD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSHSIZE"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "CODESIZE"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SUB"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSHSIZE"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP4"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "CODECOPY"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ADD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ADD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MLOAD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MLOAD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP4"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP3"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MLOAD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ADD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP4"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ADD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "AND"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ISZERO"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "JUMPI"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP3"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SUB"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MLOAD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP4"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SUB"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "EXP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SUB"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "NOT"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "AND"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MSTORE"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ADD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "JUMPDEST"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MSTORE"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ADD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MLOAD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MLOAD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP4"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP3"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MLOAD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ADD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP4"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ADD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "AND"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ISZERO"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "JUMPI"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP3"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SUB"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MLOAD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP4"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SUB"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "EXP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SUB"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "NOT"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "AND"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "DUP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MSTORE"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "ADD"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "SWAP2"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "JUMPDEST"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "MSTORE"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15384,
									"end": 15388,
									"name": "DUP2"
								},
								{
									"begin": 15376,
									"end": 15381,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP1"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "DUP1"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "MLOAD"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP1"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "ADD"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP1"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP3"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP2"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP1"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "JUMPDEST"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "POP"
								},
								{
									"begin": 15408,
									"end": 15414,
									"name": "DUP1"
								},
								{
									"begin": 15398,
									"end": 15405,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP1"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "DUP1"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "MLOAD"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP1"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "ADD"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP1"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP3"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP2"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP1"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "JUMPDEST"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "POP"
								},
								{
									"begin": 15436,
									"end": 15438,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 15424,
									"end": 15433,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 15424,
									"end": 15433,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "EXP"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "DUP2"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "SLOAD"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "DUP2"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "MUL"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "NOT"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "AND"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "SWAP1"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "DUP4"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "AND"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "MUL"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "OR"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "SWAP1"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "SSTORE"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP3"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SLOAD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP2"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "AND"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ISZERO"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "MUL"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SUB"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "AND"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DIV"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "MSTORE"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "KECCAK256"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ADD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DIV"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP2"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ADD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP3"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP3"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "LT"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPI"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "MLOAD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "NOT"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "AND"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP4"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ADD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "OR"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP6"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SSTORE"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP3"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ADD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ADD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP6"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SSTORE"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP3"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ISZERO"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPI"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP2"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP3"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ADD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP3"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP2"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "GT"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ISZERO"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPI"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP3"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "MLOAD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP3"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SSTORE"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP2"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ADD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP2"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ADD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "POP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "POP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP2"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "POP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP2"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP3"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "GT"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ISZERO"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPI"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP2"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SSTORE"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "POP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "ADD"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "POP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMP"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "SWAP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "JUMPDEST"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "DUP1"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "CODECOPY"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 14636,
									"end": 24080,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d4ac624ba63326aabbed3a9e5d25fd7f6b349b6f35986c31449aca7aec52ce864736f6c63430006020033",
									".code": [
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "MSTORE"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "POP"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "LT"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "SHR"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "GT"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMP"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPDEST"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "EQ"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPI"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "JUMPDEST"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "DUP1"
										},
										{
											"begin": 14636,
											"end": 24080,
											"name": "REVERT"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMPDEST"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMPDEST"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MLOAD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ADD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP3"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SUB"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP3"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MSTORE"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP4"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MLOAD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MSTORE"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ADD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MLOAD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ADD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP4"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ADD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "AND"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ISZERO"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMPI"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP3"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SUB"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MLOAD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP4"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SUB"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "EXP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SUB"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "NOT"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "AND"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MSTORE"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ADD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMPDEST"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP3"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MLOAD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SUB"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "RETURN"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "JUMPDEST"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ADD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "AND"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ADD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP3"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ADD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP3"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "JUMPDEST"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "MLOAD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP3"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ISZERO"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ISZERO"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ISZERO"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ISZERO"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "MSTORE"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ADD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "MLOAD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SUB"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "RETURN"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "JUMPDEST"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "JUMPDEST"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "MLOAD"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "DUP1"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "DUP3"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "DUP2"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "MSTORE"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "ADD"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "SWAP2"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "POP"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "POP"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "MLOAD"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "DUP1"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "SWAP2"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "SUB"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "SWAP1"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "RETURN"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "JUMPDEST"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "AND"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP3"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "AND"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP3"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP3"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "JUMPDEST"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "MLOAD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP3"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ISZERO"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ISZERO"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ISZERO"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ISZERO"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "MSTORE"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "MLOAD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SUB"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "RETURN"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "JUMPDEST"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "JUMPDEST"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "MLOAD"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "DUP1"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "DUP3"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "AND"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "AND"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "DUP2"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "MSTORE"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "ADD"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "SWAP2"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "POP"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "POP"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "MLOAD"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "DUP1"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "SWAP2"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "SUB"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "SWAP1"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "RETURN"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "JUMPDEST"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ADD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "AND"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ADD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP3"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ADD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP3"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "JUMPDEST"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "MLOAD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP3"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ISZERO"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ISZERO"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ISZERO"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ISZERO"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "MSTORE"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ADD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "MLOAD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SUB"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "RETURN"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "JUMPDEST"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "ADD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "AND"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "ADD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP3"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "JUMPDEST"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "MLOAD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP3"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "MSTORE"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "ADD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "MLOAD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SUB"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "RETURN"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMPDEST"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMPDEST"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MLOAD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ADD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP3"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SUB"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP3"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MSTORE"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP4"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MLOAD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MSTORE"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ADD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MLOAD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ADD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP4"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ADD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "AND"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ISZERO"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMPI"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP3"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SUB"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MLOAD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP4"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SUB"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "EXP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SUB"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "NOT"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "AND"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MSTORE"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ADD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMPDEST"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP3"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MLOAD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SUB"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "RETURN"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "JUMPDEST"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ADD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "AND"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ADD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP3"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ADD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP3"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "JUMPDEST"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "MLOAD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP3"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ISZERO"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ISZERO"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ISZERO"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ISZERO"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "MSTORE"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ADD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "MLOAD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SUB"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "RETURN"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "JUMPDEST"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ADD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "AND"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ADD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP3"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ADD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP3"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "JUMPDEST"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "MLOAD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP3"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ISZERO"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ISZERO"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ISZERO"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ISZERO"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "MSTORE"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ADD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "MLOAD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SUB"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "RETURN"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "JUMPDEST"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "ADD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "AND"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "ADD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP3"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "AND"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "ADD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP3"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "JUMPDEST"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "MLOAD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP3"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "MSTORE"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "ADD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "MLOAD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SUB"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "RETURN"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMPDEST"
										},
										{
											"begin": 15547,
											"end": 15560,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15579,
											"end": 15584,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SLOAD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ISZERO"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MUL"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SUB"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DIV"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DIV"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MUL"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MLOAD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SLOAD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ISZERO"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MUL"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SUB"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DIV"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ISZERO"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPI"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "LT"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPI"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP4"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SLOAD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DIV"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MUL"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP4"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPDEST"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "KECCAK256"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPDEST"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SLOAD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP4"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "GT"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPI"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SUB"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPDEST"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "JUMPDEST"
										},
										{
											"begin": 17629,
											"end": 17633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17645,
											"end": 17684,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 17654,
											"end": 17666,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 17654,
											"end": 17666,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17654,
											"end": 17666,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 17654,
											"end": 17666,
											"name": "JUMPDEST"
										},
										{
											"begin": 17668,
											"end": 17675,
											"name": "DUP5"
										},
										{
											"begin": 17677,
											"end": 17683,
											"name": "DUP5"
										},
										{
											"begin": 17645,
											"end": 17653,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 17645,
											"end": 17684,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17645,
											"end": 17684,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 17645,
											"end": 17684,
											"name": "JUMPDEST"
										},
										{
											"begin": 17701,
											"end": 17705,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17694,
											"end": 17705,
											"name": "SWAP1"
										},
										{
											"begin": 17694,
											"end": 17705,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP3"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "JUMPDEST"
										},
										{
											"begin": 16606,
											"end": 16613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16632,
											"end": 16644,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 16632,
											"end": 16644,
											"name": "SLOAD"
										},
										{
											"begin": 16625,
											"end": 16644,
											"name": "SWAP1"
										},
										{
											"begin": 16625,
											"end": 16644,
											"name": "POP"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "SWAP1"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "JUMPDEST"
										},
										{
											"begin": 18278,
											"end": 18282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18294,
											"end": 18330,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 18304,
											"end": 18310,
											"name": "DUP5"
										},
										{
											"begin": 18312,
											"end": 18321,
											"name": "DUP5"
										},
										{
											"begin": 18323,
											"end": 18329,
											"name": "DUP5"
										},
										{
											"begin": 18294,
											"end": 18303,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 18294,
											"end": 18330,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18294,
											"end": 18330,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 18294,
											"end": 18330,
											"name": "JUMPDEST"
										},
										{
											"begin": 18340,
											"end": 18461,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 18349,
											"end": 18355,
											"name": "DUP5"
										},
										{
											"begin": 18357,
											"end": 18369,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 18357,
											"end": 18367,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 18357,
											"end": 18369,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18357,
											"end": 18369,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 18357,
											"end": 18369,
											"name": "JUMPDEST"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 18409,
											"end": 18415,
											"name": "DUP6"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "MLOAD"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "DUP1"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "DUP1"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "DUP2"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "SWAP2"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "CODECOPY"
										},
										{
											"begin": 18371,
											"end": 18382,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18383,
											"end": 18389,
											"name": "DUP12"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "AND"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "AND"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "DUP2"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "SWAP1"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "DUP2"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "KECCAK256"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18391,
											"end": 18403,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 18391,
											"end": 18401,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 18391,
											"end": 18403,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18391,
											"end": 18403,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 18391,
											"end": 18403,
											"name": "JUMPDEST"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "AND"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "AND"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "DUP2"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "SWAP1"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "DUP2"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "KECCAK256"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "SLOAD"
										},
										{
											"begin": 18371,
											"end": 18408,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 18371,
											"end": 18408,
											"name": "SWAP1"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "SWAP3"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "SWAP2"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "SWAP1"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "AND"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "JUMPDEST"
										},
										{
											"begin": 18340,
											"end": 18348,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 18340,
											"end": 18461,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18340,
											"end": 18461,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 18340,
											"end": 18461,
											"name": "JUMPDEST"
										},
										{
											"begin": 18478,
											"end": 18482,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18471,
											"end": 18482,
											"name": "SWAP1"
										},
										{
											"begin": 18471,
											"end": 18482,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP4"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP3"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "JUMPDEST"
										},
										{
											"begin": 16453,
											"end": 16458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "SWAP1"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "SLOAD"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "SWAP1"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "EXP"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "SWAP1"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "DIV"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "AND"
										},
										{
											"begin": 16470,
											"end": 16486,
											"name": "SWAP1"
										},
										{
											"begin": 16470,
											"end": 16486,
											"name": "POP"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "SWAP1"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "JUMPDEST"
										},
										{
											"begin": 18972,
											"end": 18976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18988,
											"end": 19071,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 18997,
											"end": 19009,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 18997,
											"end": 19007,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 18997,
											"end": 19009,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18997,
											"end": 19009,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 18997,
											"end": 19009,
											"name": "JUMPDEST"
										},
										{
											"begin": 19011,
											"end": 19018,
											"name": "DUP5"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 19059,
											"end": 19069,
											"name": "DUP6"
										},
										{
											"begin": 19020,
											"end": 19031,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 19032,
											"end": 19042,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "JUMPDEST"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "AND"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "AND"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "DUP2"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "MSTORE"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "ADD"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "SWAP1"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "DUP2"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "MSTORE"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "ADD"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "KECCAK256"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19046,
											"end": 19053,
											"name": "DUP10"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "AND"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "AND"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "DUP2"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "SWAP1"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "DUP2"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "KECCAK256"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "SLOAD"
										},
										{
											"begin": 19020,
											"end": 19058,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 19020,
											"end": 19058,
											"name": "SWAP1"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "SWAP2"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "SWAP1"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "AND"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "JUMPDEST"
										},
										{
											"begin": 18988,
											"end": 18996,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 18988,
											"end": 19071,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18988,
											"end": 19071,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 18988,
											"end": 19071,
											"name": "JUMPDEST"
										},
										{
											"begin": 19088,
											"end": 19092,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19081,
											"end": 19092,
											"name": "SWAP1"
										},
										{
											"begin": 19081,
											"end": 19092,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP3"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "JUMPDEST"
										},
										{
											"begin": 16775,
											"end": 16782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16801,
											"end": 16810,
											"name": "DUP1"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16811,
											"end": 16818,
											"name": "DUP4"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "AND"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "AND"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "DUP2"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "MSTORE"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "ADD"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "SWAP1"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "DUP2"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "MSTORE"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "ADD"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "KECCAK256"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "SLOAD"
										},
										{
											"begin": 16794,
											"end": 16819,
											"name": "SWAP1"
										},
										{
											"begin": 16794,
											"end": 16819,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMPDEST"
										},
										{
											"begin": 15743,
											"end": 15756,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15775,
											"end": 15782,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SLOAD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "AND"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ISZERO"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MUL"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SUB"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "AND"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DIV"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DIV"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MUL"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MLOAD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MSTORE"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP3"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MSTORE"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP3"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SLOAD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "AND"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ISZERO"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MUL"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SUB"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "AND"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DIV"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ISZERO"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPI"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "LT"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPI"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP4"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SLOAD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DIV"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MUL"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP4"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MSTORE"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPDEST"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP3"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MSTORE"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "KECCAK256"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPDEST"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SLOAD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MSTORE"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP4"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "GT"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPI"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP3"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SUB"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "AND"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP3"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPDEST"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "JUMPDEST"
										},
										{
											"begin": 19679,
											"end": 19683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19695,
											"end": 19824,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 19704,
											"end": 19716,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 19704,
											"end": 19714,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 19704,
											"end": 19716,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19704,
											"end": 19716,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 19704,
											"end": 19716,
											"name": "JUMPDEST"
										},
										{
											"begin": 19718,
											"end": 19725,
											"name": "DUP5"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 19766,
											"end": 19781,
											"name": "DUP6"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "MLOAD"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "DUP1"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "DUP1"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "DUP2"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "SWAP2"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "CODECOPY"
										},
										{
											"begin": 19727,
											"end": 19738,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19739,
											"end": 19751,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 19739,
											"end": 19749,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 19739,
											"end": 19751,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19739,
											"end": 19751,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 19739,
											"end": 19751,
											"name": "JUMPDEST"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "AND"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "AND"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "DUP2"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "SWAP1"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "DUP2"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "KECCAK256"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19753,
											"end": 19760,
											"name": "DUP11"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "AND"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "AND"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "DUP2"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "SWAP1"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "DUP2"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "KECCAK256"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "SLOAD"
										},
										{
											"begin": 19727,
											"end": 19765,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 19727,
											"end": 19765,
											"name": "SWAP1"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "SWAP3"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "SWAP2"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "SWAP1"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "AND"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "JUMPDEST"
										},
										{
											"begin": 19695,
											"end": 19703,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 19695,
											"end": 19824,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19695,
											"end": 19824,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 19695,
											"end": 19824,
											"name": "JUMPDEST"
										},
										{
											"begin": 19841,
											"end": 19845,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19834,
											"end": 19845,
											"name": "SWAP1"
										},
										{
											"begin": 19834,
											"end": 19845,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP3"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "JUMPDEST"
										},
										{
											"begin": 17115,
											"end": 17119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17131,
											"end": 17173,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 17141,
											"end": 17153,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 17141,
											"end": 17151,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 17141,
											"end": 17153,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17141,
											"end": 17153,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 17141,
											"end": 17153,
											"name": "JUMPDEST"
										},
										{
											"begin": 17155,
											"end": 17164,
											"name": "DUP5"
										},
										{
											"begin": 17166,
											"end": 17172,
											"name": "DUP5"
										},
										{
											"begin": 17131,
											"end": 17140,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 17131,
											"end": 17173,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17131,
											"end": 17173,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 17131,
											"end": 17173,
											"name": "JUMPDEST"
										},
										{
											"begin": 17190,
											"end": 17194,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17183,
											"end": 17194,
											"name": "SWAP1"
										},
										{
											"begin": 17183,
											"end": 17194,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP3"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "JUMPDEST"
										},
										{
											"begin": 17348,
											"end": 17355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17385,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17386,
											"end": 17391,
											"name": "DUP5"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "AND"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "AND"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "DUP2"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "MSTORE"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "ADD"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "SWAP1"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "DUP2"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "MSTORE"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "ADD"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "KECCAK256"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17393,
											"end": 17400,
											"name": "DUP4"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "AND"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "AND"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "DUP2"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "MSTORE"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "ADD"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "SWAP1"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "DUP2"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "MSTORE"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "ADD"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "KECCAK256"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "SLOAD"
										},
										{
											"begin": 17367,
											"end": 17401,
											"name": "SWAP1"
										},
										{
											"begin": 17367,
											"end": 17401,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP3"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMPDEST"
										},
										{
											"begin": 642,
											"end": 657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 676,
											"end": 686,
											"name": "CALLER"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SWAP1"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "POP"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "JUMPDEST"
										},
										{
											"begin": 22766,
											"end": 22767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "AND"
										},
										{
											"begin": 22749,
											"end": 22754,
											"name": "DUP4"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "AND"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "EQ"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "ISZERO"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "JUMPI"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "MLOAD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "MSTORE"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "ADD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP1"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP1"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "ADD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP3"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SUB"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP3"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "MSTORE"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "MSTORE"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "ADD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP1"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SWAP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "CODECOPY"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "ADD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SWAP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "POP"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "POP"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "MLOAD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP1"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SWAP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SUB"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SWAP1"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "REVERT"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "JUMPDEST"
										},
										{
											"begin": 22846,
											"end": 22847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "AND"
										},
										{
											"begin": 22827,
											"end": 22834,
											"name": "DUP3"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "AND"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "EQ"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "ISZERO"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "JUMPI"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "MLOAD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "MSTORE"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "ADD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP1"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP1"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "ADD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP3"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SUB"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP3"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "MSTORE"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "MSTORE"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "ADD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP1"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SWAP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "CODECOPY"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "ADD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SWAP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "POP"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "POP"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "MLOAD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP1"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SWAP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SUB"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SWAP1"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "REVERT"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "JUMPDEST"
										},
										{
											"begin": 22928,
											"end": 22934,
											"name": "DUP1"
										},
										{
											"begin": 22898,
											"end": 22909,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22910,
											"end": 22915,
											"name": "DUP6"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "AND"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "AND"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "DUP2"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "MSTORE"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "ADD"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "SWAP1"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "DUP2"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "MSTORE"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "ADD"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "KECCAK256"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22917,
											"end": 22924,
											"name": "DUP5"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "AND"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "AND"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "DUP2"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "MSTORE"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "ADD"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "SWAP1"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "DUP2"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "MSTORE"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "ADD"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "KECCAK256"
										},
										{
											"begin": 22898,
											"end": 22934,
											"name": "DUP2"
										},
										{
											"begin": 22898,
											"end": 22934,
											"name": "SWAP1"
										},
										{
											"begin": 22898,
											"end": 22934,
											"name": "SSTORE"
										},
										{
											"begin": 22898,
											"end": 22934,
											"name": "POP"
										},
										{
											"begin": 22965,
											"end": 22972,
											"name": "DUP2"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "AND"
										},
										{
											"begin": 22958,
											"end": 22963,
											"name": "DUP4"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "AND"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 22974,
											"end": 22980,
											"name": "DUP4"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "MLOAD"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "DUP1"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "DUP3"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "DUP2"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "MSTORE"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "ADD"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "SWAP2"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "POP"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "POP"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "MLOAD"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "DUP1"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "SWAP2"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "SUB"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "SWAP1"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "LOG3"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "POP"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "POP"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "POP"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "JUMPDEST"
										},
										{
											"begin": 20449,
											"end": 20450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "AND"
										},
										{
											"begin": 20431,
											"end": 20437,
											"name": "DUP4"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "AND"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "EQ"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "ISZERO"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "JUMPI"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "MLOAD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "MSTORE"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "ADD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP1"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP1"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "ADD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP3"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SUB"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP3"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "MSTORE"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "MSTORE"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "ADD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP1"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SWAP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "CODECOPY"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "ADD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SWAP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "POP"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "POP"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "MLOAD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP1"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SWAP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SUB"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SWAP1"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "REVERT"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "JUMPDEST"
										},
										{
											"begin": 20532,
											"end": 20533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "AND"
										},
										{
											"begin": 20511,
											"end": 20520,
											"name": "DUP3"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "AND"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "EQ"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "ISZERO"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "JUMPI"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "MLOAD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "MSTORE"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "ADD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP1"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP1"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "ADD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP3"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SUB"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP3"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "MSTORE"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "MSTORE"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "ADD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP1"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SWAP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "CODECOPY"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "ADD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SWAP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "POP"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "POP"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "MLOAD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP1"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SWAP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SUB"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SWAP1"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "REVERT"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "JUMPDEST"
										},
										{
											"begin": 20585,
											"end": 20632,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 20606,
											"end": 20612,
											"name": "DUP4"
										},
										{
											"begin": 20614,
											"end": 20623,
											"name": "DUP4"
										},
										{
											"begin": 20625,
											"end": 20631,
											"name": "DUP4"
										},
										{
											"begin": 20585,
											"end": 20605,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 20585,
											"end": 20632,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20585,
											"end": 20632,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 20585,
											"end": 20632,
											"name": "JUMPDEST"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 20685,
											"end": 20691,
											"name": "DUP2"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "MLOAD"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "DUP1"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "ADD"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "MSTORE"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "DUP1"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "DUP2"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "MSTORE"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "ADD"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "SWAP2"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "CODECOPY"
										},
										{
											"begin": 20663,
											"end": 20672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "DUP1"
										},
										{
											"begin": 20673,
											"end": 20679,
											"name": "DUP8"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "AND"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "AND"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "DUP2"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "MSTORE"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "ADD"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "SWAP1"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "DUP2"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "MSTORE"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "ADD"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "KECCAK256"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "SLOAD"
										},
										{
											"begin": 20663,
											"end": 20684,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 20663,
											"end": 20684,
											"name": "SWAP1"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "SWAP3"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "SWAP2"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "SWAP1"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "AND"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "JUMPDEST"
										},
										{
											"begin": 20643,
											"end": 20652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "DUP1"
										},
										{
											"begin": 20653,
											"end": 20659,
											"name": "DUP6"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "AND"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "AND"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "DUP2"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "MSTORE"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "ADD"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "SWAP1"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "DUP2"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "MSTORE"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "ADD"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "KECCAK256"
										},
										{
											"begin": 20643,
											"end": 20734,
											"name": "DUP2"
										},
										{
											"begin": 20643,
											"end": 20734,
											"name": "SWAP1"
										},
										{
											"begin": 20643,
											"end": 20734,
											"name": "SSTORE"
										},
										{
											"begin": 20643,
											"end": 20734,
											"name": "POP"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 20792,
											"end": 20798,
											"name": "DUP2"
										},
										{
											"begin": 20767,
											"end": 20776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "DUP1"
										},
										{
											"begin": 20777,
											"end": 20786,
											"name": "DUP6"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "AND"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "AND"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "DUP2"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "MSTORE"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "ADD"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "SWAP1"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "DUP2"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "MSTORE"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "ADD"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "KECCAK256"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "SLOAD"
										},
										{
											"begin": 20767,
											"end": 20791,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 20767,
											"end": 20791,
											"name": "SWAP1"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "SWAP2"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "SWAP1"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "AND"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "JUMPDEST"
										},
										{
											"begin": 20744,
											"end": 20753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "DUP1"
										},
										{
											"begin": 20754,
											"end": 20763,
											"name": "DUP5"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "AND"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "AND"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "DUP2"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "MSTORE"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "ADD"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "SWAP1"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "DUP2"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "MSTORE"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "ADD"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "KECCAK256"
										},
										{
											"begin": 20744,
											"end": 20799,
											"name": "DUP2"
										},
										{
											"begin": 20744,
											"end": 20799,
											"name": "SWAP1"
										},
										{
											"begin": 20744,
											"end": 20799,
											"name": "SSTORE"
										},
										{
											"begin": 20744,
											"end": 20799,
											"name": "POP"
										},
										{
											"begin": 20831,
											"end": 20840,
											"name": "DUP2"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "AND"
										},
										{
											"begin": 20823,
											"end": 20829,
											"name": "DUP4"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "AND"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20842,
											"end": 20848,
											"name": "DUP4"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "MLOAD"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "DUP1"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "DUP3"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "DUP2"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "MSTORE"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "ADD"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "SWAP2"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "POP"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "POP"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "MLOAD"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "DUP1"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "SWAP2"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "SUB"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "SWAP1"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "LOG3"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "POP"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "POP"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "POP"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "JUMPDEST"
										},
										{
											"begin": 5410,
											"end": 5417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5443,
											"name": "DUP4"
										},
										{
											"begin": 5437,
											"end": 5438,
											"name": "DUP4"
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "GT"
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "ISZERO"
										},
										{
											"begin": 5445,
											"end": 5457,
											"name": "DUP3"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "JUMPI"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MLOAD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MSTORE"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP3"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SUB"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP3"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MSTORE"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP4"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MLOAD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MSTORE"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MLOAD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP4"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "AND"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ISZERO"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "JUMPI"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP3"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SUB"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MLOAD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP4"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SUB"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "EXP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SUB"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "NOT"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "AND"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MSTORE"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "JUMPDEST"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP3"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MLOAD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SUB"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "REVERT"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "JUMPDEST"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5485,
											"name": "DUP4"
										},
										{
											"begin": 5480,
											"end": 5481,
											"name": "DUP6"
										},
										{
											"begin": 5480,
											"end": 5485,
											"name": "SUB"
										},
										{
											"begin": 5468,
											"end": 5485,
											"name": "SWAP1"
										},
										{
											"begin": 5468,
											"end": 5485,
											"name": "POP"
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "DUP1"
										},
										{
											"begin": 5496,
											"end": 5504,
											"name": "SWAP2"
										},
										{
											"begin": 5496,
											"end": 5504,
											"name": "POP"
										},
										{
											"begin": 5496,
											"end": 5504,
											"name": "POP"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "SWAP4"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "JUMPDEST"
										},
										{
											"begin": 4510,
											"end": 4517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4538,
											"name": "DUP1"
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP3"
										},
										{
											"begin": 4541,
											"end": 4542,
											"name": "DUP5"
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "ADD"
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "POP"
										},
										{
											"begin": 4569,
											"end": 4570,
											"name": "DUP4"
										},
										{
											"begin": 4564,
											"end": 4565,
											"name": "DUP2"
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "LT"
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "ISZERO"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "JUMPI"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MLOAD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP1"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP1"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP3"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "SUB"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP3"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP1"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "POP"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "SWAP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "POP"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "POP"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MLOAD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP1"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "SWAP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "SUB"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "SWAP1"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "REVERT"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "JUMPDEST"
										},
										{
											"begin": 4620,
											"end": 4621,
											"name": "DUP1"
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "SWAP2"
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "POP"
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "POP"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "SWAP3"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "SWAP2"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "POP"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "POP"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "JUMPDEST"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "POP"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "POP"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "POP"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18.     * To select a different value for {decimals}, use {_setupDecimals}.     * All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0xe5bcbefc02f80b7477f0810b17666b89f45c7ba75ad7fb623cdf715668d2ace5\",\"urls\":[\"bzz-raw://6edeffd1f0d9c269b25d4b7f0f4d2493596666489814c487d7bc1b5bdbff2413\",\"dweb:/ipfs/QmQGunwjqiMjppFK4Nq7jZAK27HUUa1Rwh9uXC6pMvTLBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 474,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 480,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 482,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 484,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 486,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 488,
								"contract": "ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}.     "
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.     \"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0xe5bcbefc02f80b7477f0810b17666b89f45c7ba75ad7fb623cdf715668d2ace5\",\"urls\":[\"bzz-raw://6edeffd1f0d9c269b25d4b7f0f4d2493596666489814c487d7bc1b5bdbff2413\",\"dweb:/ipfs/QmQGunwjqiMjppFK4Nq7jZAK27HUUa1Rwh9uXC6pMvTLBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 474,
								"contract": "ERC20.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 480,
								"contract": "ERC20.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 482,
								"contract": "ERC20.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 484,
								"contract": "ERC20.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 486,
								"contract": "ERC20.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 488,
								"contract": "ERC20.sol:ERC20Permit",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1124,
								"contract": "ERC20.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)1048_storage)"
							},
							{
								"astId": 1129,
								"contract": "ERC20.sol:ERC20Permit",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)1048_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)1048_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1048_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1047,
										"contract": "ERC20.sol:ERC20Permit",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0xe5bcbefc02f80b7477f0810b17666b89f45c7ba75ad7fb623cdf715668d2ace5\",\"urls\":[\"bzz-raw://6edeffd1f0d9c269b25d4b7f0f4d2493596666489814c487d7bc1b5bdbff2413\",\"dweb:/ipfs/QmQGunwjqiMjppFK4Nq7jZAK27HUUa1Rwh9uXC6pMvTLBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IERC2612Permit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC2612 standard as defined in the EIP. * Adds the {permit} method, which can be used to change one's {IERC20-allowance} without having to send a transaction, by signing a message. This allows users to spend tokens without having to hold Ether. * See https://eips.ethereum.org/EIPS/eip-2612.",
						"methods": {
							"nonces(address)": {
								"details": "Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}.     * Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval.     * IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here.     * Emits an {Approval} event.     * Requirements:     * - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}).     * For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC2612 standard as defined in the EIP. * Adds the {permit} method, which can be used to change one's {IERC20-allowance} without having to send a transaction, by signing a message. This allows users to spend tokens without having to hold Ether. * See https://eips.ethereum.org/EIPS/eip-2612.\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the current ERC2612 nonce for `owner`. This value must be included whenever a signature is generated for {permit}.     * Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval.     * IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here.     * Emits an {Approval} event.     * Requirements:     * - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}).     * For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"IERC2612Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0xe5bcbefc02f80b7477f0810b17666b89f45c7ba75ad7fb623cdf715668d2ace5\",\"urls\":[\"bzz-raw://6edeffd1f0d9c269b25d4b7f0f4d2493596666489814c487d7bc1b5bdbff2413\",\"dweb:/ipfs/QmQGunwjqiMjppFK4Nq7jZAK27HUUa1Rwh9uXC6pMvTLBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0xe5bcbefc02f80b7477f0810b17666b89f45c7ba75ad7fb623cdf715668d2ace5\",\"urls\":[\"bzz-raw://6edeffd1f0d9c269b25d4b7f0f4d2493596666489814c487d7bc1b5bdbff2413\",\"dweb:/ipfs/QmQGunwjqiMjppFK4Nq7jZAK27HUUa1Rwh9uXC6pMvTLBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 946,
								"contract": "ERC20.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":4200:8778  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":4200:8778  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b2b3ac05c319c4efb737291465fd0267001c40eae2fab9854a9eb04034db71c564736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b2b3ac05c319c4efb737291465fd0267001c40eae2fab9854a9eb04034db71c564736f6c63430006020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xB3 0xAC SDIV 0xC3 NOT 0xC4 0xEF 0xB7 CALLDATACOPY 0x29 EQ PUSH6 0xFD0267001C40 0xEA 0xE2 STATICCALL 0xB9 DUP6 0x4A SWAP15 0xB0 BLOCKHASH CALLVALUE 0xDB PUSH18 0xC564736F6C63430006020033000000000000 ",
							"sourceMap": "4200:4578:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b2b3ac05c319c4efb737291465fd0267001c40eae2fab9854a9eb04034db71c564736f6c63430006020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xB3 0xAC SDIV 0xC3 NOT 0xC4 0xEF 0xB7 CALLDATACOPY 0x29 EQ PUSH6 0xFD0267001C40 0xEA 0xE2 STATICCALL 0xB9 DUP6 0x4A SWAP15 0xB0 BLOCKHASH CALLVALUE 0xDB PUSH18 0xC564736F6C63430006020033000000000000 ",
							"sourceMap": "4200:4578:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4200,
									"end": 8778,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4200,
									"end": 8778,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2b3ac05c319c4efb737291465fd0267001c40eae2fab9854a9eb04034db71c564736f6c63430006020033",
									".code": [
										{
											"begin": 4200,
											"end": 8778,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4200,
											"end": 8778,
											"name": "ADDRESS"
										},
										{
											"begin": 4200,
											"end": 8778,
											"name": "EQ"
										},
										{
											"begin": 4200,
											"end": 8778,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4200,
											"end": 8778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4200,
											"end": 8778,
											"name": "MSTORE"
										},
										{
											"begin": 4200,
											"end": 8778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 8778,
											"name": "DUP1"
										},
										{
											"begin": 4200,
											"end": 8778,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0xe5bcbefc02f80b7477f0810b17666b89f45c7ba75ad7fb623cdf715668d2ace5\",\"urls\":[\"bzz-raw://6edeffd1f0d9c269b25d4b7f0f4d2493596666489814c487d7bc1b5bdbff2413\",\"dweb:/ipfs/QmQGunwjqiMjppFK4Nq7jZAK27HUUa1Rwh9uXC6pMvTLBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"newERC20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mine",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "destination",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "See {IERC2612Permit-nonces}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "See {IERC2612Permit-permit}.     "
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":30312:30875  contract newERC20Token is ERC20Permit, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":30365:30528  constructor (address to, string memory name, string memory symbol, uint256 totalSupply)... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"ERC20.sol\":30365:30528  constructor (address to, string memory name, string memory symbol, uint256 totalSupply)... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:16   */\n  0x80\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:17   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"ERC20.sol\":30365:30528  constructor (address to, string memory name, string memory symbol, uint256 totalSupply)... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"ERC20.sol\":30365:30528  constructor (address to, string memory name, string memory symbol, uint256 totalSupply)... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"ERC20.sol\":30365:30528  constructor (address to, string memory name, string memory symbol, uint256 totalSupply)... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"ERC20.sol\":30365:30528  constructor (address to, string memory name, string memory symbol, uint256 totalSupply)... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"ERC20.sol\":30365:30528  constructor (address to, string memory name, string memory symbol, uint256 totalSupply)... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"ERC20.sol\":30475:30479  name */\n  dup3\n    /* \"ERC20.sol\":30481:30487  symbol */\n  dup3\n    /* \"ERC20.sol\":15384:15388  name */\n  dup2\n    /* \"ERC20.sol\":15376:15381  _name */\n  0x03\n    /* \"ERC20.sol\":15376:15388  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_22\n  swap3\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  pop\n    /* \"ERC20.sol\":15408:15414  symbol */\n  dup1\n    /* \"ERC20.sol\":15398:15405  _symbol */\n  0x04\n    /* \"ERC20.sol\":15398:15414  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_24\n  swap3\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_24:\n  pop\n    /* \"ERC20.sol\":15436:15438  18 */\n  0x12\n    /* \"ERC20.sol\":15424:15433  _decimals */\n  0x05\n  0x00\n    /* \"ERC20.sol\":15424:15438  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":15304:15445  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n    /* \"ERC20.sol\":28741:28756  uint256 chainID */\n  0x00\n    /* \"ERC20.sol\":28800:28809  chainid() */\n  chainid\n    /* \"ERC20.sol\":28789:28809  chainID := chainid() */\n  swap1\n  pop\n    /* \"ERC20.sol\":28899:28994  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"ERC20.sol\":29028:29034  name() */\n  tag_26\n    /* \"ERC20.sol\":29028:29032  name */\n  shl(0x20, tag_27)\n    /* \"ERC20.sol\":29028:29034  name() */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"ERC20.sol\":29012:29036  keccak256(bytes(name())) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"ERC20.sol\":29064:29074  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"ERC20.sol\":29054:29075  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"ERC20.sol\":29104:29111  chainID */\n  dup4\n    /* \"ERC20.sol\":29137:29141  this */\n  address\n    /* \"ERC20.sol\":28871:29156  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"ERC20.sol\":28871:29156  abi.encode(... */\n  swap1\n  0x40\n  mstore\n    /* \"ERC20.sol\":28848:29166  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"ERC20.sol\":28829:28845  DOMAIN_SEPARATOR */\n  0x07\n    /* \"ERC20.sol\":28829:29166  DOMAIN_SEPARATOR = keccak256(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":28708:29173  constructor() internal {... */\n  pop\n    /* \"ERC20.sol\":24365:24382  address msgSender */\n  0x00\n    /* \"ERC20.sol\":24385:24397  _msgSender() */\n  tag_29\n    /* \"ERC20.sol\":24385:24395  _msgSender */\n  shl(0x20, tag_30)\n    /* \"ERC20.sol\":24385:24397  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"ERC20.sol\":24365:24397  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"ERC20.sol\":24416:24425  msgSender */\n  dup1\n    /* \"ERC20.sol\":24407:24413  _owner */\n  0x08\n  0x00\n    /* \"ERC20.sol\":24407:24425  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":24473:24482  msgSender */\n  dup1\n    /* \"ERC20.sol\":24440:24483  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":24469:24470  0 */\n  0x00\n    /* \"ERC20.sol\":24440:24483  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC20.sol\":24331:24490  constructor () internal {... */\n  pop\n    /* \"ERC20.sol\":30499:30521  _mint(to, totalSupply) */\n  tag_32\n    /* \"ERC20.sol\":30505:30507  to */\n  dup5\n    /* \"ERC20.sol\":30509:30520  totalSupply */\n  dup3\n    /* \"ERC20.sol\":30499:30504  _mint */\n  shl(0x20, tag_33)\n    /* \"ERC20.sol\":30499:30521  _mint(to, totalSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"ERC20.sol\":30365:30528  constructor (address to, string memory name, string memory symbol, uint256 totalSupply)... */\n  pop\n  pop\n  pop\n  pop\n    /* \"ERC20.sol\":30312:30875  contract newERC20Token is ERC20Permit, Ownable {... */\n  jump(tag_34)\n    /* \"ERC20.sol\":15510:15591  function name() public view returns (string memory) {... */\ntag_27:\n    /* \"ERC20.sol\":15547:15560  string memory */\n  0x60\n    /* \"ERC20.sol\":15579:15584  _name */\n  0x03\n    /* \"ERC20.sol\":15572:15584  return _name */\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  iszero\n  tag_36\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_37\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_36)\ntag_37:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_38:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_38\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_36:\n  pop\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n    /* \"ERC20.sol\":15510:15591  function name() public view returns (string memory) {... */\n  swap1\n  jump\t// out\n    /* \"ERC20.sol\":589:693  function _msgSender() internal view virtual returns (address payable) {... */\ntag_30:\n    /* \"ERC20.sol\":642:657  address payable */\n  0x00\n    /* \"ERC20.sol\":676:686  msg.sender */\n  caller\n    /* \"ERC20.sol\":669:686  return msg.sender */\n  swap1\n  pop\n    /* \"ERC20.sol\":589:693  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"ERC20.sol\":21126:21496  function _mint(address account, uint256 amount) internal virtual {... */\ntag_33:\n    /* \"ERC20.sol\":21228:21229  0 */\n  0x00\n    /* \"ERC20.sol\":21209:21230  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":21209:21216  account */\n  dup3\n    /* \"ERC20.sol\":21209:21230  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"ERC20.sol\":21201:21266  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_41\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_41:\n    /* \"ERC20.sol\":21277:21326  _beforeTokenTransfer(address(0), account, amount) */\n  tag_42\n    /* \"ERC20.sol\":21306:21307  0 */\n  0x00\n    /* \"ERC20.sol\":21310:21317  account */\n  dup4\n    /* \"ERC20.sol\":21319:21325  amount */\n  dup4\n    /* \"ERC20.sol\":21277:21297  _beforeTokenTransfer */\n  shl(0x20, tag_43)\n    /* \"ERC20.sol\":21277:21326  _beforeTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"ERC20.sol\":21352:21376  _totalSupply.add(amount) */\n  tag_44\n    /* \"ERC20.sol\":21369:21375  amount */\n  dup2\n    /* \"ERC20.sol\":21352:21364  _totalSupply */\n  sload(0x02)\n    /* \"ERC20.sol\":21352:21368  _totalSupply.add */\n  or(tag_0_110, shl(0x20, tag_45))\n  swap1\n    /* \"ERC20.sol\":21352:21376  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"ERC20.sol\":21337:21349  _totalSupply */\n  0x02\n    /* \"ERC20.sol\":21337:21376  _totalSupply = _totalSupply.add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":21407:21437  _balances[account].add(amount) */\n  tag_46\n    /* \"ERC20.sol\":21430:21436  amount */\n  dup2\n    /* \"ERC20.sol\":21407:21416  _balances */\n  0x00\n    /* \"ERC20.sol\":21407:21425  _balances[account] */\n  dup1\n    /* \"ERC20.sol\":21417:21424  account */\n  dup6\n    /* \"ERC20.sol\":21407:21425  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"ERC20.sol\":21407:21429  _balances[account].add */\n  or(tag_0_110, shl(0x20, tag_45))\n  swap1\n    /* \"ERC20.sol\":21407:21437  _balances[account].add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"ERC20.sol\":21386:21395  _balances */\n  0x00\n    /* \"ERC20.sol\":21386:21404  _balances[account] */\n  dup1\n    /* \"ERC20.sol\":21396:21403  account */\n  dup5\n    /* \"ERC20.sol\":21386:21404  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"ERC20.sol\":21386:21437  _balances[account] = _balances[account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":21473:21480  account */\n  dup2\n    /* \"ERC20.sol\":21452:21489  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":21469:21470  0 */\n  0x00\n    /* \"ERC20.sol\":21452:21489  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"ERC20.sol\":21482:21488  amount */\n  dup4\n    /* \"ERC20.sol\":21452:21489  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC20.sol\":21126:21496  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":23986:24078  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\ntag_43:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":4452:4628  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_45:\n    /* \"ERC20.sol\":4510:4517  uint256 */\n  0x00\n    /* \"ERC20.sol\":4529:4538  uint256 c */\n  dup1\n    /* \"ERC20.sol\":4545:4546  b */\n  dup3\n    /* \"ERC20.sol\":4541:4542  a */\n  dup5\n    /* \"ERC20.sol\":4541:4546  a + b */\n  add\n    /* \"ERC20.sol\":4529:4546  uint256 c = a + b */\n  swap1\n  pop\n    /* \"ERC20.sol\":4569:4570  a */\n  dup4\n    /* \"ERC20.sol\":4564:4565  c */\n  dup2\n    /* \"ERC20.sol\":4564:4570  c >= a */\n  lt\n  iszero\n    /* \"ERC20.sol\":4556:4602  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_49\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_49:\n    /* \"ERC20.sol\":4620:4621  c */\n  dup1\n    /* \"ERC20.sol\":4613:4621  return c */\n  swap2\n  pop\n  pop\n    /* \"ERC20.sol\":4452:4628  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":30312:30875  contract newERC20Token is ERC20Permit, Ownable {... */\ntag_23:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_51\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_50)\ntag_51:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_50\n  jumpi\n  swap2\n  dup3\n  add\ntag_52:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_53\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_52)\ntag_53:\ntag_50:\n  pop\n  swap1\n  pop\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  pop\n  swap1\n  jump\t// out\ntag_55:\n  tag_56\n  swap2\n  swap1\ntag_57:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_58\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_57)\ntag_58:\n  pop\n  swap1\n  jump\ntag_56:\n  swap1\n  jump\t// out\ntag_34:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"ERC20.sol\":30312:30875  contract newERC20Token is ERC20Permit, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ERC20.sol\":30312:30875  contract newERC20Token is ERC20Permit, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ecebe00\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xab27be20\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xab27be20\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcea9d26f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x7ecebe00\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x313ce567\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":15510:15591  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_28:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_28)\n    tag_30:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ERC20.sol\":15510:15591  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_31:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":17546:17712  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"ERC20.sol\":17546:17712  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":16553:16651  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":18172:18489  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"ERC20.sol\":18172:18489  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":28555:28663  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":16412:16493  function decimals() public view returns (uint8) {... */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":28670:28701  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":18884:19099  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"ERC20.sol\":18884:19099  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":16709:16826  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"ERC20.sol\":16709:16826  function balanceOf(address account) public view override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":25189:25334  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"ERC20.sol\":30189:30307  function nonces(address owner) public view override returns (uint256) {... */\n    tag_13:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_55:\n        /* \"ERC20.sol\":30189:30307  function nonces(address owner) public view override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":24566:24643  function owner() public view returns (address) {... */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":15704:15789  function symbol() public view returns (string memory) {... */\n    tag_15:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_61:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_61)\n    tag_63:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ERC20.sol\":15704:15789  function symbol() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_64:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":19586:19852  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_16:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"ERC20.sol\":19586:19852  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":17029:17201  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_17:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"ERC20.sol\":17029:17201  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":30534:30629  function mine(address to, uint256 amount) external onlyOwner {... */\n    tag_18:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"ERC20.sol\":30534:30629  function mine(address to, uint256 amount) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"ERC20.sol\":30635:30873  function rescueTokens(address token, address destination, uint256 amount) external onlyOwner {... */\n    tag_19:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_75:\n        /* \"ERC20.sol\":30635:30873  function rescueTokens(address token, address destination, uint256 amount) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"ERC20.sol\":29243:30126  function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public virtual override {... */\n    tag_20:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_78:\n        /* \"ERC20.sol\":29243:30126  function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public virtual override {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"ERC20.sol\":17259:17408  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_21:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_81:\n        /* \"ERC20.sol\":17259:17408  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":25483:25723  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_84:\n        /* \"ERC20.sol\":25483:25723  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"ERC20.sol\":15510:15591  function name() public view returns (string memory) {... */\n    tag_27:\n        /* \"ERC20.sol\":15547:15560  string memory */\n      0x60\n        /* \"ERC20.sol\":15579:15584  _name */\n      0x03\n        /* \"ERC20.sol\":15572:15584  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":15510:15591  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":17546:17712  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_34:\n        /* \"ERC20.sol\":17629:17633  bool */\n      0x00\n        /* \"ERC20.sol\":17645:17684  _approve(_msgSender(), spender, amount) */\n      tag_91\n        /* \"ERC20.sol\":17654:17666  _msgSender() */\n      tag_92\n        /* \"ERC20.sol\":17654:17664  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":17654:17666  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"ERC20.sol\":17668:17675  spender */\n      dup5\n        /* \"ERC20.sol\":17677:17683  amount */\n      dup5\n        /* \"ERC20.sol\":17645:17653  _approve */\n      tag_94\n        /* \"ERC20.sol\":17645:17684  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_91:\n        /* \"ERC20.sol\":17701:17705  true */\n      0x01\n        /* \"ERC20.sol\":17694:17705  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":17546:17712  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":16553:16651  function totalSupply() public view override returns (uint256) {... */\n    tag_36:\n        /* \"ERC20.sol\":16606:16613  uint256 */\n      0x00\n        /* \"ERC20.sol\":16632:16644  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":16625:16644  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20.sol\":16553:16651  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":18172:18489  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_39:\n        /* \"ERC20.sol\":18278:18282  bool */\n      0x00\n        /* \"ERC20.sol\":18294:18330  _transfer(sender, recipient, amount) */\n      tag_97\n        /* \"ERC20.sol\":18304:18310  sender */\n      dup5\n        /* \"ERC20.sol\":18312:18321  recipient */\n      dup5\n        /* \"ERC20.sol\":18323:18329  amount */\n      dup5\n        /* \"ERC20.sol\":18294:18303  _transfer */\n      tag_98\n        /* \"ERC20.sol\":18294:18330  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_97:\n        /* \"ERC20.sol\":18340:18461  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_99\n        /* \"ERC20.sol\":18349:18355  sender */\n      dup5\n        /* \"ERC20.sol\":18357:18369  _msgSender() */\n      tag_100\n        /* \"ERC20.sol\":18357:18367  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":18357:18369  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"ERC20.sol\":18371:18460  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_101\n        /* \"ERC20.sol\":18409:18415  amount */\n      dup6\n        /* \"ERC20.sol\":18371:18460  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"ERC20.sol\":18371:18382  _allowances */\n      0x01\n        /* \"ERC20.sol\":18371:18390  _allowances[sender] */\n      0x00\n        /* \"ERC20.sol\":18383:18389  sender */\n      dup12\n        /* \"ERC20.sol\":18371:18390  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":18371:18404  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":18391:18403  _msgSender() */\n      tag_102\n        /* \"ERC20.sol\":18391:18401  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":18391:18403  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"ERC20.sol\":18371:18404  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":18371:18408  _allowances[sender][_msgSender()].sub */\n      tag_103\n      swap1\n        /* \"ERC20.sol\":18371:18460  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"ERC20.sol\":18340:18348  _approve */\n      tag_94\n        /* \"ERC20.sol\":18340:18461  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_99:\n        /* \"ERC20.sol\":18478:18482  true */\n      0x01\n        /* \"ERC20.sol\":18471:18482  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":18172:18489  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":28555:28663  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_41:\n        /* \"ERC20.sol\":28597:28663  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"ERC20.sol\":28555:28663  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":16412:16493  function decimals() public view returns (uint8) {... */\n    tag_43:\n        /* \"ERC20.sol\":16453:16458  uint8 */\n      0x00\n        /* \"ERC20.sol\":16477:16486  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC20.sol\":16470:16486  return _decimals */\n      swap1\n      pop\n        /* \"ERC20.sol\":16412:16493  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":28670:28701  bytes32 public DOMAIN_SEPARATOR */\n    tag_45:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"ERC20.sol\":18884:19099  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_48:\n        /* \"ERC20.sol\":18972:18976  bool */\n      0x00\n        /* \"ERC20.sol\":18988:19071  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_106\n        /* \"ERC20.sol\":18997:19009  _msgSender() */\n      tag_107\n        /* \"ERC20.sol\":18997:19007  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":18997:19009  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"ERC20.sol\":19011:19018  spender */\n      dup5\n        /* \"ERC20.sol\":19020:19070  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_108\n        /* \"ERC20.sol\":19059:19069  addedValue */\n      dup6\n        /* \"ERC20.sol\":19020:19031  _allowances */\n      0x01\n        /* \"ERC20.sol\":19020:19045  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":19032:19044  _msgSender() */\n      tag_109\n        /* \"ERC20.sol\":19032:19042  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":19032:19044  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"ERC20.sol\":19020:19045  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":19020:19054  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":19046:19053  spender */\n      dup10\n        /* \"ERC20.sol\":19020:19054  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":19020:19058  _allowances[_msgSender()][spender].add */\n      tag_110\n      swap1\n        /* \"ERC20.sol\":19020:19070  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"ERC20.sol\":18988:18996  _approve */\n      tag_94\n        /* \"ERC20.sol\":18988:19071  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_106:\n        /* \"ERC20.sol\":19088:19092  true */\n      0x01\n        /* \"ERC20.sol\":19081:19092  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":18884:19099  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":16709:16826  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_51:\n        /* \"ERC20.sol\":16775:16782  uint256 */\n      0x00\n        /* \"ERC20.sol\":16801:16810  _balances */\n      dup1\n        /* \"ERC20.sol\":16801:16819  _balances[account] */\n      0x00\n        /* \"ERC20.sol\":16811:16818  account */\n      dup4\n        /* \"ERC20.sol\":16801:16819  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":16794:16819  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20.sol\":16709:16826  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":25189:25334  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"ERC20.sol\":24780:24792  _msgSender() */\n      tag_113\n        /* \"ERC20.sol\":24780:24790  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":24780:24792  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"ERC20.sol\":24770:24792  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":24770:24776  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":24770:24792  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC20.sol\":24762:24829  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"ERC20.sol\":25295:25296  0 */\n      0x00\n        /* \"ERC20.sol\":25258:25298  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":25279:25285  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":25258:25298  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":25325:25326  0 */\n      0x00\n        /* \"ERC20.sol\":25308:25314  _owner */\n      0x08\n      0x00\n        /* \"ERC20.sol\":25308:25327  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":25189:25334  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ERC20.sol\":30189:30307  function nonces(address owner) public view override returns (uint256) {... */\n    tag_56:\n        /* \"ERC20.sol\":30250:30257  uint256 */\n      0x00\n        /* \"ERC20.sol\":30276:30300  _nonces[owner].current() */\n      tag_117\n        /* \"ERC20.sol\":30276:30283  _nonces */\n      0x06\n        /* \"ERC20.sol\":30276:30290  _nonces[owner] */\n      0x00\n        /* \"ERC20.sol\":30284:30289  owner */\n      dup5\n        /* \"ERC20.sol\":30276:30290  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":30276:30298  _nonces[owner].current */\n      tag_118\n        /* \"ERC20.sol\":30276:30300  _nonces[owner].current() */\n      jump\t// in\n    tag_117:\n        /* \"ERC20.sol\":30269:30300  return _nonces[owner].current() */\n      swap1\n      pop\n        /* \"ERC20.sol\":30189:30307  function nonces(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":24566:24643  function owner() public view returns (address) {... */\n    tag_58:\n        /* \"ERC20.sol\":24604:24611  address */\n      0x00\n        /* \"ERC20.sol\":24630:24636  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":24623:24636  return _owner */\n      swap1\n      pop\n        /* \"ERC20.sol\":24566:24643  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":15704:15789  function symbol() public view returns (string memory) {... */\n    tag_60:\n        /* \"ERC20.sol\":15743:15756  string memory */\n      0x60\n        /* \"ERC20.sol\":15775:15782  _symbol */\n      0x04\n        /* \"ERC20.sol\":15768:15782  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_122\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_121)\n    tag_122:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_123:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_123\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":15704:15789  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":19586:19852  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_67:\n        /* \"ERC20.sol\":19679:19683  bool */\n      0x00\n        /* \"ERC20.sol\":19695:19824  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_125\n        /* \"ERC20.sol\":19704:19716  _msgSender() */\n      tag_126\n        /* \"ERC20.sol\":19704:19714  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":19704:19716  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"ERC20.sol\":19718:19725  spender */\n      dup5\n        /* \"ERC20.sol\":19727:19823  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_127\n        /* \"ERC20.sol\":19766:19781  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":19727:19823  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"ERC20.sol\":19727:19738  _allowances */\n      0x01\n        /* \"ERC20.sol\":19727:19752  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":19739:19751  _msgSender() */\n      tag_128\n        /* \"ERC20.sol\":19739:19749  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":19739:19751  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"ERC20.sol\":19727:19752  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":19727:19761  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":19753:19760  spender */\n      dup11\n        /* \"ERC20.sol\":19727:19761  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":19727:19765  _allowances[_msgSender()][spender].sub */\n      tag_103\n      swap1\n        /* \"ERC20.sol\":19727:19823  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"ERC20.sol\":19695:19703  _approve */\n      tag_94\n        /* \"ERC20.sol\":19695:19824  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_125:\n        /* \"ERC20.sol\":19841:19845  true */\n      0x01\n        /* \"ERC20.sol\":19834:19845  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":19586:19852  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":17029:17201  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n        /* \"ERC20.sol\":17115:17119  bool */\n      0x00\n        /* \"ERC20.sol\":17131:17173  _transfer(_msgSender(), recipient, amount) */\n      tag_130\n        /* \"ERC20.sol\":17141:17153  _msgSender() */\n      tag_131\n        /* \"ERC20.sol\":17141:17151  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":17141:17153  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"ERC20.sol\":17155:17164  recipient */\n      dup5\n        /* \"ERC20.sol\":17166:17172  amount */\n      dup5\n        /* \"ERC20.sol\":17131:17140  _transfer */\n      tag_98\n        /* \"ERC20.sol\":17131:17173  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_130:\n        /* \"ERC20.sol\":17190:17194  true */\n      0x01\n        /* \"ERC20.sol\":17183:17194  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":17029:17201  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":30534:30629  function mine(address to, uint256 amount) external onlyOwner {... */\n    tag_73:\n        /* \"ERC20.sol\":24780:24792  _msgSender() */\n      tag_133\n        /* \"ERC20.sol\":24780:24790  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":24780:24792  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"ERC20.sol\":24770:24792  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":24770:24776  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":24770:24792  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC20.sol\":24762:24829  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"ERC20.sol\":30605:30622  _mint(to, amount) */\n      tag_136\n        /* \"ERC20.sol\":30611:30613  to */\n      dup3\n        /* \"ERC20.sol\":30615:30621  amount */\n      dup3\n        /* \"ERC20.sol\":30605:30610  _mint */\n      tag_137\n        /* \"ERC20.sol\":30605:30622  _mint(to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"ERC20.sol\":30534:30629  function mine(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":30635:30873  function rescueTokens(address token, address destination, uint256 amount) external onlyOwner {... */\n    tag_76:\n        /* \"ERC20.sol\":24780:24792  _msgSender() */\n      tag_139\n        /* \"ERC20.sol\":24780:24790  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":24780:24792  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"ERC20.sol\":24770:24792  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":24770:24776  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":24770:24792  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC20.sol\":24762:24829  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"ERC20.sol\":30755:30766  destination */\n      dup2\n        /* \"ERC20.sol\":30746:30766  token != destination */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":30746:30751  token */\n      dup4\n        /* \"ERC20.sol\":30746:30766  token != destination */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":30738:30786  require(token != destination, \"Invalid address\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"ERC20.sol\":30810:30815  token */\n      dup3\n        /* \"ERC20.sol\":30804:30825  ERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"ERC20.sol\":30826:30837  destination */\n      dup4\n        /* \"ERC20.sol\":30839:30845  amount */\n      dup4\n        /* \"ERC20.sol\":30804:30846  ERC20(token).transfer(destination, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_143:\n        /* \"ERC20.sol\":30804:30846  ERC20(token).transfer(destination, amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_145\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_145:\n        /* \"ERC20.sol\":30804:30846  ERC20(token).transfer(destination, amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_146\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_146:\n        /* \"ERC20.sol\":30804:30846  ERC20(token).transfer(destination, amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"ERC20.sol\":30796:30866  require(ERC20(token).transfer(destination, amount), \"Retrieve failed\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265747269657665206661696c65640000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"ERC20.sol\":30635:30873  function rescueTokens(address token, address destination, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":29243:30126  function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public virtual override {... */\n    tag_79:\n        /* \"ERC20.sol\":29417:29425  deadline */\n      dup4\n        /* \"ERC20.sol\":29398:29413  block.timestamp */\n      timestamp\n        /* \"ERC20.sol\":29398:29425  block.timestamp <= deadline */\n      gt\n      iszero\n        /* \"ERC20.sol\":29390:29454  require(block.timestamp <= deadline, \"Permit: expired deadline\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5065726d69743a206578706972656420646561646c696e650000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"ERC20.sol\":29465:29483  bytes32 hashStruct */\n      0x00\n        /* \"ERC20.sol\":28597:28663  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"ERC20.sol\":29537:29552  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"ERC20.sol\":29570:29575  owner */\n      dup9\n        /* \"ERC20.sol\":29593:29600  spender */\n      dup9\n        /* \"ERC20.sol\":29618:29624  amount */\n      dup9\n        /* \"ERC20.sol\":29642:29666  _nonces[owner].current() */\n      tag_150\n        /* \"ERC20.sol\":29642:29649  _nonces */\n      0x06\n        /* \"ERC20.sol\":29642:29656  _nonces[owner] */\n      0x00\n        /* \"ERC20.sol\":29650:29655  owner */\n      dup15\n        /* \"ERC20.sol\":29642:29656  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":29642:29664  _nonces[owner].current */\n      tag_118\n        /* \"ERC20.sol\":29642:29666  _nonces[owner].current() */\n      jump\t// in\n    tag_150:\n        /* \"ERC20.sol\":29684:29692  deadline */\n      dup10\n        /* \"ERC20.sol\":29509:29706  abi.encode(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"ERC20.sol\":29509:29706  abi.encode(... */\n      swap1\n      0x40\n      mstore\n        /* \"ERC20.sol\":29486:29716  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ERC20.sol\":29465:29716  bytes32 hashStruct = keccak256(... */\n      swap1\n      pop\n        /* \"ERC20.sol\":29727:29740  bytes32 _hash */\n      0x00\n        /* \"ERC20.sol\":29807:29813  0x1901 */\n      0x1901\n        /* \"ERC20.sol\":29832:29848  DOMAIN_SEPARATOR */\n      sload(0x07)\n        /* \"ERC20.sol\":29866:29876  hashStruct */\n      dup4\n        /* \"ERC20.sol\":29766:29890  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      0xffff\n      and\n      0xffff\n      and\n      0xf0\n      shl\n      dup2\n      mstore\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"ERC20.sol\":29766:29890  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"ERC20.sol\":29743:29900  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"ERC20.sol\":29727:29900  bytes32 _hash = keccak256(... */\n      swap1\n      pop\n        /* \"ERC20.sol\":29911:29925  address signer */\n      0x00\n        /* \"ERC20.sol\":29928:29953  ecrecover(_hash, v, r, s) */\n      0x01\n        /* \"ERC20.sol\":29938:29943  _hash */\n      dup3\n        /* \"ERC20.sol\":29945:29946  v */\n      dup8\n        /* \"ERC20.sol\":29948:29949  r */\n      dup8\n        /* \"ERC20.sol\":29951:29952  s */\n      dup8\n        /* \"ERC20.sol\":29928:29953  ecrecover(_hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_152\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_152:\n        /* \"ERC20.sol\":29928:29953  ecrecover(_hash, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"ERC20.sol\":29911:29953  address signer = ecrecover(_hash, v, r, s) */\n      swap1\n      pop\n        /* \"ERC20.sol\":29989:29990  0 */\n      0x00\n        /* \"ERC20.sol\":29971:29991  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":29971:29977  signer */\n      dup2\n        /* \"ERC20.sol\":29971:29991  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":29971:30010  signer != address(0) && signer == owner */\n      dup1\n      iszero\n      tag_153\n      jumpi\n      pop\n        /* \"ERC20.sol\":30005:30010  owner */\n      dup10\n        /* \"ERC20.sol\":29995:30010  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":29995:30001  signer */\n      dup2\n        /* \"ERC20.sol\":29995:30010  signer == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC20.sol\":29971:30010  signer != address(0) && signer == owner */\n    tag_153:\n        /* \"ERC20.sol\":29963:30040  require(signer != address(0) && signer == owner, \"Permit: Invalid signature\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5065726d69743a20496e76616c6964207369676e617475726500000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"ERC20.sol\":30051:30077  _nonces[owner].increment() */\n      tag_155\n        /* \"ERC20.sol\":30051:30058  _nonces */\n      0x06\n        /* \"ERC20.sol\":30051:30065  _nonces[owner] */\n      0x00\n        /* \"ERC20.sol\":30059:30064  owner */\n      dup13\n        /* \"ERC20.sol\":30051:30065  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":30051:30075  _nonces[owner].increment */\n      tag_156\n        /* \"ERC20.sol\":30051:30077  _nonces[owner].increment() */\n      jump\t// in\n    tag_155:\n        /* \"ERC20.sol\":30087:30119  _approve(owner, spender, amount) */\n      tag_157\n        /* \"ERC20.sol\":30096:30101  owner */\n      dup11\n        /* \"ERC20.sol\":30103:30110  spender */\n      dup11\n        /* \"ERC20.sol\":30112:30118  amount */\n      dup11\n        /* \"ERC20.sol\":30087:30095  _approve */\n      tag_94\n        /* \"ERC20.sol\":30087:30119  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_157:\n        /* \"ERC20.sol\":29243:30126  function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":17259:17408  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_82:\n        /* \"ERC20.sol\":17348:17355  uint256 */\n      0x00\n        /* \"ERC20.sol\":17374:17385  _allowances */\n      0x01\n        /* \"ERC20.sol\":17374:17392  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":17386:17391  owner */\n      dup5\n        /* \"ERC20.sol\":17374:17392  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":17374:17401  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":17393:17400  spender */\n      dup4\n        /* \"ERC20.sol\":17374:17401  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":17367:17401  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":17259:17408  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":25483:25723  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_85:\n        /* \"ERC20.sol\":24780:24792  _msgSender() */\n      tag_160\n        /* \"ERC20.sol\":24780:24790  _msgSender */\n      tag_93\n        /* \"ERC20.sol\":24780:24792  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"ERC20.sol\":24770:24792  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":24770:24776  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":24770:24792  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC20.sol\":24762:24829  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"ERC20.sol\":25591:25592  0 */\n      0x00\n        /* \"ERC20.sol\":25571:25593  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":25571:25579  newOwner */\n      dup2\n        /* \"ERC20.sol\":25571:25593  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":25563:25636  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"ERC20.sol\":25680:25688  newOwner */\n      dup1\n        /* \"ERC20.sol\":25651:25689  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":25672:25678  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":25651:25689  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":25708:25716  newOwner */\n      dup1\n        /* \"ERC20.sol\":25699:25705  _owner */\n      0x08\n      0x00\n        /* \"ERC20.sol\":25699:25716  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":25483:25723  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":589:693  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_93:\n        /* \"ERC20.sol\":642:657  address payable */\n      0x00\n        /* \"ERC20.sol\":676:686  msg.sender */\n      caller\n        /* \"ERC20.sol\":669:686  return msg.sender */\n      swap1\n      pop\n        /* \"ERC20.sol\":589:693  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":22648:22988  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_94:\n        /* \"ERC20.sol\":22766:22767  0 */\n      0x00\n        /* \"ERC20.sol\":22749:22768  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":22749:22754  owner */\n      dup4\n        /* \"ERC20.sol\":22749:22768  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":22741:22809  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"ERC20.sol\":22846:22847  0 */\n      0x00\n        /* \"ERC20.sol\":22827:22848  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":22827:22834  spender */\n      dup3\n        /* \"ERC20.sol\":22827:22848  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":22819:22887  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"ERC20.sol\":22928:22934  amount */\n      dup1\n        /* \"ERC20.sol\":22898:22909  _allowances */\n      0x01\n        /* \"ERC20.sol\":22898:22916  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":22910:22915  owner */\n      dup6\n        /* \"ERC20.sol\":22898:22916  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":22898:22925  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":22917:22924  spender */\n      dup5\n        /* \"ERC20.sol\":22898:22925  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":22898:22934  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":22965:22972  spender */\n      dup2\n        /* \"ERC20.sol\":22949:22981  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":22958:22963  owner */\n      dup4\n        /* \"ERC20.sol\":22949:22981  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":22974:22980  amount */\n      dup4\n        /* \"ERC20.sol\":22949:22981  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":22648:22988  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":20326:20856  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_98:\n        /* \"ERC20.sol\":20449:20450  0 */\n      0x00\n        /* \"ERC20.sol\":20431:20451  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":20431:20437  sender */\n      dup4\n        /* \"ERC20.sol\":20431:20451  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":20423:20493  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"ERC20.sol\":20532:20533  0 */\n      0x00\n        /* \"ERC20.sol\":20511:20534  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":20511:20520  recipient */\n      dup3\n        /* \"ERC20.sol\":20511:20534  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":20503:20574  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"ERC20.sol\":20585:20632  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_171\n        /* \"ERC20.sol\":20606:20612  sender */\n      dup4\n        /* \"ERC20.sol\":20614:20623  recipient */\n      dup4\n        /* \"ERC20.sol\":20625:20631  amount */\n      dup4\n        /* \"ERC20.sol\":20585:20605  _beforeTokenTransfer */\n      tag_172\n        /* \"ERC20.sol\":20585:20632  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_171:\n        /* \"ERC20.sol\":20663:20734  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_173\n        /* \"ERC20.sol\":20685:20691  amount */\n      dup2\n        /* \"ERC20.sol\":20663:20734  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"ERC20.sol\":20663:20672  _balances */\n      0x00\n        /* \"ERC20.sol\":20663:20680  _balances[sender] */\n      dup1\n        /* \"ERC20.sol\":20673:20679  sender */\n      dup8\n        /* \"ERC20.sol\":20663:20680  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":20663:20684  _balances[sender].sub */\n      tag_103\n      swap1\n        /* \"ERC20.sol\":20663:20734  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"ERC20.sol\":20643:20652  _balances */\n      0x00\n        /* \"ERC20.sol\":20643:20660  _balances[sender] */\n      dup1\n        /* \"ERC20.sol\":20653:20659  sender */\n      dup6\n        /* \"ERC20.sol\":20643:20660  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":20643:20734  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":20767:20799  _balances[recipient].add(amount) */\n      tag_174\n        /* \"ERC20.sol\":20792:20798  amount */\n      dup2\n        /* \"ERC20.sol\":20767:20776  _balances */\n      0x00\n        /* \"ERC20.sol\":20767:20787  _balances[recipient] */\n      dup1\n        /* \"ERC20.sol\":20777:20786  recipient */\n      dup6\n        /* \"ERC20.sol\":20767:20787  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":20767:20791  _balances[recipient].add */\n      tag_110\n      swap1\n        /* \"ERC20.sol\":20767:20799  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"ERC20.sol\":20744:20753  _balances */\n      0x00\n        /* \"ERC20.sol\":20744:20764  _balances[recipient] */\n      dup1\n        /* \"ERC20.sol\":20754:20763  recipient */\n      dup5\n        /* \"ERC20.sol\":20744:20764  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":20744:20799  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":20831:20840  recipient */\n      dup2\n        /* \"ERC20.sol\":20814:20849  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":20823:20829  sender */\n      dup4\n        /* \"ERC20.sol\":20814:20849  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":20842:20848  amount */\n      dup4\n        /* \"ERC20.sol\":20814:20849  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":20326:20856  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5324:5511  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_103:\n        /* \"ERC20.sol\":5410:5417  uint256 */\n      0x00\n        /* \"ERC20.sol\":5442:5443  a */\n      dup4\n        /* \"ERC20.sol\":5437:5438  b */\n      dup4\n        /* \"ERC20.sol\":5437:5443  b <= a */\n      gt\n      iszero\n        /* \"ERC20.sol\":5445:5457  errorMessage */\n      dup3\n        /* \"ERC20.sol\":5429:5458  require(b <= a, errorMessage) */\n      swap1\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_177:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_179\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_177)\n    tag_179:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ERC20.sol\":5429:5458  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_180\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_180:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n      pop\n        /* \"ERC20.sol\":5468:5477  uint256 c */\n      0x00\n        /* \"ERC20.sol\":5484:5485  b */\n      dup4\n        /* \"ERC20.sol\":5480:5481  a */\n      dup6\n        /* \"ERC20.sol\":5480:5485  a - b */\n      sub\n        /* \"ERC20.sol\":5468:5485  uint256 c = a - b */\n      swap1\n      pop\n        /* \"ERC20.sol\":5503:5504  c */\n      dup1\n        /* \"ERC20.sol\":5496:5504  return c */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":5324:5511  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4452:4628  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_110:\n        /* \"ERC20.sol\":4510:4517  uint256 */\n      0x00\n        /* \"ERC20.sol\":4529:4538  uint256 c */\n      dup1\n        /* \"ERC20.sol\":4545:4546  b */\n      dup3\n        /* \"ERC20.sol\":4541:4542  a */\n      dup5\n        /* \"ERC20.sol\":4541:4546  a + b */\n      add\n        /* \"ERC20.sol\":4529:4546  uint256 c = a + b */\n      swap1\n      pop\n        /* \"ERC20.sol\":4569:4570  a */\n      dup4\n        /* \"ERC20.sol\":4564:4565  c */\n      dup2\n        /* \"ERC20.sol\":4564:4570  c >= a */\n      lt\n      iszero\n        /* \"ERC20.sol\":4556:4602  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"ERC20.sol\":4620:4621  c */\n      dup1\n        /* \"ERC20.sol\":4613:4621  return c */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":4452:4628  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":26163:26275  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_118:\n        /* \"ERC20.sol\":26228:26235  uint256 */\n      0x00\n        /* \"ERC20.sol\":26254:26261  counter */\n      dup2\n        /* \"ERC20.sol\":26254:26268  counter._value */\n      0x00\n      add\n      sload\n        /* \"ERC20.sol\":26247:26268  return counter._value */\n      swap1\n      pop\n        /* \"ERC20.sol\":26163:26275  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":21126:21496  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_137:\n        /* \"ERC20.sol\":21228:21229  0 */\n      0x00\n        /* \"ERC20.sol\":21209:21230  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":21209:21216  account */\n      dup3\n        /* \"ERC20.sol\":21209:21230  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":21201:21266  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"ERC20.sol\":21277:21326  _beforeTokenTransfer(address(0), account, amount) */\n      tag_186\n        /* \"ERC20.sol\":21306:21307  0 */\n      0x00\n        /* \"ERC20.sol\":21310:21317  account */\n      dup4\n        /* \"ERC20.sol\":21319:21325  amount */\n      dup4\n        /* \"ERC20.sol\":21277:21297  _beforeTokenTransfer */\n      tag_172\n        /* \"ERC20.sol\":21277:21326  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_186:\n        /* \"ERC20.sol\":21352:21376  _totalSupply.add(amount) */\n      tag_187\n        /* \"ERC20.sol\":21369:21375  amount */\n      dup2\n        /* \"ERC20.sol\":21352:21364  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":21352:21368  _totalSupply.add */\n      tag_110\n      swap1\n        /* \"ERC20.sol\":21352:21376  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"ERC20.sol\":21337:21349  _totalSupply */\n      0x02\n        /* \"ERC20.sol\":21337:21376  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":21407:21437  _balances[account].add(amount) */\n      tag_188\n        /* \"ERC20.sol\":21430:21436  amount */\n      dup2\n        /* \"ERC20.sol\":21407:21416  _balances */\n      0x00\n        /* \"ERC20.sol\":21407:21425  _balances[account] */\n      dup1\n        /* \"ERC20.sol\":21417:21424  account */\n      dup6\n        /* \"ERC20.sol\":21407:21425  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":21407:21429  _balances[account].add */\n      tag_110\n      swap1\n        /* \"ERC20.sol\":21407:21437  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"ERC20.sol\":21386:21395  _balances */\n      0x00\n        /* \"ERC20.sol\":21386:21404  _balances[account] */\n      dup1\n        /* \"ERC20.sol\":21396:21403  account */\n      dup5\n        /* \"ERC20.sol\":21386:21404  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":21386:21437  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":21473:21480  account */\n      dup2\n        /* \"ERC20.sol\":21452:21489  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":21469:21470  0 */\n      0x00\n        /* \"ERC20.sol\":21452:21489  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":21482:21488  amount */\n      dup4\n        /* \"ERC20.sol\":21452:21489  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":21126:21496  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":26281:26459  function increment(Counter storage counter) internal {... */\n    tag_156:\n        /* \"ERC20.sol\":26451:26452  1 */\n      0x01\n        /* \"ERC20.sol\":26433:26440  counter */\n      dup2\n        /* \"ERC20.sol\":26433:26447  counter._value */\n      0x00\n      add\n      0x00\n        /* \"ERC20.sol\":26433:26452  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":26281:26459  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":23986:24078  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_172:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220a3df33f16a9d99e24b879a4f8add5857dbbfc667963cc779d25ae0cd2d8aca2a64736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x293C CODESIZE SUB DUP1 PUSH3 0x293C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xCD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xB0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xFB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x18A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x16D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1B8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x6EF JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1FF SWAP3 SWAP2 SWAP1 PUSH3 0x6EF JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH3 0x28EA PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH3 0x24D PUSH3 0x3D5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP PUSH1 0x0 PUSH3 0x31A PUSH3 0x47B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x3CB DUP5 DUP3 PUSH3 0x483 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x79E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH3 0x471 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0x445 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0x471 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x453 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x527 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x53B PUSH1 0x0 DUP4 DUP4 PUSH3 0x661 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x557 DUP2 PUSH1 0x2 SLOAD PUSH3 0x666 PUSH1 0x20 SHL PUSH3 0x1D67 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x5B5 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x666 PUSH1 0x20 SHL PUSH3 0x1D67 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x732 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x763 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x763 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x762 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x745 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x772 SWAP2 SWAP1 PUSH3 0x776 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x79B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x797 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x77D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x213C DUP1 PUSH3 0x7AE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xAB27BE20 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAB27BE20 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xCEA9D26F EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x571 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DC JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH2 0xACA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x446 PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4B5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4FD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE5C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x691 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x880 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x855 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x880 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x863 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89E PUSH2 0x897 PUSH2 0x17E7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BF DUP5 DUP5 DUP5 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x980 DUP5 PUSH2 0x8CB PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x97B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2071 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x931 PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1CA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA78 PUSH2 0x9DC PUSH2 0x17E7 JUMP JUMPDEST DUP5 PUSH2 0xA73 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x9ED PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD2 PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9E PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1DEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD3C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE34 PUSH2 0xD7E PUSH2 0x17E7 JUMP JUMPDEST DUP5 PUSH2 0xE2F DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20E2 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xDA8 PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1CA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE52 PUSH2 0xE4B PUSH2 0x17E7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE64 PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF30 DUP3 DUP3 PUSH2 0x1DFD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF3C PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x113B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265747269657665206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x12BF PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1DEF JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1480 JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x14F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A20496E76616C6964207369676E617475726500000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1539 PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x1544 DUP11 DUP11 DUP11 PUSH2 0x17EF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DF PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1727 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2003 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20BE PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2029 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2099 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FE0 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AFD DUP4 DUP4 DUP4 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0x1B68 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x204B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1CA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1BFB DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1D54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D19 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D46 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EAC PUSH1 0x0 DUP4 DUP4 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0x1EC1 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1D67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1F18 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65455243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220A3DF CALLER CALL PUSH11 0x9D99E24B879A4F8ADD5857 0xDB 0xBF 0xC6 PUSH8 0x963CC779D25AE0CD 0x2D DUP11 0xCA 0x2A PUSH5 0x736F6C6343 STOP MOD MUL STOP CALLER GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "30312:563:0:-:0;;;30365:163;8:9:-1;5:2;;;30:1;27;20:12;5:2;30365:163:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;30365:163:0;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;30365:163:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30365:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;30365:163:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30365:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30475:4;30481:6;15384:4;15376:5;:12;;;;;;;;;;;;:::i;:::-;;15408:6;15398:7;:16;;;;;;;;;;;;:::i;:::-;;15436:2;15424:9;;:14;;;;;;;;;;;;;;;;;;15304:141;;28741:15;28800:9;28789:20;;28899:95;;;;;;;;;;;;;;;;;;;29028:6;:4;;;:6;;:::i;:::-;29012:24;;;;;;29064:10;;;;;;;;;;;;;;;;;29054:21;;;;;;29104:7;29137:4;28871:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28871:285:0;;;28848:318;;;;;;28829:16;:337;;;;28708:465;24365:17;24385:12;:10;;;:12;;:::i;:::-;24365:32;;24416:9;24407:6;;:18;;;;;;;;;;;;;;;;;;24473:9;24440:43;;24469:1;24440:43;;;;;;;;;;;;24331:159;30499:22:::1;30505:2;30509:11;30499:5;;;:22;;:::i;:::-;30365:163:::0;;;;30312:563;;15510:81;15547:13;15579:5;15572:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15510:81;:::o;589:104::-;642:15;676:10;669:17;;589:104;:::o;21126:370::-;21228:1;21209:21;;:7;:21;;;;21201:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21277:49;21306:1;21310:7;21319:6;21277:20;;;:49;;:::i;:::-;21352:24;21369:6;21352:12;;:16;;;;;;:24;;;;:::i;:::-;21337:12;:39;;;;21407:30;21430:6;21407:9;:18;21417:7;21407:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;21386:9;:18;21396:7;21386:18;;;;;;;;;;;;;;;:51;;;;21473:7;21452:37;;21469:1;21452:37;;;21482:6;21452:37;;;;;;;;;;;;;;;;;;21126:370;;:::o;23986:92::-;;;;:::o;4452:176::-;4510:7;4529:9;4545:1;4541;:5;4529:17;;4569:1;4564;:6;;4556:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4620:1;4613:8;;;4452:176;;;;:::o;30312:563::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c80637ecebe00116100ad578063ab27be2011610071578063ab27be20146105d7578063cea9d26f14610625578063d505accf14610693578063dd62ed3e1461072c578063f2fde38b146107a45761012c565b80637ecebe00146103e65780638da5cb5b1461043e57806395d89b4114610488578063a457c2d71461050b578063a9059cbb146105715761012c565b8063313ce567116100f4578063313ce567146102dc5780633644e51514610300578063395093511461031e57806370a0823114610384578063715018a6146103dc5761012c565b806306fdde0314610131578063095ea7b3146101b457806318160ddd1461021a57806323b872dd1461023857806330adf81f146102be575b600080fd5b6101396107e8565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017957808201518184015260208101905061015e565b50505050905090810190601f1680156101a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061088a565b604051808215151515815260200191505060405180910390f35b6102226108a8565b6040518082815260200191505060405180910390f35b6102a46004803603606081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108b2565b604051808215151515815260200191505060405180910390f35b6102c661098b565b6040518082815260200191505060405180910390f35b6102e46109b2565b604051808260ff1660ff16815260200191505060405180910390f35b6103086109c9565b6040518082815260200191505060405180910390f35b61036a6004803603604081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109cf565b604051808215151515815260200191505060405180910390f35b6103c66004803603602081101561039a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a82565b6040518082815260200191505060405180910390f35b6103e4610aca565b005b610428600480360360208110156103fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c55565b6040518082815260200191505060405180910390f35b610446610ca5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610490610ccf565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104d05780820151818401526020810190506104b5565b50505050905090810190601f1680156104fd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105576004803603604081101561052157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d71565b604051808215151515815260200191505060405180910390f35b6105bd6004803603604081101561058757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e3e565b604051808215151515815260200191505060405180910390f35b610623600480360360408110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e5c565b005b6106916004803603606081101561063b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f34565b005b61072a600480360360e08110156106a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506111d9565b005b61078e6004803603604081101561074257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611550565b6040518082815260200191505060405180910390f35b6107e6600480360360208110156107ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115d7565b005b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108805780601f1061085557610100808354040283529160200191610880565b820191906000526020600020905b81548152906001019060200180831161086357829003601f168201915b5050505050905090565b600061089e6108976117e7565b84846117ef565b6001905092915050565b6000600254905090565b60006108bf8484846119e6565b610980846108cb6117e7565b61097b8560405180606001604052806028815260200161207160289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109316117e7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ca79092919063ffffffff16565b6117ef565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b6000600560009054906101000a900460ff16905090565b60075481565b6000610a786109dc6117e7565b84610a7385600160006109ed6117e7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d6790919063ffffffff16565b6117ef565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610ad26117e7565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c9e600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611def565b9050919050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d675780601f10610d3c57610100808354040283529160200191610d67565b820191906000526020600020905b815481529060010190602001808311610d4a57829003601f168201915b5050505050905090565b6000610e34610d7e6117e7565b84610e2f856040518060600160405280602581526020016120e26025913960016000610da86117e7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ca79092919063ffffffff16565b6117ef565b6001905092915050565b6000610e52610e4b6117e7565b84846119e6565b6001905092915050565b610e646117e7565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610f308282611dfd565b5050565b610f3c6117e7565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ffe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c69642061646472657373000000000000000000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561112757600080fd5b505af115801561113b573d6000803e3d6000fd5b505050506040513d602081101561115157600080fd5b81019080805190602001909291905050506111d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5265747269657665206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b505050565b8342111561124f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5065726d69743a206578706972656420646561646c696e65000000000000000081525060200191505060405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b8888886112bf600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611def565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020019650505050505050604051602081830303815290604052805190602001209050600061190160075483604051602001808461ffff1661ffff1660f01b81526002018381526020018281526020019350505050604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561140c573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561148057508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6114f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f5065726d69743a20496e76616c6964207369676e61747572650000000000000081525060200191505060405180910390fd5b611539600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fc4565b6115448a8a8a6117ef565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6115df6117e7565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611727576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806120036026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611875576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806120be6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806120296022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806120996025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611fe06023913960400191505060405180910390fd5b611afd838383611fda565b611b688160405180606001604052806026815260200161204b602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ca79092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611bfb816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d6790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611d54576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d19578082015181840152602081019050611cfe565b50505050905090810190601f168015611d465780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611de5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ea0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611eac60008383611fda565b611ec181600254611d6790919063ffffffff16565b600281905550611f18816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d6790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6001816000016000828254019250508190555050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a3df33f16a9d99e24b879a4f8add5857dbbfc667963cc779d25ae0cd2d8aca2a64736f6c63430006020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xAB27BE20 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAB27BE20 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xCEA9D26F EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A4 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x571 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DC JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH2 0xACA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x428 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x446 PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4B5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4FD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE5C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x691 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x72A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x880 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x855 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x880 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x863 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89E PUSH2 0x897 PUSH2 0x17E7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BF DUP5 DUP5 DUP5 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x980 DUP5 PUSH2 0x8CB PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x97B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2071 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x931 PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1CA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA78 PUSH2 0x9DC PUSH2 0x17E7 JUMP JUMPDEST DUP5 PUSH2 0xA73 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x9ED PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD2 PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9E PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1DEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD3C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE34 PUSH2 0xD7E PUSH2 0x17E7 JUMP JUMPDEST DUP5 PUSH2 0xE2F DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20E2 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xDA8 PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1CA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE52 PUSH2 0xE4B PUSH2 0x17E7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE64 PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF30 DUP3 DUP3 PUSH2 0x1DFD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF3C PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x113B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265747269657665206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A206578706972656420646561646C696E650000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP9 DUP9 DUP9 PUSH2 0x12BF PUSH1 0x6 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1DEF JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1901 PUSH1 0x7 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x140C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1480 JUMPI POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x14F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5065726D69743A20496E76616C6964207369676E617475726500000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1539 PUSH1 0x6 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x1544 DUP11 DUP11 DUP11 PUSH2 0x17EF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DF PUSH2 0x17E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1727 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2003 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x20BE PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2029 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2099 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FE0 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AFD DUP4 DUP4 DUP4 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0x1B68 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x204B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1CA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1BFB DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1D54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D19 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D46 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EAC PUSH1 0x0 DUP4 DUP4 PUSH2 0x1FDA JUMP JUMPDEST PUSH2 0x1EC1 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1D67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1F18 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65455243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220A3DF CALLER CALL PUSH11 0x9D99E24B879A4F8ADD5857 0xDB 0xBF 0xC6 PUSH8 0x963CC779D25AE0CD 0x2D DUP11 0xCA 0x2A PUSH5 0x736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "30312:563:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30312:563:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15510:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15510:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17546:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17546:166:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16553:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18172:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18172:317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;28555:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16412:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;28670:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18884:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18884:215:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16709:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16709:117:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25189:145;;;:::i;:::-;;30189:118;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30189:118:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;24566:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15704:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15704:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19586:266;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19586:266:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17029:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17029:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;30534:95;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30534:95:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;30635:238;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30635:238:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;29243:883;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;29243:883:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17259:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17259:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25483:240;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25483:240:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;15510:81;15547:13;15579:5;15572:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15510:81;:::o;17546:166::-;17629:4;17645:39;17654:12;:10;:12::i;:::-;17668:7;17677:6;17645:8;:39::i;:::-;17701:4;17694:11;;17546:166;;;;:::o;16553:98::-;16606:7;16632:12;;16625:19;;16553:98;:::o;18172:317::-;18278:4;18294:36;18304:6;18312:9;18323:6;18294:9;:36::i;:::-;18340:121;18349:6;18357:12;:10;:12::i;:::-;18371:89;18409:6;18371:89;;;;;;;;;;;;;;;;;:11;:19;18383:6;18371:19;;;;;;;;;;;;;;;:33;18391:12;:10;:12::i;:::-;18371:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;18340:8;:121::i;:::-;18478:4;18471:11;;18172:317;;;;;:::o;28555:108::-;28597:66;28555:108;;;:::o;16412:81::-;16453:5;16477:9;;;;;;;;;;;16470:16;;16412:81;:::o;28670:31::-;;;;:::o;18884:215::-;18972:4;18988:83;18997:12;:10;:12::i;:::-;19011:7;19020:50;19059:10;19020:11;:25;19032:12;:10;:12::i;:::-;19020:25;;;;;;;;;;;;;;;:34;19046:7;19020:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;18988:8;:83::i;:::-;19088:4;19081:11;;18884:215;;;;:::o;16709:117::-;16775:7;16801:9;:18;16811:7;16801:18;;;;;;;;;;;;;;;;16794:25;;16709:117;;;:::o;25189:145::-;24780:12;:10;:12::i;:::-;24770:22;;:6;;;;;;;;;;;:22;;;24762:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25295:1:::1;25258:40;;25279:6;;;;;;;;;;;25258:40;;;;;;;;;;;;25325:1;25308:6;;:19;;;;;;;;;;;;;;;;;;25189:145::o:0;30189:118::-;30250:7;30276:24;:7;:14;30284:5;30276:14;;;;;;;;;;;;;;;:22;:24::i;:::-;30269:31;;30189:118;;;:::o;24566:77::-;24604:7;24630:6;;;;;;;;;;;24623:13;;24566:77;:::o;15704:85::-;15743:13;15775:7;15768:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15704:85;:::o;19586:266::-;19679:4;19695:129;19704:12;:10;:12::i;:::-;19718:7;19727:96;19766:15;19727:96;;;;;;;;;;;;;;;;;:11;:25;19739:12;:10;:12::i;:::-;19727:25;;;;;;;;;;;;;;;:34;19753:7;19727:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;19695:8;:129::i;:::-;19841:4;19834:11;;19586:266;;;;:::o;17029:172::-;17115:4;17131:42;17141:12;:10;:12::i;:::-;17155:9;17166:6;17131:9;:42::i;:::-;17190:4;17183:11;;17029:172;;;;:::o;30534:95::-;24780:12;:10;:12::i;:::-;24770:22;;:6;;;;;;;;;;;:22;;;24762:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30605:17:::1;30611:2;30615:6;30605:5;:17::i;:::-;30534:95:::0;;:::o;30635:238::-;24780:12;:10;:12::i;:::-;24770:22;;:6;;;;;;;;;;;:22;;;24762:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30755:11:::1;30746:20;;:5;:20;;;;30738:48;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;30810:5;30804:21;;;30826:11;30839:6;30804:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30804:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30804:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30804:42:0;;;;;;;;;;;;;;;;30796:70;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;30635:238:::0;;;:::o;29243:883::-;29417:8;29398:15;:27;;29390:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29465:18;28597:66;29537:15;;29570:5;29593:7;29618:6;29642:24;:7;:14;29650:5;29642:14;;;;;;;;;;;;;;;:22;:24::i;:::-;29684:8;29509:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;29509:197:0;;;29486:230;;;;;;29465:251;;29727:13;29807:6;29832:16;;29866:10;29766:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;29766:124:0;;;29743:157;;;;;;29727:173;;29911:14;29928:25;29938:5;29945:1;29948;29951;29928:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29928:25:0;;;;;;;;29911:42;;29989:1;29971:20;;:6;:20;;;;:39;;;;;30005:5;29995:15;;:6;:15;;;29971:39;29963:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30051:26;:7;:14;30059:5;30051:14;;;;;;;;;;;;;;;:24;:26::i;:::-;30087:32;30096:5;30103:7;30112:6;30087:8;:32::i;:::-;29243:883;;;;;;;;;;:::o;17259:149::-;17348:7;17374:11;:18;17386:5;17374:18;;;;;;;;;;;;;;;:27;17393:7;17374:27;;;;;;;;;;;;;;;;17367:34;;17259:149;;;;:::o;25483:240::-;24780:12;:10;:12::i;:::-;24770:22;;:6;;;;;;;;;;;:22;;;24762:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25591:1:::1;25571:22;;:8;:22;;;;25563:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25680:8;25651:38;;25672:6;;;;;;;;;;;25651:38;;;;;;;;;;;;25708:8;25699:6;;:17;;;;;;;;;;;;;;;;;;25483:240:::0;:::o;589:104::-;642:15;676:10;669:17;;589:104;:::o;22648:340::-;22766:1;22749:19;;:5;:19;;;;22741:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22846:1;22827:21;;:7;:21;;;;22819:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22928:6;22898:11;:18;22910:5;22898:18;;;;;;;;;;;;;;;:27;22917:7;22898:27;;;;;;;;;;;;;;;:36;;;;22965:7;22949:32;;22958:5;22949:32;;;22974:6;22949:32;;;;;;;;;;;;;;;;;;22648:340;;;:::o;20326:530::-;20449:1;20431:20;;:6;:20;;;;20423:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20532:1;20511:23;;:9;:23;;;;20503:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20585:47;20606:6;20614:9;20625:6;20585:20;:47::i;:::-;20663:71;20685:6;20663:71;;;;;;;;;;;;;;;;;:9;:17;20673:6;20663:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;20643:9;:17;20653:6;20643:17;;;;;;;;;;;;;;;:91;;;;20767:32;20792:6;20767:9;:20;20777:9;20767:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;20744:9;:20;20754:9;20744:20;;;;;;;;;;;;;;;:55;;;;20831:9;20814:35;;20823:6;20814:35;;;20842:6;20814:35;;;;;;;;;;;;;;;;;;20326:530;;;:::o;5324:187::-;5410:7;5442:1;5437;:6;;5445:12;5429:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5429:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5468:9;5484:1;5480;:5;5468:17;;5503:1;5496:8;;;5324:187;;;;;:::o;4452:176::-;4510:7;4529:9;4545:1;4541;:5;4529:17;;4569:1;4564;:6;;4556:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4620:1;4613:8;;;4452:176;;;;:::o;26163:112::-;26228:7;26254;:14;;;26247:21;;26163:112;;;:::o;21126:370::-;21228:1;21209:21;;:7;:21;;;;21201:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21277:49;21306:1;21310:7;21319:6;21277:20;:49::i;:::-;21352:24;21369:6;21352:12;;:16;;:24;;;;:::i;:::-;21337:12;:39;;;;21407:30;21430:6;21407:9;:18;21417:7;21407:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;21386:9;:18;21396:7;21386:18;;;;;;;;;;;;;;;:51;;;;21473:7;21452:37;;21469:1;21452:37;;;21482:6;21452:37;;;;;;;;;;;;;;;;;;21126:370;;:::o;26281:178::-;26451:1;26433:7;:14;;;:19;;;;;;;;;;;26281:178;:::o;23986:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1701600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1050",
								"PERMIT_TYPEHASH()": "323",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mine(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1268",
								"owner()": "1106",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "24408",
								"rescueTokens(address,address,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "MSTORE"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSHSIZE"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "CODESIZE"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SUB"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSHSIZE"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP4"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "CODECOPY"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 16,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 17,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP3"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP4"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP3"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP4"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "AND"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ISZERO"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "JUMPI"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP3"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SUB"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP4"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SUB"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "EXP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SUB"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "NOT"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "AND"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MSTORE"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "JUMPDEST"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MSTORE"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP4"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP3"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP4"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "AND"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ISZERO"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "JUMPI"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP3"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SUB"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP4"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SUB"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "EXP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SUB"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "NOT"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "AND"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MSTORE"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "JUMPDEST"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MSTORE"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "DUP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "MLOAD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "ADD"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP3"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP2"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "SWAP1"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30475,
									"end": 30479,
									"name": "DUP3"
								},
								{
									"begin": 30481,
									"end": 30487,
									"name": "DUP3"
								},
								{
									"begin": 15384,
									"end": 15388,
									"name": "DUP2"
								},
								{
									"begin": 15376,
									"end": 15381,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP1"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "DUP1"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "MLOAD"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP1"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "ADD"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP1"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP3"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP2"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "SWAP1"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "JUMPDEST"
								},
								{
									"begin": 15376,
									"end": 15388,
									"name": "POP"
								},
								{
									"begin": 15408,
									"end": 15414,
									"name": "DUP1"
								},
								{
									"begin": 15398,
									"end": 15405,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP1"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "DUP1"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "MLOAD"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP1"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "ADD"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP1"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP3"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP2"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "SWAP1"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "JUMPDEST"
								},
								{
									"begin": 15398,
									"end": 15414,
									"name": "POP"
								},
								{
									"begin": 15436,
									"end": 15438,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 15424,
									"end": 15433,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 15424,
									"end": 15433,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "EXP"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "DUP2"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "SLOAD"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "DUP2"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "MUL"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "NOT"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "AND"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "SWAP1"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "DUP4"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "AND"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "MUL"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "OR"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "SWAP1"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "SSTORE"
								},
								{
									"begin": 15424,
									"end": 15438,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 15304,
									"end": 15445,
									"name": "POP"
								},
								{
									"begin": 28741,
									"end": 28756,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28800,
									"end": 28809,
									"name": "CHAINID"
								},
								{
									"begin": 28789,
									"end": 28809,
									"name": "SWAP1"
								},
								{
									"begin": 28789,
									"end": 28809,
									"name": "POP"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "MLOAD"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "DUP1"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "DUP1"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "SWAP2"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "CODECOPY"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "ADD"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "SWAP1"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "POP"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "MLOAD"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "DUP1"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "SWAP2"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "SUB"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "SWAP1"
								},
								{
									"begin": 28899,
									"end": 28994,
									"name": "KECCAK256"
								},
								{
									"begin": 29028,
									"end": 29034,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 29028,
									"end": 29032,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 29028,
									"end": 29032,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 29028,
									"end": 29032,
									"name": "SHL"
								},
								{
									"begin": 29028,
									"end": 29034,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 29028,
									"end": 29034,
									"name": "SHR"
								},
								{
									"begin": 29028,
									"end": 29034,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 29028,
									"end": 29034,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 29028,
									"end": 29034,
									"name": "JUMPDEST"
								},
								{
									"begin": 29012,
									"end": 29036,
									"name": "DUP1"
								},
								{
									"begin": 29012,
									"end": 29036,
									"name": "MLOAD"
								},
								{
									"begin": 29012,
									"end": 29036,
									"name": "SWAP1"
								},
								{
									"begin": 29012,
									"end": 29036,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 29012,
									"end": 29036,
									"name": "ADD"
								},
								{
									"begin": 29012,
									"end": 29036,
									"name": "KECCAK256"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "MLOAD"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "DUP1"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "ADD"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "MSTORE"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "DUP1"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "DUP2"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "MSTORE"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "ADD"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "DUP2"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "MSTORE"
								},
								{
									"begin": 29064,
									"end": 29074,
									"name": "POP"
								},
								{
									"begin": 29054,
									"end": 29075,
									"name": "DUP1"
								},
								{
									"begin": 29054,
									"end": 29075,
									"name": "MLOAD"
								},
								{
									"begin": 29054,
									"end": 29075,
									"name": "SWAP1"
								},
								{
									"begin": 29054,
									"end": 29075,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 29054,
									"end": 29075,
									"name": "ADD"
								},
								{
									"begin": 29054,
									"end": 29075,
									"name": "KECCAK256"
								},
								{
									"begin": 29104,
									"end": 29111,
									"name": "DUP4"
								},
								{
									"begin": 29137,
									"end": 29141,
									"name": "ADDRESS"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "MLOAD"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "ADD"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP1"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP7"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP2"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "MSTORE"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "ADD"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP6"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP2"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "MSTORE"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "ADD"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP5"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP2"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "MSTORE"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "ADD"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP4"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP2"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "MSTORE"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "ADD"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP3"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "AND"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "AND"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "DUP2"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "MSTORE"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "ADD"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "SWAP6"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "POP"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "POP"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "POP"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "POP"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "POP"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "POP"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "SWAP1"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28871,
									"end": 29156,
									"name": "MSTORE"
								},
								{
									"begin": 28848,
									"end": 29166,
									"name": "DUP1"
								},
								{
									"begin": 28848,
									"end": 29166,
									"name": "MLOAD"
								},
								{
									"begin": 28848,
									"end": 29166,
									"name": "SWAP1"
								},
								{
									"begin": 28848,
									"end": 29166,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28848,
									"end": 29166,
									"name": "ADD"
								},
								{
									"begin": 28848,
									"end": 29166,
									"name": "KECCAK256"
								},
								{
									"begin": 28829,
									"end": 28845,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 28829,
									"end": 29166,
									"name": "DUP2"
								},
								{
									"begin": 28829,
									"end": 29166,
									"name": "SWAP1"
								},
								{
									"begin": 28829,
									"end": 29166,
									"name": "SSTORE"
								},
								{
									"begin": 28829,
									"end": 29166,
									"name": "POP"
								},
								{
									"begin": 28708,
									"end": 29173,
									"name": "POP"
								},
								{
									"begin": 24365,
									"end": 24382,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24385,
									"end": 24397,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 24385,
									"end": 24395,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 24385,
									"end": 24395,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 24385,
									"end": 24395,
									"name": "SHL"
								},
								{
									"begin": 24385,
									"end": 24397,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 24385,
									"end": 24397,
									"name": "SHR"
								},
								{
									"begin": 24385,
									"end": 24397,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 24385,
									"end": 24397,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 24385,
									"end": 24397,
									"name": "JUMPDEST"
								},
								{
									"begin": 24365,
									"end": 24397,
									"name": "SWAP1"
								},
								{
									"begin": 24365,
									"end": 24397,
									"name": "POP"
								},
								{
									"begin": 24416,
									"end": 24425,
									"name": "DUP1"
								},
								{
									"begin": 24407,
									"end": 24413,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 24407,
									"end": 24413,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "EXP"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "DUP2"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "SLOAD"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "DUP2"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "MUL"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "NOT"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "AND"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "SWAP1"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "DUP4"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "AND"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "MUL"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "OR"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "SWAP1"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "SSTORE"
								},
								{
									"begin": 24407,
									"end": 24425,
									"name": "POP"
								},
								{
									"begin": 24473,
									"end": 24482,
									"name": "DUP1"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "AND"
								},
								{
									"begin": 24469,
									"end": 24470,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "AND"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "MLOAD"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "MLOAD"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "DUP1"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "SWAP2"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "SUB"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "SWAP1"
								},
								{
									"begin": 24440,
									"end": 24483,
									"name": "LOG3"
								},
								{
									"begin": 24331,
									"end": 24490,
									"name": "POP"
								},
								{
									"begin": 30499,
									"end": 30521,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 30505,
									"end": 30507,
									"name": "DUP5"
								},
								{
									"begin": 30509,
									"end": 30520,
									"name": "DUP3"
								},
								{
									"begin": 30499,
									"end": 30504,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 30499,
									"end": 30504,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30499,
									"end": 30504,
									"name": "SHL"
								},
								{
									"begin": 30499,
									"end": 30521,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30499,
									"end": 30521,
									"name": "SHR"
								},
								{
									"begin": 30499,
									"end": 30521,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 30499,
									"end": 30521,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 30499,
									"end": 30521,
									"name": "JUMPDEST"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30365,
									"end": 30528,
									"name": "POP"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "34"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMP"
								},
								{
									"begin": 15510,
									"end": 15591,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 15510,
									"end": 15591,
									"name": "JUMPDEST"
								},
								{
									"begin": 15547,
									"end": 15560,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 15579,
									"end": 15584,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SLOAD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "AND"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ISZERO"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "MUL"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SUB"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "AND"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DIV"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DIV"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "MUL"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "MLOAD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "MSTORE"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP3"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "MSTORE"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP3"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SLOAD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "AND"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ISZERO"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "MUL"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SUB"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "AND"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DIV"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ISZERO"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH [tag]",
									"value": "36"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "JUMPI"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "LT"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH [tag]",
									"value": "37"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "JUMPI"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP4"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SLOAD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DIV"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "MUL"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP4"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "MSTORE"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH [tag]",
									"value": "36"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "JUMP"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "tag",
									"value": "37"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "JUMPDEST"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP3"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "MSTORE"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "KECCAK256"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "tag",
									"value": "38"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "JUMPDEST"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SLOAD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "MSTORE"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP4"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "GT"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH [tag]",
									"value": "38"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "JUMPI"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP3"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SUB"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "AND"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "DUP3"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP2"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "tag",
									"value": "36"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "JUMPDEST"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "POP"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "POP"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "POP"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "POP"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "POP"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15572,
									"end": 15584,
									"name": "POP"
								},
								{
									"begin": 15510,
									"end": 15591,
									"name": "SWAP1"
								},
								{
									"begin": 15510,
									"end": 15591,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 589,
									"end": 693,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 589,
									"end": 693,
									"name": "JUMPDEST"
								},
								{
									"begin": 642,
									"end": 657,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 676,
									"end": 686,
									"name": "CALLER"
								},
								{
									"begin": 669,
									"end": 686,
									"name": "SWAP1"
								},
								{
									"begin": 669,
									"end": 686,
									"name": "POP"
								},
								{
									"begin": 589,
									"end": 693,
									"name": "SWAP1"
								},
								{
									"begin": 589,
									"end": 693,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 21126,
									"end": 21496,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 21126,
									"end": 21496,
									"name": "JUMPDEST"
								},
								{
									"begin": 21228,
									"end": 21229,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 21209,
									"end": 21230,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21209,
									"end": 21230,
									"name": "AND"
								},
								{
									"begin": 21209,
									"end": 21216,
									"name": "DUP3"
								},
								{
									"begin": 21209,
									"end": 21230,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21209,
									"end": 21230,
									"name": "AND"
								},
								{
									"begin": 21209,
									"end": 21230,
									"name": "EQ"
								},
								{
									"begin": 21209,
									"end": 21230,
									"name": "ISZERO"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "PUSH [tag]",
									"value": "41"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "JUMPI"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "MLOAD"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "DUP2"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "MSTORE"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "ADD"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "DUP1"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "DUP1"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "ADD"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "DUP3"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "DUP2"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "SUB"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "DUP3"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "MSTORE"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "DUP2"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "MSTORE"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "ADD"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "DUP1"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "PUSH",
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "DUP2"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "MSTORE"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "POP"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "ADD"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "SWAP2"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "POP"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "POP"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "MLOAD"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "DUP1"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "SWAP2"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "SUB"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "SWAP1"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "REVERT"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "tag",
									"value": "41"
								},
								{
									"begin": 21201,
									"end": 21266,
									"name": "JUMPDEST"
								},
								{
									"begin": 21277,
									"end": 21326,
									"name": "PUSH [tag]",
									"value": "42"
								},
								{
									"begin": 21306,
									"end": 21307,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 21310,
									"end": 21317,
									"name": "DUP4"
								},
								{
									"begin": 21319,
									"end": 21325,
									"name": "DUP4"
								},
								{
									"begin": 21277,
									"end": 21297,
									"name": "PUSH [tag]",
									"value": "43"
								},
								{
									"begin": 21277,
									"end": 21297,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21277,
									"end": 21297,
									"name": "SHL"
								},
								{
									"begin": 21277,
									"end": 21326,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21277,
									"end": 21326,
									"name": "SHR"
								},
								{
									"begin": 21277,
									"end": 21326,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 21277,
									"end": 21326,
									"name": "tag",
									"value": "42"
								},
								{
									"begin": 21277,
									"end": 21326,
									"name": "JUMPDEST"
								},
								{
									"begin": 21352,
									"end": 21376,
									"name": "PUSH [tag]",
									"value": "44"
								},
								{
									"begin": 21369,
									"end": 21375,
									"name": "DUP2"
								},
								{
									"begin": 21352,
									"end": 21364,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 21352,
									"end": 21364,
									"name": "SLOAD"
								},
								{
									"begin": 21352,
									"end": 21368,
									"name": "PUSH [tag]",
									"value": "45"
								},
								{
									"begin": 21352,
									"end": 21368,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21352,
									"end": 21368,
									"name": "SHL"
								},
								{
									"begin": 21352,
									"end": 21368,
									"name": "PUSH [tag]",
									"value": "18446744073709551726"
								},
								{
									"begin": 21352,
									"end": 21368,
									"name": "OR"
								},
								{
									"begin": 21352,
									"end": 21368,
									"name": "SWAP1"
								},
								{
									"begin": 21352,
									"end": 21376,
									"name": "SWAP2"
								},
								{
									"begin": 21352,
									"end": 21376,
									"name": "SWAP1"
								},
								{
									"begin": 21352,
									"end": 21376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21352,
									"end": 21376,
									"name": "SHR"
								},
								{
									"begin": 21352,
									"end": 21376,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 21352,
									"end": 21376,
									"name": "tag",
									"value": "44"
								},
								{
									"begin": 21352,
									"end": 21376,
									"name": "JUMPDEST"
								},
								{
									"begin": 21337,
									"end": 21349,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 21337,
									"end": 21376,
									"name": "DUP2"
								},
								{
									"begin": 21337,
									"end": 21376,
									"name": "SWAP1"
								},
								{
									"begin": 21337,
									"end": 21376,
									"name": "SSTORE"
								},
								{
									"begin": 21337,
									"end": 21376,
									"name": "POP"
								},
								{
									"begin": 21407,
									"end": 21437,
									"name": "PUSH [tag]",
									"value": "46"
								},
								{
									"begin": 21430,
									"end": 21436,
									"name": "DUP2"
								},
								{
									"begin": 21407,
									"end": 21416,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "DUP1"
								},
								{
									"begin": 21417,
									"end": 21424,
									"name": "DUP6"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "AND"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "AND"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "DUP2"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "MSTORE"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "ADD"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "SWAP1"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "DUP2"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "MSTORE"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "ADD"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "KECCAK256"
								},
								{
									"begin": 21407,
									"end": 21425,
									"name": "SLOAD"
								},
								{
									"begin": 21407,
									"end": 21429,
									"name": "PUSH [tag]",
									"value": "45"
								},
								{
									"begin": 21407,
									"end": 21429,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21407,
									"end": 21429,
									"name": "SHL"
								},
								{
									"begin": 21407,
									"end": 21429,
									"name": "PUSH [tag]",
									"value": "18446744073709551726"
								},
								{
									"begin": 21407,
									"end": 21429,
									"name": "OR"
								},
								{
									"begin": 21407,
									"end": 21429,
									"name": "SWAP1"
								},
								{
									"begin": 21407,
									"end": 21437,
									"name": "SWAP2"
								},
								{
									"begin": 21407,
									"end": 21437,
									"name": "SWAP1"
								},
								{
									"begin": 21407,
									"end": 21437,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21407,
									"end": 21437,
									"name": "SHR"
								},
								{
									"begin": 21407,
									"end": 21437,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 21407,
									"end": 21437,
									"name": "tag",
									"value": "46"
								},
								{
									"begin": 21407,
									"end": 21437,
									"name": "JUMPDEST"
								},
								{
									"begin": 21386,
									"end": 21395,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "DUP1"
								},
								{
									"begin": 21396,
									"end": 21403,
									"name": "DUP5"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "AND"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "AND"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "DUP2"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "MSTORE"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "ADD"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "SWAP1"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "DUP2"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "MSTORE"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "ADD"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 21386,
									"end": 21404,
									"name": "KECCAK256"
								},
								{
									"begin": 21386,
									"end": 21437,
									"name": "DUP2"
								},
								{
									"begin": 21386,
									"end": 21437,
									"name": "SWAP1"
								},
								{
									"begin": 21386,
									"end": 21437,
									"name": "SSTORE"
								},
								{
									"begin": 21386,
									"end": 21437,
									"name": "POP"
								},
								{
									"begin": 21473,
									"end": 21480,
									"name": "DUP2"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "AND"
								},
								{
									"begin": 21469,
									"end": 21470,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "AND"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 21482,
									"end": 21488,
									"name": "DUP4"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "MLOAD"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "DUP1"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "DUP3"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "DUP2"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "MSTORE"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "ADD"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "SWAP2"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "POP"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "POP"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "MLOAD"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "DUP1"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "SWAP2"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "SUB"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "SWAP1"
								},
								{
									"begin": 21452,
									"end": 21489,
									"name": "LOG3"
								},
								{
									"begin": 21126,
									"end": 21496,
									"name": "POP"
								},
								{
									"begin": 21126,
									"end": 21496,
									"name": "POP"
								},
								{
									"begin": 21126,
									"end": 21496,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 23986,
									"end": 24078,
									"name": "tag",
									"value": "43"
								},
								{
									"begin": 23986,
									"end": 24078,
									"name": "JUMPDEST"
								},
								{
									"begin": 23986,
									"end": 24078,
									"name": "POP"
								},
								{
									"begin": 23986,
									"end": 24078,
									"name": "POP"
								},
								{
									"begin": 23986,
									"end": 24078,
									"name": "POP"
								},
								{
									"begin": 23986,
									"end": 24078,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4452,
									"end": 4628,
									"name": "tag",
									"value": "45"
								},
								{
									"begin": 4452,
									"end": 4628,
									"name": "JUMPDEST"
								},
								{
									"begin": 4510,
									"end": 4517,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4529,
									"end": 4538,
									"name": "DUP1"
								},
								{
									"begin": 4545,
									"end": 4546,
									"name": "DUP3"
								},
								{
									"begin": 4541,
									"end": 4542,
									"name": "DUP5"
								},
								{
									"begin": 4541,
									"end": 4546,
									"name": "ADD"
								},
								{
									"begin": 4529,
									"end": 4546,
									"name": "SWAP1"
								},
								{
									"begin": 4529,
									"end": 4546,
									"name": "POP"
								},
								{
									"begin": 4569,
									"end": 4570,
									"name": "DUP4"
								},
								{
									"begin": 4564,
									"end": 4565,
									"name": "DUP2"
								},
								{
									"begin": 4564,
									"end": 4570,
									"name": "LT"
								},
								{
									"begin": 4564,
									"end": 4570,
									"name": "ISZERO"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "PUSH [tag]",
									"value": "49"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "JUMPI"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "MLOAD"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "DUP2"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "MSTORE"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "ADD"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "DUP1"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "DUP1"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "ADD"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "DUP3"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "DUP2"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "SUB"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "DUP3"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "MSTORE"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "DUP2"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "MSTORE"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "ADD"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "DUP1"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "DUP2"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "MSTORE"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "POP"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "ADD"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "SWAP2"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "POP"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "POP"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "MLOAD"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "DUP1"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "SWAP2"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "SUB"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "SWAP1"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "REVERT"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "tag",
									"value": "49"
								},
								{
									"begin": 4556,
									"end": 4602,
									"name": "JUMPDEST"
								},
								{
									"begin": 4620,
									"end": 4621,
									"name": "DUP1"
								},
								{
									"begin": 4613,
									"end": 4621,
									"name": "SWAP2"
								},
								{
									"begin": 4613,
									"end": 4621,
									"name": "POP"
								},
								{
									"begin": 4613,
									"end": 4621,
									"name": "POP"
								},
								{
									"begin": 4452,
									"end": 4628,
									"name": "SWAP3"
								},
								{
									"begin": 4452,
									"end": 4628,
									"name": "SWAP2"
								},
								{
									"begin": 4452,
									"end": 4628,
									"name": "POP"
								},
								{
									"begin": 4452,
									"end": 4628,
									"name": "POP"
								},
								{
									"begin": 4452,
									"end": 4628,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP3"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SLOAD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP2"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "AND"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ISZERO"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "MUL"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SUB"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "AND"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DIV"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "MSTORE"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "KECCAK256"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ADD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DIV"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP2"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ADD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP3"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP3"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "LT"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "51"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPI"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "MLOAD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "NOT"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "AND"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP4"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ADD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "OR"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP6"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SSTORE"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "50"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMP"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "51"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP3"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ADD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ADD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP6"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SSTORE"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP3"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ISZERO"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "50"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPI"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP2"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP3"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ADD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "52"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP3"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP2"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "GT"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ISZERO"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "53"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPI"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP3"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "MLOAD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP3"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SSTORE"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP2"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ADD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP2"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ADD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "52"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMP"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "53"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "50"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "POP"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "POP"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "54"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP2"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "55"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "54"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "POP"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "55"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "56"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP2"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "57"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP3"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "GT"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ISZERO"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "58"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPI"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP2"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SSTORE"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "POP"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "ADD"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [tag]",
									"value": "57"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMP"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "58"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "POP"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMP"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "56"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "SWAP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "tag",
									"value": "34"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "JUMPDEST"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "DUP1"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "CODECOPY"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 30312,
									"end": 30875,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3df33f16a9d99e24b879a4f8add5857dbbfc667963cc779d25ae0cd2d8aca2a64736f6c63430006020033",
									".code": [
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "MSTORE"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "POP"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "LT"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "SHR"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "GT"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "AB27BE20"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "GT"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "AB27BE20"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "CEA9D26F"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMP"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPDEST"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMP"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPDEST"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "GT"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMP"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPDEST"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "EQ"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPI"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "JUMPDEST"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "DUP1"
										},
										{
											"begin": 30312,
											"end": 30875,
											"name": "REVERT"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMPDEST"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMPDEST"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MLOAD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ADD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP3"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SUB"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP3"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MSTORE"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP4"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MLOAD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MSTORE"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ADD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MLOAD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ADD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP4"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ADD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "AND"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ISZERO"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMPI"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP3"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SUB"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MLOAD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP4"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SUB"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "EXP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SUB"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "NOT"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "AND"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MSTORE"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "ADD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMPDEST"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP3"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "MLOAD"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "DUP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP2"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SUB"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "RETURN"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "JUMPDEST"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ADD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "AND"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ADD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP3"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ADD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP3"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "JUMPDEST"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "MLOAD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP3"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ISZERO"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ISZERO"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ISZERO"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ISZERO"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "MSTORE"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "ADD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "MLOAD"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "DUP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SUB"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP1"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "RETURN"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "JUMPDEST"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "JUMPDEST"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "MLOAD"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "DUP1"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "DUP3"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "DUP2"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "MSTORE"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "ADD"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "SWAP2"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "POP"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "POP"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "MLOAD"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "DUP1"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "SWAP2"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "SUB"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "SWAP1"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "RETURN"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "JUMPDEST"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "AND"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP3"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "AND"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP3"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP3"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "JUMPDEST"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "MLOAD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP3"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ISZERO"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ISZERO"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ISZERO"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ISZERO"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "MSTORE"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "ADD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "MLOAD"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "DUP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP2"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SUB"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP1"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "RETURN"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "JUMPDEST"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "JUMPDEST"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "MLOAD"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "DUP1"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "DUP3"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "DUP2"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "MSTORE"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "ADD"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "SWAP2"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "POP"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "POP"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "MLOAD"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "DUP1"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "SWAP2"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "SUB"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "SWAP1"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "RETURN"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "JUMPDEST"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "JUMPDEST"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "MLOAD"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "DUP1"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "DUP3"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "AND"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "AND"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "DUP2"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "MSTORE"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "ADD"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "SWAP2"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "POP"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "POP"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "MLOAD"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "DUP1"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "SWAP2"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "SUB"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "SWAP1"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "RETURN"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "JUMPDEST"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "JUMPDEST"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "MLOAD"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "DUP1"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "DUP3"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "DUP2"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "MSTORE"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "ADD"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "SWAP2"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "POP"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "POP"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "MLOAD"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "DUP1"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "SWAP2"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "SUB"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "SWAP1"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "RETURN"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "JUMPDEST"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ADD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "AND"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ADD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP3"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ADD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP3"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "JUMPDEST"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "MLOAD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP3"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ISZERO"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ISZERO"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ISZERO"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ISZERO"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "MSTORE"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "ADD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "MLOAD"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "DUP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SUB"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP1"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "RETURN"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "JUMPDEST"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "ADD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "AND"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "ADD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP3"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "JUMPDEST"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "MLOAD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP3"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "MSTORE"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "ADD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "MLOAD"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "DUP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SUB"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "RETURN"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "JUMPDEST"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "JUMPDEST"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "STOP"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "JUMPDEST"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "DUP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "DUP2"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "ADD"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "DUP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "DUP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "AND"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "ADD"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP3"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP2"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "POP"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "POP"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "POP"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "JUMPDEST"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "MLOAD"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "DUP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "DUP3"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "DUP2"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "MSTORE"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "ADD"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP2"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "POP"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "POP"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "MLOAD"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "DUP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP2"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SUB"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "RETURN"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "JUMPDEST"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "JUMPDEST"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "MLOAD"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "DUP1"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "DUP3"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "AND"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "AND"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "DUP2"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "MSTORE"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "ADD"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "SWAP2"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "POP"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "POP"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "MLOAD"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "DUP1"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "SWAP2"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "SUB"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "SWAP1"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "RETURN"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMPDEST"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMPDEST"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MLOAD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ADD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP3"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SUB"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP3"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MSTORE"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP4"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MLOAD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MSTORE"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ADD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MLOAD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ADD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP4"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ADD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "AND"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ISZERO"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMPI"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP3"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SUB"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MLOAD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP4"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SUB"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "EXP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SUB"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "NOT"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "AND"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MSTORE"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "ADD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMPDEST"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP3"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "MLOAD"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "DUP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP2"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SUB"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "RETURN"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "JUMPDEST"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ADD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "AND"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ADD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP3"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ADD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP3"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "JUMPDEST"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "MLOAD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP3"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ISZERO"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ISZERO"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ISZERO"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ISZERO"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "MSTORE"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "ADD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "MLOAD"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "DUP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SUB"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP1"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "RETURN"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "JUMPDEST"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ADD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "AND"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ADD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP3"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ADD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP3"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "JUMPDEST"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "MLOAD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP3"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ISZERO"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ISZERO"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ISZERO"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ISZERO"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "MSTORE"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "ADD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "MLOAD"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "DUP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SUB"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP1"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "RETURN"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "JUMPDEST"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "DUP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "DUP2"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "ADD"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "DUP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "DUP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "AND"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "ADD"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP3"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP2"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "DUP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "ADD"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP3"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP2"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "SWAP1"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "POP"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "POP"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "POP"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "JUMPDEST"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "STOP"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "JUMPDEST"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "DUP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "DUP2"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "ADD"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "DUP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "DUP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "AND"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "ADD"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP3"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP2"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "DUP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "AND"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "ADD"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP3"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP2"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "DUP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "ADD"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP3"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP2"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "SWAP1"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "POP"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "POP"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "POP"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "JUMPDEST"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "STOP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "JUMPDEST"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "DUP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "DUP2"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "ADD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "DUP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "DUP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "AND"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "ADD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP3"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP2"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "DUP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "AND"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "ADD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP3"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP2"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "DUP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "ADD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP3"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP2"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "DUP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "ADD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP3"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP2"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "DUP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "AND"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "ADD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP3"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP2"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "DUP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "ADD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP3"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP2"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "DUP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "ADD"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP3"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP2"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "SWAP1"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "JUMPDEST"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "STOP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "JUMPDEST"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "ADD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "AND"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "ADD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP3"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "AND"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "ADD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP3"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "JUMPDEST"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "MLOAD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP3"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "MSTORE"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "ADD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "MLOAD"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "DUP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SUB"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP1"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "RETURN"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "JUMPDEST"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "DUP1"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "DUP2"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "ADD"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "SWAP1"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "DUP1"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "DUP1"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "AND"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "SWAP1"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "ADD"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "SWAP1"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "SWAP3"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "SWAP2"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "SWAP1"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "POP"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "POP"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "POP"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "JUMPDEST"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "STOP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMPDEST"
										},
										{
											"begin": 15547,
											"end": 15560,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15579,
											"end": 15584,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SLOAD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ISZERO"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MUL"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SUB"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DIV"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DIV"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MUL"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MLOAD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SLOAD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ISZERO"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MUL"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SUB"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DIV"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ISZERO"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPI"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "LT"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPI"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP4"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SLOAD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DIV"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MUL"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP4"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPDEST"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "KECCAK256"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPDEST"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SLOAD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP4"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "GT"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPI"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SUB"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "AND"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP2"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "JUMPDEST"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15572,
											"end": 15584,
											"name": "POP"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "SWAP1"
										},
										{
											"begin": 15510,
											"end": 15591,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "JUMPDEST"
										},
										{
											"begin": 17629,
											"end": 17633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17645,
											"end": 17684,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 17654,
											"end": 17666,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 17654,
											"end": 17664,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 17654,
											"end": 17666,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17654,
											"end": 17666,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 17654,
											"end": 17666,
											"name": "JUMPDEST"
										},
										{
											"begin": 17668,
											"end": 17675,
											"name": "DUP5"
										},
										{
											"begin": 17677,
											"end": 17683,
											"name": "DUP5"
										},
										{
											"begin": 17645,
											"end": 17653,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 17645,
											"end": 17684,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17645,
											"end": 17684,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 17645,
											"end": 17684,
											"name": "JUMPDEST"
										},
										{
											"begin": 17701,
											"end": 17705,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17694,
											"end": 17705,
											"name": "SWAP1"
										},
										{
											"begin": 17694,
											"end": 17705,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP3"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "SWAP2"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "POP"
										},
										{
											"begin": 17546,
											"end": 17712,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "JUMPDEST"
										},
										{
											"begin": 16606,
											"end": 16613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16632,
											"end": 16644,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 16632,
											"end": 16644,
											"name": "SLOAD"
										},
										{
											"begin": 16625,
											"end": 16644,
											"name": "SWAP1"
										},
										{
											"begin": 16625,
											"end": 16644,
											"name": "POP"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "SWAP1"
										},
										{
											"begin": 16553,
											"end": 16651,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "JUMPDEST"
										},
										{
											"begin": 18278,
											"end": 18282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18294,
											"end": 18330,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 18304,
											"end": 18310,
											"name": "DUP5"
										},
										{
											"begin": 18312,
											"end": 18321,
											"name": "DUP5"
										},
										{
											"begin": 18323,
											"end": 18329,
											"name": "DUP5"
										},
										{
											"begin": 18294,
											"end": 18303,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 18294,
											"end": 18330,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18294,
											"end": 18330,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 18294,
											"end": 18330,
											"name": "JUMPDEST"
										},
										{
											"begin": 18340,
											"end": 18461,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 18349,
											"end": 18355,
											"name": "DUP5"
										},
										{
											"begin": 18357,
											"end": 18369,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 18357,
											"end": 18367,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 18357,
											"end": 18369,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18357,
											"end": 18369,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 18357,
											"end": 18369,
											"name": "JUMPDEST"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 18409,
											"end": 18415,
											"name": "DUP6"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "MLOAD"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "DUP1"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "DUP1"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "DUP2"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "SWAP2"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "CODECOPY"
										},
										{
											"begin": 18371,
											"end": 18382,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18383,
											"end": 18389,
											"name": "DUP12"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "AND"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "AND"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "DUP2"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "SWAP1"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "DUP2"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18371,
											"end": 18390,
											"name": "KECCAK256"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18391,
											"end": 18403,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 18391,
											"end": 18401,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 18391,
											"end": 18403,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18391,
											"end": 18403,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 18391,
											"end": 18403,
											"name": "JUMPDEST"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "AND"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "AND"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "DUP2"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "SWAP1"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "DUP2"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "MSTORE"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "ADD"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "KECCAK256"
										},
										{
											"begin": 18371,
											"end": 18404,
											"name": "SLOAD"
										},
										{
											"begin": 18371,
											"end": 18408,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 18371,
											"end": 18408,
											"name": "SWAP1"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "SWAP3"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "SWAP2"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "SWAP1"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "AND"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 18371,
											"end": 18460,
											"name": "JUMPDEST"
										},
										{
											"begin": 18340,
											"end": 18348,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 18340,
											"end": 18461,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18340,
											"end": 18461,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 18340,
											"end": 18461,
											"name": "JUMPDEST"
										},
										{
											"begin": 18478,
											"end": 18482,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18471,
											"end": 18482,
											"name": "SWAP1"
										},
										{
											"begin": 18471,
											"end": 18482,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP4"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "SWAP3"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "POP"
										},
										{
											"begin": 18172,
											"end": 18489,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "JUMPDEST"
										},
										{
											"begin": 28597,
											"end": 28663,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "SHL"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "DUP2"
										},
										{
											"begin": 28555,
											"end": 28663,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "JUMPDEST"
										},
										{
											"begin": 16453,
											"end": 16458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "SWAP1"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "SLOAD"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "SWAP1"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "EXP"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "SWAP1"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "DIV"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16477,
											"end": 16486,
											"name": "AND"
										},
										{
											"begin": 16470,
											"end": 16486,
											"name": "SWAP1"
										},
										{
											"begin": 16470,
											"end": 16486,
											"name": "POP"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "SWAP1"
										},
										{
											"begin": 16412,
											"end": 16493,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "JUMPDEST"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "SLOAD"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "DUP2"
										},
										{
											"begin": 28670,
											"end": 28701,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "JUMPDEST"
										},
										{
											"begin": 18972,
											"end": 18976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18988,
											"end": 19071,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 18997,
											"end": 19009,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 18997,
											"end": 19007,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 18997,
											"end": 19009,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18997,
											"end": 19009,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 18997,
											"end": 19009,
											"name": "JUMPDEST"
										},
										{
											"begin": 19011,
											"end": 19018,
											"name": "DUP5"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 19059,
											"end": 19069,
											"name": "DUP6"
										},
										{
											"begin": 19020,
											"end": 19031,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 19032,
											"end": 19042,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 19032,
											"end": 19044,
											"name": "JUMPDEST"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "AND"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "AND"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "DUP2"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "MSTORE"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "ADD"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "SWAP1"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "DUP2"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "MSTORE"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "ADD"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19020,
											"end": 19045,
											"name": "KECCAK256"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19046,
											"end": 19053,
											"name": "DUP10"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "AND"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "AND"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "DUP2"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "SWAP1"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "DUP2"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "KECCAK256"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "SLOAD"
										},
										{
											"begin": 19020,
											"end": 19058,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 19020,
											"end": 19058,
											"name": "SWAP1"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "SWAP2"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "SWAP1"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "AND"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 19020,
											"end": 19070,
											"name": "JUMPDEST"
										},
										{
											"begin": 18988,
											"end": 18996,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 18988,
											"end": 19071,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18988,
											"end": 19071,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 18988,
											"end": 19071,
											"name": "JUMPDEST"
										},
										{
											"begin": 19088,
											"end": 19092,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19081,
											"end": 19092,
											"name": "SWAP1"
										},
										{
											"begin": 19081,
											"end": 19092,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP3"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "SWAP2"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 18884,
											"end": 19099,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "JUMPDEST"
										},
										{
											"begin": 16775,
											"end": 16782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16801,
											"end": 16810,
											"name": "DUP1"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16811,
											"end": 16818,
											"name": "DUP4"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "AND"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "AND"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "DUP2"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "MSTORE"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "ADD"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "SWAP1"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "DUP2"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "MSTORE"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "ADD"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "KECCAK256"
										},
										{
											"begin": 16801,
											"end": 16819,
											"name": "SLOAD"
										},
										{
											"begin": 16794,
											"end": 16819,
											"name": "SWAP1"
										},
										{
											"begin": 16794,
											"end": 16819,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP2"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "SWAP1"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "POP"
										},
										{
											"begin": 16709,
											"end": 16826,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "JUMPDEST"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 24780,
											"end": 24790,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "JUMPDEST"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SLOAD"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "EXP"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "DIV"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "EQ"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "JUMPI"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MLOAD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP3"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SUB"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP3"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MLOAD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SUB"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "REVERT"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "JUMPDEST"
										},
										{
											"begin": 25295,
											"end": 25296,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "AND"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "SWAP1"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "SLOAD"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "SWAP1"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "EXP"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "SWAP1"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "DIV"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25279,
											"end": 25285,
											"name": "AND"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "AND"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "MLOAD"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "MLOAD"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "DUP1"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "SWAP2"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "SUB"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "SWAP1"
										},
										{
											"begin": 25258,
											"end": 25298,
											"name": "LOG3"
										},
										{
											"begin": 25325,
											"end": 25326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25308,
											"end": 25314,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 25308,
											"end": 25314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "EXP"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "DUP2"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "SLOAD"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "DUP2"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "MUL"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "NOT"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "AND"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "SWAP1"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "DUP4"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "AND"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "MUL"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "OR"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "SWAP1"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "SSTORE"
										},
										{
											"begin": 25308,
											"end": 25327,
											"name": "POP"
										},
										{
											"begin": 25189,
											"end": 25334,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "JUMPDEST"
										},
										{
											"begin": 30250,
											"end": 30257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30276,
											"end": 30300,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 30276,
											"end": 30283,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30284,
											"end": 30289,
											"name": "DUP5"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "AND"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "AND"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "DUP2"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "MSTORE"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "ADD"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "SWAP1"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "DUP2"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "MSTORE"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "ADD"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30276,
											"end": 30290,
											"name": "KECCAK256"
										},
										{
											"begin": 30276,
											"end": 30298,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 30276,
											"end": 30300,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30276,
											"end": 30300,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 30276,
											"end": 30300,
											"name": "JUMPDEST"
										},
										{
											"begin": 30269,
											"end": 30300,
											"name": "SWAP1"
										},
										{
											"begin": 30269,
											"end": 30300,
											"name": "POP"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP2"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "SWAP1"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "POP"
										},
										{
											"begin": 30189,
											"end": 30307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "JUMPDEST"
										},
										{
											"begin": 24604,
											"end": 24611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "SWAP1"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "SLOAD"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "SWAP1"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "EXP"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "SWAP1"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "DIV"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24630,
											"end": 24636,
											"name": "AND"
										},
										{
											"begin": 24623,
											"end": 24636,
											"name": "SWAP1"
										},
										{
											"begin": 24623,
											"end": 24636,
											"name": "POP"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "SWAP1"
										},
										{
											"begin": 24566,
											"end": 24643,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMPDEST"
										},
										{
											"begin": 15743,
											"end": 15756,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15775,
											"end": 15782,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SLOAD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "AND"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ISZERO"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MUL"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SUB"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "AND"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DIV"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DIV"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MUL"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MLOAD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MSTORE"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP3"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MSTORE"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP3"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SLOAD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "AND"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ISZERO"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MUL"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SUB"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "AND"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DIV"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ISZERO"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPI"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "LT"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPI"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP4"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SLOAD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DIV"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MUL"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP4"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MSTORE"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPDEST"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP3"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MSTORE"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "KECCAK256"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPDEST"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SLOAD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "MSTORE"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP4"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "GT"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPI"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP3"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SUB"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "AND"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "DUP3"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "ADD"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP2"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "JUMPDEST"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "SWAP1"
										},
										{
											"begin": 15768,
											"end": 15782,
											"name": "POP"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "SWAP1"
										},
										{
											"begin": 15704,
											"end": 15789,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "JUMPDEST"
										},
										{
											"begin": 19679,
											"end": 19683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19695,
											"end": 19824,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 19704,
											"end": 19716,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 19704,
											"end": 19714,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 19704,
											"end": 19716,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19704,
											"end": 19716,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 19704,
											"end": 19716,
											"name": "JUMPDEST"
										},
										{
											"begin": 19718,
											"end": 19725,
											"name": "DUP5"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 19766,
											"end": 19781,
											"name": "DUP6"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "MLOAD"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "DUP1"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "DUP1"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "DUP2"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "SWAP2"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "CODECOPY"
										},
										{
											"begin": 19727,
											"end": 19738,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19739,
											"end": 19751,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 19739,
											"end": 19749,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 19739,
											"end": 19751,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19739,
											"end": 19751,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 19739,
											"end": 19751,
											"name": "JUMPDEST"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "AND"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "AND"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "DUP2"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "SWAP1"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "DUP2"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19727,
											"end": 19752,
											"name": "KECCAK256"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19753,
											"end": 19760,
											"name": "DUP11"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "AND"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "AND"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "DUP2"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "SWAP1"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "DUP2"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "MSTORE"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "ADD"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "KECCAK256"
										},
										{
											"begin": 19727,
											"end": 19761,
											"name": "SLOAD"
										},
										{
											"begin": 19727,
											"end": 19765,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 19727,
											"end": 19765,
											"name": "SWAP1"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "SWAP3"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "SWAP2"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "SWAP1"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "AND"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 19727,
											"end": 19823,
											"name": "JUMPDEST"
										},
										{
											"begin": 19695,
											"end": 19703,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 19695,
											"end": 19824,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19695,
											"end": 19824,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 19695,
											"end": 19824,
											"name": "JUMPDEST"
										},
										{
											"begin": 19841,
											"end": 19845,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19834,
											"end": 19845,
											"name": "SWAP1"
										},
										{
											"begin": 19834,
											"end": 19845,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP3"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "SWAP2"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "POP"
										},
										{
											"begin": 19586,
											"end": 19852,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "JUMPDEST"
										},
										{
											"begin": 17115,
											"end": 17119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17131,
											"end": 17173,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 17141,
											"end": 17153,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 17141,
											"end": 17151,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 17141,
											"end": 17153,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17141,
											"end": 17153,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 17141,
											"end": 17153,
											"name": "JUMPDEST"
										},
										{
											"begin": 17155,
											"end": 17164,
											"name": "DUP5"
										},
										{
											"begin": 17166,
											"end": 17172,
											"name": "DUP5"
										},
										{
											"begin": 17131,
											"end": 17140,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 17131,
											"end": 17173,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17131,
											"end": 17173,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 17131,
											"end": 17173,
											"name": "JUMPDEST"
										},
										{
											"begin": 17190,
											"end": 17194,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17183,
											"end": 17194,
											"name": "SWAP1"
										},
										{
											"begin": 17183,
											"end": 17194,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP3"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "SWAP2"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "POP"
										},
										{
											"begin": 17029,
											"end": 17201,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "JUMPDEST"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 24780,
											"end": 24790,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "JUMPDEST"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SLOAD"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "EXP"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "DIV"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "EQ"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "JUMPI"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MLOAD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP3"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SUB"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP3"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MLOAD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SUB"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "REVERT"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "JUMPDEST"
										},
										{
											"begin": 30605,
											"end": 30622,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 30611,
											"end": 30613,
											"name": "DUP3"
										},
										{
											"begin": 30615,
											"end": 30621,
											"name": "DUP3"
										},
										{
											"begin": 30605,
											"end": 30610,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 30605,
											"end": 30622,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30605,
											"end": 30622,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 30605,
											"end": 30622,
											"name": "JUMPDEST"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "POP"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "POP"
										},
										{
											"begin": 30534,
											"end": 30629,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "JUMPDEST"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 24780,
											"end": 24790,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "JUMPDEST"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SLOAD"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "EXP"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "DIV"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "EQ"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "JUMPI"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MLOAD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP3"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SUB"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP3"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MLOAD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SUB"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "REVERT"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "JUMPDEST"
										},
										{
											"begin": 30755,
											"end": 30766,
											"name": "DUP2"
										},
										{
											"begin": 30746,
											"end": 30766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30746,
											"end": 30766,
											"name": "AND"
										},
										{
											"begin": 30746,
											"end": 30751,
											"name": "DUP4"
										},
										{
											"begin": 30746,
											"end": 30766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30746,
											"end": 30766,
											"name": "AND"
										},
										{
											"begin": 30746,
											"end": 30766,
											"name": "EQ"
										},
										{
											"begin": 30746,
											"end": 30766,
											"name": "ISZERO"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "JUMPI"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "MLOAD"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "DUP2"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "MSTORE"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "ADD"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "DUP1"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "DUP1"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "ADD"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "DUP3"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "DUP2"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "SUB"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "DUP3"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "MSTORE"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "DUP2"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "MSTORE"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "ADD"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "DUP1"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "PUSH",
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "DUP2"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "MSTORE"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "POP"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "ADD"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "SWAP2"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "POP"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "POP"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "MLOAD"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "DUP1"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "SWAP2"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "SUB"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "SWAP1"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "REVERT"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 30738,
											"end": 30786,
											"name": "JUMPDEST"
										},
										{
											"begin": 30810,
											"end": 30815,
											"name": "DUP3"
										},
										{
											"begin": 30804,
											"end": 30825,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30804,
											"end": 30825,
											"name": "AND"
										},
										{
											"begin": 30804,
											"end": 30825,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 30826,
											"end": 30837,
											"name": "DUP4"
										},
										{
											"begin": 30839,
											"end": 30845,
											"name": "DUP4"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "MLOAD"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP4"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "AND"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "SHL"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP2"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "MSTORE"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "ADD"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP1"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP4"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "AND"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "AND"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP2"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "MSTORE"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "ADD"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP3"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP2"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "MSTORE"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "ADD"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "SWAP3"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "MLOAD"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP1"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP4"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "SUB"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP2"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP8"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP1"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "GAS"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "CALL"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "MLOAD"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP2"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "ADD"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "SWAP1"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP1"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "DUP1"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "MLOAD"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "SWAP1"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "ADD"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "SWAP1"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "SWAP3"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "SWAP2"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "SWAP1"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30804,
											"end": 30846,
											"name": "POP"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "JUMPI"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "MLOAD"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "DUP2"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "MSTORE"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "ADD"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "DUP1"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "DUP1"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "ADD"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "DUP3"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "DUP2"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "SUB"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "DUP3"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "MSTORE"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "DUP2"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "MSTORE"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "ADD"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "DUP1"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "PUSH",
											"value": "5265747269657665206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "DUP2"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "MSTORE"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "POP"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "ADD"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "SWAP2"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "POP"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "POP"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "MLOAD"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "DUP1"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "SWAP2"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "SUB"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "SWAP1"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "REVERT"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 30796,
											"end": 30866,
											"name": "JUMPDEST"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "POP"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "POP"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "POP"
										},
										{
											"begin": 30635,
											"end": 30873,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "JUMPDEST"
										},
										{
											"begin": 29417,
											"end": 29425,
											"name": "DUP4"
										},
										{
											"begin": 29398,
											"end": 29413,
											"name": "TIMESTAMP"
										},
										{
											"begin": 29398,
											"end": 29425,
											"name": "GT"
										},
										{
											"begin": 29398,
											"end": 29425,
											"name": "ISZERO"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "JUMPI"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "MLOAD"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "DUP2"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "MSTORE"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "ADD"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "DUP1"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "DUP1"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "ADD"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "DUP3"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "DUP2"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "SUB"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "DUP3"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "MSTORE"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "DUP2"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "MSTORE"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "ADD"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "DUP1"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "PUSH",
											"value": "5065726D69743A206578706972656420646561646C696E650000000000000000"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "DUP2"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "MSTORE"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "POP"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "ADD"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "SWAP2"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "POP"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "POP"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "MLOAD"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "DUP1"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "SWAP2"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "SUB"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "SWAP1"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "REVERT"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 29390,
											"end": 29454,
											"name": "JUMPDEST"
										},
										{
											"begin": 29465,
											"end": 29483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28597,
											"end": 28663,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 29537,
											"end": 29552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29537,
											"end": 29552,
											"name": "SHL"
										},
										{
											"begin": 29570,
											"end": 29575,
											"name": "DUP9"
										},
										{
											"begin": 29593,
											"end": 29600,
											"name": "DUP9"
										},
										{
											"begin": 29618,
											"end": 29624,
											"name": "DUP9"
										},
										{
											"begin": 29642,
											"end": 29666,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 29642,
											"end": 29649,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29650,
											"end": 29655,
											"name": "DUP15"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "AND"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "AND"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "DUP2"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "MSTORE"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "ADD"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "SWAP1"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "DUP2"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "MSTORE"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "ADD"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29642,
											"end": 29656,
											"name": "KECCAK256"
										},
										{
											"begin": 29642,
											"end": 29664,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 29642,
											"end": 29666,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 29642,
											"end": 29666,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 29642,
											"end": 29666,
											"name": "JUMPDEST"
										},
										{
											"begin": 29684,
											"end": 29692,
											"name": "DUP10"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "MLOAD"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "ADD"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP1"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP8"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP2"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "MSTORE"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "ADD"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP7"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "AND"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "AND"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP2"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "MSTORE"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "ADD"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP6"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "AND"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "AND"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP2"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "MSTORE"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "ADD"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP5"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP2"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "MSTORE"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "ADD"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP4"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP2"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "MSTORE"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "ADD"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP3"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "DUP2"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "MSTORE"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "ADD"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "SWAP7"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "POP"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "POP"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "POP"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "POP"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "POP"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "POP"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "POP"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "SWAP1"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29509,
											"end": 29706,
											"name": "MSTORE"
										},
										{
											"begin": 29486,
											"end": 29716,
											"name": "DUP1"
										},
										{
											"begin": 29486,
											"end": 29716,
											"name": "MLOAD"
										},
										{
											"begin": 29486,
											"end": 29716,
											"name": "SWAP1"
										},
										{
											"begin": 29486,
											"end": 29716,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29486,
											"end": 29716,
											"name": "ADD"
										},
										{
											"begin": 29486,
											"end": 29716,
											"name": "KECCAK256"
										},
										{
											"begin": 29465,
											"end": 29716,
											"name": "SWAP1"
										},
										{
											"begin": 29465,
											"end": 29716,
											"name": "POP"
										},
										{
											"begin": 29727,
											"end": 29740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29807,
											"end": 29813,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": 29832,
											"end": 29848,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 29832,
											"end": 29848,
											"name": "SLOAD"
										},
										{
											"begin": 29866,
											"end": 29876,
											"name": "DUP4"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "MLOAD"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "ADD"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "DUP1"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "DUP5"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "AND"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "AND"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "SHL"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "DUP2"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "MSTORE"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "ADD"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "DUP4"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "DUP2"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "MSTORE"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "ADD"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "DUP3"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "DUP2"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "MSTORE"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "ADD"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "SWAP4"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "POP"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "POP"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "POP"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "POP"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "SWAP1"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29766,
											"end": 29890,
											"name": "MSTORE"
										},
										{
											"begin": 29743,
											"end": 29900,
											"name": "DUP1"
										},
										{
											"begin": 29743,
											"end": 29900,
											"name": "MLOAD"
										},
										{
											"begin": 29743,
											"end": 29900,
											"name": "SWAP1"
										},
										{
											"begin": 29743,
											"end": 29900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29743,
											"end": 29900,
											"name": "ADD"
										},
										{
											"begin": 29743,
											"end": 29900,
											"name": "KECCAK256"
										},
										{
											"begin": 29727,
											"end": 29900,
											"name": "SWAP1"
										},
										{
											"begin": 29727,
											"end": 29900,
											"name": "POP"
										},
										{
											"begin": 29911,
											"end": 29925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 29938,
											"end": 29943,
											"name": "DUP3"
										},
										{
											"begin": 29945,
											"end": 29946,
											"name": "DUP8"
										},
										{
											"begin": 29948,
											"end": 29949,
											"name": "DUP8"
										},
										{
											"begin": 29951,
											"end": 29952,
											"name": "DUP8"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MLOAD"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP2"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MSTORE"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "ADD"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MSTORE"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MLOAD"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP1"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP6"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP2"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MSTORE"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "ADD"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP5"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "AND"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "AND"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP2"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MSTORE"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "ADD"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP4"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP2"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MSTORE"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "ADD"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP3"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP2"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MSTORE"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "ADD"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "SWAP5"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "POP"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "POP"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "POP"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "POP"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "POP"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MLOAD"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP2"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "SUB"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "SWAP1"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP1"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP5"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "SUB"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "SWAP1"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "DUP6"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "GAS"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "STATICCALL"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "POP"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "POP"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "POP"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MLOAD"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "SUB"
										},
										{
											"begin": 29928,
											"end": 29953,
											"name": "MLOAD"
										},
										{
											"begin": 29911,
											"end": 29953,
											"name": "SWAP1"
										},
										{
											"begin": 29911,
											"end": 29953,
											"name": "POP"
										},
										{
											"begin": 29989,
											"end": 29990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29971,
											"end": 29991,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29971,
											"end": 29991,
											"name": "AND"
										},
										{
											"begin": 29971,
											"end": 29977,
											"name": "DUP2"
										},
										{
											"begin": 29971,
											"end": 29991,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29971,
											"end": 29991,
											"name": "AND"
										},
										{
											"begin": 29971,
											"end": 29991,
											"name": "EQ"
										},
										{
											"begin": 29971,
											"end": 29991,
											"name": "ISZERO"
										},
										{
											"begin": 29971,
											"end": 30010,
											"name": "DUP1"
										},
										{
											"begin": 29971,
											"end": 30010,
											"name": "ISZERO"
										},
										{
											"begin": 29971,
											"end": 30010,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 29971,
											"end": 30010,
											"name": "JUMPI"
										},
										{
											"begin": 29971,
											"end": 30010,
											"name": "POP"
										},
										{
											"begin": 30005,
											"end": 30010,
											"name": "DUP10"
										},
										{
											"begin": 29995,
											"end": 30010,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29995,
											"end": 30010,
											"name": "AND"
										},
										{
											"begin": 29995,
											"end": 30001,
											"name": "DUP2"
										},
										{
											"begin": 29995,
											"end": 30010,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29995,
											"end": 30010,
											"name": "AND"
										},
										{
											"begin": 29995,
											"end": 30010,
											"name": "EQ"
										},
										{
											"begin": 29971,
											"end": 30010,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 29971,
											"end": 30010,
											"name": "JUMPDEST"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "JUMPI"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "MLOAD"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "DUP2"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "MSTORE"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "ADD"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "DUP1"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "DUP1"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "ADD"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "DUP3"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "DUP2"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "SUB"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "DUP3"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "MSTORE"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "DUP2"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "MSTORE"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "ADD"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "DUP1"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "PUSH",
											"value": "5065726D69743A20496E76616C6964207369676E617475726500000000000000"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "DUP2"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "MSTORE"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "POP"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "ADD"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "SWAP2"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "POP"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "POP"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "MLOAD"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "DUP1"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "SWAP2"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "SUB"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "SWAP1"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "REVERT"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 29963,
											"end": 30040,
											"name": "JUMPDEST"
										},
										{
											"begin": 30051,
											"end": 30077,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 30051,
											"end": 30058,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30059,
											"end": 30064,
											"name": "DUP13"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "AND"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "AND"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "DUP2"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "MSTORE"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "ADD"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "SWAP1"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "DUP2"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "MSTORE"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "ADD"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30051,
											"end": 30065,
											"name": "KECCAK256"
										},
										{
											"begin": 30051,
											"end": 30075,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 30051,
											"end": 30077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30051,
											"end": 30077,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 30051,
											"end": 30077,
											"name": "JUMPDEST"
										},
										{
											"begin": 30087,
											"end": 30119,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 30096,
											"end": 30101,
											"name": "DUP11"
										},
										{
											"begin": 30103,
											"end": 30110,
											"name": "DUP11"
										},
										{
											"begin": 30112,
											"end": 30118,
											"name": "DUP11"
										},
										{
											"begin": 30087,
											"end": 30095,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 30087,
											"end": 30119,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 30087,
											"end": 30119,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 30087,
											"end": 30119,
											"name": "JUMPDEST"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "POP"
										},
										{
											"begin": 29243,
											"end": 30126,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "JUMPDEST"
										},
										{
											"begin": 17348,
											"end": 17355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17385,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17386,
											"end": 17391,
											"name": "DUP5"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "AND"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "AND"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "DUP2"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "MSTORE"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "ADD"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "SWAP1"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "DUP2"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "MSTORE"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "ADD"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "KECCAK256"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17393,
											"end": 17400,
											"name": "DUP4"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "AND"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "AND"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "DUP2"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "MSTORE"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "ADD"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "SWAP1"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "DUP2"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "MSTORE"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "ADD"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "KECCAK256"
										},
										{
											"begin": 17374,
											"end": 17401,
											"name": "SLOAD"
										},
										{
											"begin": 17367,
											"end": 17401,
											"name": "SWAP1"
										},
										{
											"begin": 17367,
											"end": 17401,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP3"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "SWAP2"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "POP"
										},
										{
											"begin": 17259,
											"end": 17408,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "JUMPDEST"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 24780,
											"end": 24790,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 24780,
											"end": 24792,
											"name": "JUMPDEST"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SLOAD"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "EXP"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "SWAP1"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "DIV"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24776,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "AND"
										},
										{
											"begin": 24770,
											"end": 24792,
											"name": "EQ"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "JUMPI"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MLOAD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP3"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SUB"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP3"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MSTORE"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "ADD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "POP"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "MLOAD"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "DUP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP2"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SUB"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "SWAP1"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "REVERT"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 24762,
											"end": 24829,
											"name": "JUMPDEST"
										},
										{
											"begin": 25591,
											"end": 25592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25571,
											"end": 25593,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25571,
											"end": 25593,
											"name": "AND"
										},
										{
											"begin": 25571,
											"end": 25579,
											"name": "DUP2"
										},
										{
											"begin": 25571,
											"end": 25593,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25571,
											"end": 25593,
											"name": "AND"
										},
										{
											"begin": 25571,
											"end": 25593,
											"name": "EQ"
										},
										{
											"begin": 25571,
											"end": 25593,
											"name": "ISZERO"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "JUMPI"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "MLOAD"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "DUP2"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "MSTORE"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "ADD"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "DUP1"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "DUP1"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "ADD"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "DUP3"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "DUP2"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "SUB"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "DUP3"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "MSTORE"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "DUP2"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "MSTORE"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "ADD"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "DUP1"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "SWAP2"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "CODECOPY"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "ADD"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "SWAP2"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "POP"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "POP"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "MLOAD"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "DUP1"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "SWAP2"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "SUB"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "SWAP1"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "REVERT"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 25563,
											"end": 25636,
											"name": "JUMPDEST"
										},
										{
											"begin": 25680,
											"end": 25688,
											"name": "DUP1"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "AND"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "SWAP1"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "SLOAD"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "SWAP1"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "EXP"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "SWAP1"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "DIV"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25672,
											"end": 25678,
											"name": "AND"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "AND"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "MLOAD"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "MLOAD"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "DUP1"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "SWAP2"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "SUB"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "SWAP1"
										},
										{
											"begin": 25651,
											"end": 25689,
											"name": "LOG3"
										},
										{
											"begin": 25708,
											"end": 25716,
											"name": "DUP1"
										},
										{
											"begin": 25699,
											"end": 25705,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 25699,
											"end": 25705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "EXP"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "DUP2"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "SLOAD"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "DUP2"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "MUL"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "NOT"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "AND"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "SWAP1"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "DUP4"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "AND"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "MUL"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "OR"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "SWAP1"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "SSTORE"
										},
										{
											"begin": 25699,
											"end": 25716,
											"name": "POP"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "POP"
										},
										{
											"begin": 25483,
											"end": 25723,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMPDEST"
										},
										{
											"begin": 642,
											"end": 657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 676,
											"end": 686,
											"name": "CALLER"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "SWAP1"
										},
										{
											"begin": 669,
											"end": 686,
											"name": "POP"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "JUMPDEST"
										},
										{
											"begin": 22766,
											"end": 22767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "AND"
										},
										{
											"begin": 22749,
											"end": 22754,
											"name": "DUP4"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "AND"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "EQ"
										},
										{
											"begin": 22749,
											"end": 22768,
											"name": "ISZERO"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "JUMPI"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "MLOAD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "MSTORE"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "ADD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP1"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP1"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "ADD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP3"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SUB"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP3"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "MSTORE"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "MSTORE"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "ADD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP1"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SWAP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "CODECOPY"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "ADD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SWAP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "POP"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "POP"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "MLOAD"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "DUP1"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SWAP2"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SUB"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "SWAP1"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "REVERT"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 22741,
											"end": 22809,
											"name": "JUMPDEST"
										},
										{
											"begin": 22846,
											"end": 22847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "AND"
										},
										{
											"begin": 22827,
											"end": 22834,
											"name": "DUP3"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "AND"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "EQ"
										},
										{
											"begin": 22827,
											"end": 22848,
											"name": "ISZERO"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "JUMPI"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "MLOAD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "MSTORE"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "ADD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP1"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP1"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "ADD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP3"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SUB"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP3"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "MSTORE"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "MSTORE"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "ADD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP1"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SWAP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "CODECOPY"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "ADD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SWAP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "POP"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "POP"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "MLOAD"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "DUP1"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SWAP2"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SUB"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "SWAP1"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "REVERT"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 22819,
											"end": 22887,
											"name": "JUMPDEST"
										},
										{
											"begin": 22928,
											"end": 22934,
											"name": "DUP1"
										},
										{
											"begin": 22898,
											"end": 22909,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22910,
											"end": 22915,
											"name": "DUP6"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "AND"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "AND"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "DUP2"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "MSTORE"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "ADD"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "SWAP1"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "DUP2"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "MSTORE"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "ADD"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22898,
											"end": 22916,
											"name": "KECCAK256"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22917,
											"end": 22924,
											"name": "DUP5"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "AND"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "AND"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "DUP2"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "MSTORE"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "ADD"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "SWAP1"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "DUP2"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "MSTORE"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "ADD"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22898,
											"end": 22925,
											"name": "KECCAK256"
										},
										{
											"begin": 22898,
											"end": 22934,
											"name": "DUP2"
										},
										{
											"begin": 22898,
											"end": 22934,
											"name": "SWAP1"
										},
										{
											"begin": 22898,
											"end": 22934,
											"name": "SSTORE"
										},
										{
											"begin": 22898,
											"end": 22934,
											"name": "POP"
										},
										{
											"begin": 22965,
											"end": 22972,
											"name": "DUP2"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "AND"
										},
										{
											"begin": 22958,
											"end": 22963,
											"name": "DUP4"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "AND"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 22974,
											"end": 22980,
											"name": "DUP4"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "MLOAD"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "DUP1"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "DUP3"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "DUP2"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "MSTORE"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "ADD"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "SWAP2"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "POP"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "POP"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "MLOAD"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "DUP1"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "SWAP2"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "SUB"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "SWAP1"
										},
										{
											"begin": 22949,
											"end": 22981,
											"name": "LOG3"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "POP"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "POP"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "POP"
										},
										{
											"begin": 22648,
											"end": 22988,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "JUMPDEST"
										},
										{
											"begin": 20449,
											"end": 20450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "AND"
										},
										{
											"begin": 20431,
											"end": 20437,
											"name": "DUP4"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "AND"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "EQ"
										},
										{
											"begin": 20431,
											"end": 20451,
											"name": "ISZERO"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "JUMPI"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "MLOAD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "MSTORE"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "ADD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP1"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP1"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "ADD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP3"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SUB"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP3"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "MSTORE"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "MSTORE"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "ADD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP1"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SWAP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "CODECOPY"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "ADD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SWAP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "POP"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "POP"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "MLOAD"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "DUP1"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SWAP2"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SUB"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "SWAP1"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "REVERT"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 20423,
											"end": 20493,
											"name": "JUMPDEST"
										},
										{
											"begin": 20532,
											"end": 20533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "AND"
										},
										{
											"begin": 20511,
											"end": 20520,
											"name": "DUP3"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "AND"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "EQ"
										},
										{
											"begin": 20511,
											"end": 20534,
											"name": "ISZERO"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "JUMPI"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "MLOAD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "MSTORE"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "ADD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP1"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP1"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "ADD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP3"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SUB"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP3"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "MSTORE"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "MSTORE"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "ADD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP1"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SWAP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "CODECOPY"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "ADD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SWAP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "POP"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "POP"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "MLOAD"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "DUP1"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SWAP2"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SUB"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "SWAP1"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "REVERT"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 20503,
											"end": 20574,
											"name": "JUMPDEST"
										},
										{
											"begin": 20585,
											"end": 20632,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 20606,
											"end": 20612,
											"name": "DUP4"
										},
										{
											"begin": 20614,
											"end": 20623,
											"name": "DUP4"
										},
										{
											"begin": 20625,
											"end": 20631,
											"name": "DUP4"
										},
										{
											"begin": 20585,
											"end": 20605,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 20585,
											"end": 20632,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20585,
											"end": 20632,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 20585,
											"end": 20632,
											"name": "JUMPDEST"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 20685,
											"end": 20691,
											"name": "DUP2"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "MLOAD"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "DUP1"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "ADD"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "MSTORE"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "DUP1"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "DUP2"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "MSTORE"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "ADD"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "SWAP2"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "CODECOPY"
										},
										{
											"begin": 20663,
											"end": 20672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "DUP1"
										},
										{
											"begin": 20673,
											"end": 20679,
											"name": "DUP8"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "AND"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "AND"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "DUP2"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "MSTORE"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "ADD"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "SWAP1"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "DUP2"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "MSTORE"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "ADD"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "KECCAK256"
										},
										{
											"begin": 20663,
											"end": 20680,
											"name": "SLOAD"
										},
										{
											"begin": 20663,
											"end": 20684,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 20663,
											"end": 20684,
											"name": "SWAP1"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "SWAP3"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "SWAP2"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "SWAP1"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "AND"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 20663,
											"end": 20734,
											"name": "JUMPDEST"
										},
										{
											"begin": 20643,
											"end": 20652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "DUP1"
										},
										{
											"begin": 20653,
											"end": 20659,
											"name": "DUP6"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "AND"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "AND"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "DUP2"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "MSTORE"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "ADD"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "SWAP1"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "DUP2"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "MSTORE"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "ADD"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20643,
											"end": 20660,
											"name": "KECCAK256"
										},
										{
											"begin": 20643,
											"end": 20734,
											"name": "DUP2"
										},
										{
											"begin": 20643,
											"end": 20734,
											"name": "SWAP1"
										},
										{
											"begin": 20643,
											"end": 20734,
											"name": "SSTORE"
										},
										{
											"begin": 20643,
											"end": 20734,
											"name": "POP"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 20792,
											"end": 20798,
											"name": "DUP2"
										},
										{
											"begin": 20767,
											"end": 20776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "DUP1"
										},
										{
											"begin": 20777,
											"end": 20786,
											"name": "DUP6"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "AND"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "AND"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "DUP2"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "MSTORE"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "ADD"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "SWAP1"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "DUP2"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "MSTORE"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "ADD"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "KECCAK256"
										},
										{
											"begin": 20767,
											"end": 20787,
											"name": "SLOAD"
										},
										{
											"begin": 20767,
											"end": 20791,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 20767,
											"end": 20791,
											"name": "SWAP1"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "SWAP2"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "SWAP1"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "AND"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 20767,
											"end": 20799,
											"name": "JUMPDEST"
										},
										{
											"begin": 20744,
											"end": 20753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "DUP1"
										},
										{
											"begin": 20754,
											"end": 20763,
											"name": "DUP5"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "AND"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "AND"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "DUP2"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "MSTORE"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "ADD"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "SWAP1"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "DUP2"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "MSTORE"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "ADD"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20744,
											"end": 20764,
											"name": "KECCAK256"
										},
										{
											"begin": 20744,
											"end": 20799,
											"name": "DUP2"
										},
										{
											"begin": 20744,
											"end": 20799,
											"name": "SWAP1"
										},
										{
											"begin": 20744,
											"end": 20799,
											"name": "SSTORE"
										},
										{
											"begin": 20744,
											"end": 20799,
											"name": "POP"
										},
										{
											"begin": 20831,
											"end": 20840,
											"name": "DUP2"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "AND"
										},
										{
											"begin": 20823,
											"end": 20829,
											"name": "DUP4"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "AND"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20842,
											"end": 20848,
											"name": "DUP4"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "MLOAD"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "DUP1"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "DUP3"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "DUP2"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "MSTORE"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "ADD"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "SWAP2"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "POP"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "POP"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "MLOAD"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "DUP1"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "SWAP2"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "SUB"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "SWAP1"
										},
										{
											"begin": 20814,
											"end": 20849,
											"name": "LOG3"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "POP"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "POP"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "POP"
										},
										{
											"begin": 20326,
											"end": 20856,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "JUMPDEST"
										},
										{
											"begin": 5410,
											"end": 5417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5443,
											"name": "DUP4"
										},
										{
											"begin": 5437,
											"end": 5438,
											"name": "DUP4"
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "GT"
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "ISZERO"
										},
										{
											"begin": 5445,
											"end": 5457,
											"name": "DUP3"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "JUMPI"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MLOAD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MSTORE"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP3"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SUB"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP3"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MSTORE"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP4"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MLOAD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MSTORE"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MLOAD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP4"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "AND"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ISZERO"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "JUMPI"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP3"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SUB"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MLOAD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP4"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SUB"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "EXP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SUB"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "NOT"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "AND"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MSTORE"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "ADD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "JUMPDEST"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP3"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "MLOAD"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "DUP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP2"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SUB"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "SWAP1"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "REVERT"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "JUMPDEST"
										},
										{
											"begin": 5429,
											"end": 5458,
											"name": "POP"
										},
										{
											"begin": 5468,
											"end": 5477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5485,
											"name": "DUP4"
										},
										{
											"begin": 5480,
											"end": 5481,
											"name": "DUP6"
										},
										{
											"begin": 5480,
											"end": 5485,
											"name": "SUB"
										},
										{
											"begin": 5468,
											"end": 5485,
											"name": "SWAP1"
										},
										{
											"begin": 5468,
											"end": 5485,
											"name": "POP"
										},
										{
											"begin": 5503,
											"end": 5504,
											"name": "DUP1"
										},
										{
											"begin": 5496,
											"end": 5504,
											"name": "SWAP2"
										},
										{
											"begin": 5496,
											"end": 5504,
											"name": "POP"
										},
										{
											"begin": 5496,
											"end": 5504,
											"name": "POP"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "SWAP4"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "SWAP3"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "POP"
										},
										{
											"begin": 5324,
											"end": 5511,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "JUMPDEST"
										},
										{
											"begin": 4510,
											"end": 4517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4538,
											"name": "DUP1"
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP3"
										},
										{
											"begin": 4541,
											"end": 4542,
											"name": "DUP5"
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "ADD"
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "POP"
										},
										{
											"begin": 4569,
											"end": 4570,
											"name": "DUP4"
										},
										{
											"begin": 4564,
											"end": 4565,
											"name": "DUP2"
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "LT"
										},
										{
											"begin": 4564,
											"end": 4570,
											"name": "ISZERO"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "JUMPI"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MLOAD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP1"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP1"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP3"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "SUB"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP3"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP1"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MSTORE"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "POP"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "ADD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "SWAP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "POP"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "POP"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "MLOAD"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "DUP1"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "SWAP2"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "SUB"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "SWAP1"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "REVERT"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 4556,
											"end": 4602,
											"name": "JUMPDEST"
										},
										{
											"begin": 4620,
											"end": 4621,
											"name": "DUP1"
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "SWAP2"
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "POP"
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "POP"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "SWAP3"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "SWAP2"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "POP"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "POP"
										},
										{
											"begin": 4452,
											"end": 4628,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26163,
											"end": 26275,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 26163,
											"end": 26275,
											"name": "JUMPDEST"
										},
										{
											"begin": 26228,
											"end": 26235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26254,
											"end": 26261,
											"name": "DUP2"
										},
										{
											"begin": 26254,
											"end": 26268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26254,
											"end": 26268,
											"name": "ADD"
										},
										{
											"begin": 26254,
											"end": 26268,
											"name": "SLOAD"
										},
										{
											"begin": 26247,
											"end": 26268,
											"name": "SWAP1"
										},
										{
											"begin": 26247,
											"end": 26268,
											"name": "POP"
										},
										{
											"begin": 26163,
											"end": 26275,
											"name": "SWAP2"
										},
										{
											"begin": 26163,
											"end": 26275,
											"name": "SWAP1"
										},
										{
											"begin": 26163,
											"end": 26275,
											"name": "POP"
										},
										{
											"begin": 26163,
											"end": 26275,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21126,
											"end": 21496,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 21126,
											"end": 21496,
											"name": "JUMPDEST"
										},
										{
											"begin": 21228,
											"end": 21229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21209,
											"end": 21230,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21209,
											"end": 21230,
											"name": "AND"
										},
										{
											"begin": 21209,
											"end": 21216,
											"name": "DUP3"
										},
										{
											"begin": 21209,
											"end": 21230,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21209,
											"end": 21230,
											"name": "AND"
										},
										{
											"begin": 21209,
											"end": 21230,
											"name": "EQ"
										},
										{
											"begin": 21209,
											"end": 21230,
											"name": "ISZERO"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "JUMPI"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "MLOAD"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "DUP2"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "MSTORE"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "ADD"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "DUP1"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "DUP1"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "ADD"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "DUP3"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "DUP2"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "SUB"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "DUP3"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "MSTORE"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "DUP2"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "MSTORE"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "ADD"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "DUP1"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "PUSH",
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "DUP2"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "MSTORE"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "POP"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "ADD"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "SWAP2"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "POP"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "POP"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "MLOAD"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "DUP1"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "SWAP2"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "SUB"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "SWAP1"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "REVERT"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 21201,
											"end": 21266,
											"name": "JUMPDEST"
										},
										{
											"begin": 21277,
											"end": 21326,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 21306,
											"end": 21307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21310,
											"end": 21317,
											"name": "DUP4"
										},
										{
											"begin": 21319,
											"end": 21325,
											"name": "DUP4"
										},
										{
											"begin": 21277,
											"end": 21297,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 21277,
											"end": 21326,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21277,
											"end": 21326,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 21277,
											"end": 21326,
											"name": "JUMPDEST"
										},
										{
											"begin": 21352,
											"end": 21376,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 21369,
											"end": 21375,
											"name": "DUP2"
										},
										{
											"begin": 21352,
											"end": 21364,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 21352,
											"end": 21364,
											"name": "SLOAD"
										},
										{
											"begin": 21352,
											"end": 21368,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 21352,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21352,
											"end": 21376,
											"name": "SWAP2"
										},
										{
											"begin": 21352,
											"end": 21376,
											"name": "SWAP1"
										},
										{
											"begin": 21352,
											"end": 21376,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21352,
											"end": 21376,
											"name": "AND"
										},
										{
											"begin": 21352,
											"end": 21376,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21352,
											"end": 21376,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 21352,
											"end": 21376,
											"name": "JUMPDEST"
										},
										{
											"begin": 21337,
											"end": 21349,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 21337,
											"end": 21376,
											"name": "DUP2"
										},
										{
											"begin": 21337,
											"end": 21376,
											"name": "SWAP1"
										},
										{
											"begin": 21337,
											"end": 21376,
											"name": "SSTORE"
										},
										{
											"begin": 21337,
											"end": 21376,
											"name": "POP"
										},
										{
											"begin": 21407,
											"end": 21437,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 21430,
											"end": 21436,
											"name": "DUP2"
										},
										{
											"begin": 21407,
											"end": 21416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "DUP1"
										},
										{
											"begin": 21417,
											"end": 21424,
											"name": "DUP6"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "AND"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "AND"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "DUP2"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "MSTORE"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "ADD"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "SWAP1"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "DUP2"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "MSTORE"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "ADD"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "KECCAK256"
										},
										{
											"begin": 21407,
											"end": 21425,
											"name": "SLOAD"
										},
										{
											"begin": 21407,
											"end": 21429,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 21407,
											"end": 21429,
											"name": "SWAP1"
										},
										{
											"begin": 21407,
											"end": 21437,
											"name": "SWAP2"
										},
										{
											"begin": 21407,
											"end": 21437,
											"name": "SWAP1"
										},
										{
											"begin": 21407,
											"end": 21437,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21407,
											"end": 21437,
											"name": "AND"
										},
										{
											"begin": 21407,
											"end": 21437,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21407,
											"end": 21437,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 21407,
											"end": 21437,
											"name": "JUMPDEST"
										},
										{
											"begin": 21386,
											"end": 21395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "DUP1"
										},
										{
											"begin": 21396,
											"end": 21403,
											"name": "DUP5"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "AND"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "AND"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "DUP2"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "MSTORE"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "ADD"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "SWAP1"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "DUP2"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "MSTORE"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "ADD"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "KECCAK256"
										},
										{
											"begin": 21386,
											"end": 21437,
											"name": "DUP2"
										},
										{
											"begin": 21386,
											"end": 21437,
											"name": "SWAP1"
										},
										{
											"begin": 21386,
											"end": 21437,
											"name": "SSTORE"
										},
										{
											"begin": 21386,
											"end": 21437,
											"name": "POP"
										},
										{
											"begin": 21473,
											"end": 21480,
											"name": "DUP2"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "AND"
										},
										{
											"begin": 21469,
											"end": 21470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "AND"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 21482,
											"end": 21488,
											"name": "DUP4"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "MLOAD"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "DUP1"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "DUP3"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "DUP2"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "MSTORE"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "ADD"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "SWAP2"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "POP"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "POP"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "MLOAD"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "DUP1"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "SWAP2"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "SUB"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "SWAP1"
										},
										{
											"begin": 21452,
											"end": 21489,
											"name": "LOG3"
										},
										{
											"begin": 21126,
											"end": 21496,
											"name": "POP"
										},
										{
											"begin": 21126,
											"end": 21496,
											"name": "POP"
										},
										{
											"begin": 21126,
											"end": 21496,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 26281,
											"end": 26459,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 26281,
											"end": 26459,
											"name": "JUMPDEST"
										},
										{
											"begin": 26451,
											"end": 26452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 26433,
											"end": 26440,
											"name": "DUP2"
										},
										{
											"begin": 26433,
											"end": 26447,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26433,
											"end": 26447,
											"name": "ADD"
										},
										{
											"begin": 26433,
											"end": 26447,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "DUP3"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "DUP3"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "SLOAD"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "ADD"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "SWAP3"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "POP"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "POP"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "DUP2"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "SWAP1"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "SSTORE"
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "POP"
										},
										{
											"begin": 26281,
											"end": 26459,
											"name": "POP"
										},
										{
											"begin": 26281,
											"end": 26459,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "JUMPDEST"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "POP"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "POP"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "POP"
										},
										{
											"begin": 23986,
											"end": 24078,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mine(address,uint256)": "ab27be20",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"rescueTokens(address,address,uint256)": "cea9d26f",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC2612Permit-nonces}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC2612Permit-permit}.     \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"newERC20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20.sol\":{\"keccak256\":\"0xe5bcbefc02f80b7477f0810b17666b89f45c7ba75ad7fb623cdf715668d2ace5\",\"urls\":[\"bzz-raw://6edeffd1f0d9c269b25d4b7f0f4d2493596666489814c487d7bc1b5bdbff2413\",\"dweb:/ipfs/QmQGunwjqiMjppFK4Nq7jZAK27HUUa1Rwh9uXC6pMvTLBU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 474,
								"contract": "ERC20.sol:newERC20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 480,
								"contract": "ERC20.sol:newERC20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 482,
								"contract": "ERC20.sol:newERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 484,
								"contract": "ERC20.sol:newERC20Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 486,
								"contract": "ERC20.sol:newERC20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 488,
								"contract": "ERC20.sol:newERC20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1124,
								"contract": "ERC20.sol:newERC20Token",
								"label": "_nonces",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Counter)1048_storage)"
							},
							{
								"astId": 1129,
								"contract": "ERC20.sol:newERC20Token",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							},
							{
								"astId": 946,
								"contract": "ERC20.sol:newERC20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Counter)1048_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Counters.Counter)",
								"numberOfBytes": "32",
								"value": "t_struct(Counter)1048_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1048_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1047,
										"contract": "ERC20.sol:newERC20Token",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Address": [
							460
						],
						"Context": [
							22
						],
						"Counters": [
							1088
						],
						"ERC20": [
							942
						],
						"ERC20Permit": [
							1276
						],
						"IERC20": [
							89
						],
						"IERC2612Permit": [
							1113
						],
						"Ownable": [
							1042
						],
						"SafeMath": [
							274
						],
						"newERC20Token": [
							1347
						]
					},
					"id": 1348,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "659:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "676:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "676:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "669:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "642:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "642:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "641:17:0"
									},
									"scope": 22,
									"src": "589:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "764:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "774:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "774:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "914:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "914:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "907:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "716:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "750:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "750:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "749:14:0"
									},
									"scope": 22,
									"src": "699:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1348,
							"src": "557:374:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP.",
							"fullyImplemented": false,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"functionSelector": "18160ddd",
									"id": 27,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1150:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 27,
												"src": "1176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1175:9:0"
									},
									"scope": 89,
									"src": "1130:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 34,
												"src": "1287:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 34,
												"src": "1327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1326:9:0"
									},
									"scope": 89,
									"src": "1268:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"functionSelector": "a9059cbb",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "1574:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "1593:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1573:35:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "1627:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1627:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1626:6:0"
									},
									"scope": 89,
									"src": "1556:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
									"functionSelector": "dd62ed3e",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 52,
												"src": "1927:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 52,
												"src": "1942:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1926:32:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 52,
												"src": "1982:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1981:9:0"
									},
									"scope": 89,
									"src": "1908:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
									"functionSelector": "095ea7b3",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "2661:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "2678:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2660:33:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 89,
									"src": "2644:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"functionSelector": "23b872dd",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 72,
												"src": "3047:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 72,
												"src": "3063:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 72,
												"src": "3082:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3046:51:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 72,
												"src": "3116:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3116:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3115:6:0"
									},
									"scope": 89,
									"src": "3025:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 80,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "3306:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "3328:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "3348:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3305:57:0"
									},
									"src": "3291:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 88,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 88,
												"src": "3537:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 88,
												"src": "3560:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 88,
												"src": "3585:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3536:63:0"
									},
									"src": "3522:78:0"
								}
							],
							"scope": 1348,
							"src": "1036:2566:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "4519:109:0",
										"statements": [
											{
												"assignments": [
													99
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 113,
														"src": "4529:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 98,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4529:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 103,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 100,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "4541:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "4545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4529:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 105,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "4564:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 106,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "4569:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4564:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4556:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "4556:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 111,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 99,
													"src": "4620:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 112,
												"nodeType": "Return",
												"src": "4613:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n     * - Addition cannot overflow.",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 114,
												"src": "4465:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 114,
												"src": "4476:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4464:22:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 114,
												"src": "4510:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4509:9:0"
									},
									"scope": 274,
									"src": "4452:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "4966:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 124,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4987:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 125,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4990:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4993:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 123,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															130,
															157
														],
														"referencedDeclaration": 157,
														"src": "4983:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4983:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 122,
												"id": 128,
												"nodeType": "Return",
												"src": "4976:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow.",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "4912:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "4923:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4911:22:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "4957:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4956:9:0"
									},
									"scope": 274,
									"src": "4899:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5419:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 142,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "5437:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "5442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5437:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 145,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5445:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5429:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "5429:29:0"
											},
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 156,
														"src": "5468:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "5480:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 151,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "5484:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5480:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5468:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 154,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 149,
													"src": "5503:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 140,
												"id": 155,
												"nodeType": "Return",
												"src": "5496:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow.",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "5337:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "5348:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "5359:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5359:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5336:50:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "5410:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5409:9:0"
									},
									"scope": 274,
									"src": "5324:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "5825:392:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 166,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "6057:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6062:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6057:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 172,
												"nodeType": "IfStatement",
												"src": "6053:45:0",
												"trueBody": {
													"id": 171,
													"nodeType": "Block",
													"src": "6065:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6086:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 165,
															"id": 170,
															"nodeType": "Return",
															"src": "6079:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 190,
														"src": "6108:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6108:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 178,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "6120:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 176,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "6124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6120:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6108:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 180,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "6143:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 181,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6147:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6143:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "6152:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6143:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6155:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6135:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "6135:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 188,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "6209:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 165,
												"id": 189,
												"nodeType": "Return",
												"src": "6202:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n     * - Multiplication cannot overflow.",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "5771:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "5782:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5770:22:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "5816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5815:9:0"
									},
									"scope": 274,
									"src": "5758:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "6746:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 201,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "6767:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 202,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6770:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6773:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 200,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															207,
															234
														],
														"referencedDeclaration": 234,
														"src": "6763:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6763:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 205,
												"nodeType": "Return",
												"src": "6756:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 207,
												"src": "6692:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 207,
												"src": "6703:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6691:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 207,
												"src": "6737:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6736:9:0"
									},
									"scope": 274,
									"src": "6679:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "7386:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 219,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "7404:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7408:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7404:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 222,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "7411:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7396:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "7396:28:0"
											},
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 233,
														"src": "7434:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7434:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 227,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "7446:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "7450:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7434:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 231,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 226,
													"src": "7555:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 217,
												"id": 232,
												"nodeType": "Return",
												"src": "7548:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 234,
												"src": "7304:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 234,
												"src": "7315:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 234,
												"src": "7326:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 212,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7303:50:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 234,
												"src": "7377:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7376:9:0"
									},
									"scope": 274,
									"src": "7291:272:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "8081:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 244,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "8102:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 245,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "8105:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8108:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 243,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															250,
															273
														],
														"referencedDeclaration": 273,
														"src": "8098:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8098:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 242,
												"id": 248,
												"nodeType": "Return",
												"src": "8091:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "8027:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "8038:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8026:22:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "8072:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8071:9:0"
									},
									"scope": 274,
									"src": "8014:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "8708:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 262,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "8726:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8731:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8726:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 265,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "8734:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8718:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "8718:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 268,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "8764:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 269,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "8768:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8764:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 260,
												"id": 271,
												"nodeType": "Return",
												"src": "8757:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero.",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "8626:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "8637:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "8648:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8648:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8625:50:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "8699:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8698:9:0"
									},
									"scope": 274,
									"src": "8613:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1348,
							"src": "4200:4578:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type",
							"fullyImplemented": true,
							"id": 460,
							"linearizedBaseContracts": [
								460
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "9538:347:0",
										"statements": [
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 289,
														"src": "9735:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9735:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9822:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9824:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "9844:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "9832:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9824:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 276,
														"isOffset": false,
														"isSlot": false,
														"src": "9844:7:0",
														"valueSize": 1
													},
													{
														"declaration": 282,
														"isOffset": false,
														"isSlot": false,
														"src": "9824:4:0",
														"valueSize": 1
													}
												],
												"id": 284,
												"nodeType": "InlineAssembly",
												"src": "9813:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 285,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "9870:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9877:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9870:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 280,
												"id": 288,
												"nodeType": "Return",
												"src": "9863:15:0"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following\ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====",
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "9492:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9491:17:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 290,
												"src": "9532:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9532:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9531:6:0"
									},
									"scope": 460,
									"src": "9472:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "10873:320:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 300,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "10899:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$460",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$460",
																				"typeString": "library Address"
																			}
																		],
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10891:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 298,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10891:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10891:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10891:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 303,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "10916:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10891:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10924:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10883:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10883:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "10883:73:0"
											},
											{
												"assignments": [
													309,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 322,
														"src": "11045:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 308,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11045:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 316,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11095:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 310,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "11063:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11063:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 312,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "11086:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11063:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11063:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11044:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 318,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "11116:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11125:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11108:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "11108:78:0"
											}
										]
									},
									"documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].",
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "10821:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10821:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "10848:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10820:43:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10873:0:0"
									},
									"scope": 460,
									"src": "10802:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "12023:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 333,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "12051:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 334,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "12059:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12065:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 332,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															339,
															358
														],
														"referencedDeclaration": 358,
														"src": "12038:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12038:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 331,
												"id": 337,
												"nodeType": "Return",
												"src": "12031:67:0"
											}
										]
									},
									"documentation": "@dev Performs a Solidity function call using a low level `call`. A\nplain`call` is an unsafe replacement for a function call: use this\nfunction instead.\n     * If `target` reverts with a revert reason, it is bubbled up by this\nfunction (like regular Solidity function calls).\n     * Returns the raw returned data. To convert to the expected return value,\nuse https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     * Requirements:\n     * - `target` must be a contract.\n- calling `target` with `data` must not revert.\n     * _Available since v3.1._",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 339,
												"src": "11956:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 339,
												"src": "11972:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11972:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11955:35:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 339,
												"src": "12009:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12009:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12008:14:0"
									},
									"scope": 460,
									"src": "11934:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "12444:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 351,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "12484:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 352,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "12492:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12498:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 354,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "12501:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 350,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "12461:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12461:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 349,
												"id": 356,
												"nodeType": "Return",
												"src": "12454:60:0"
											}
										]
									},
									"documentation": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n`errorMessage` as a fallback revert reason when `target` reverts.\n     * _Available since v3.1._",
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "12349:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "12365:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12365:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "12384:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12384:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12348:63:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 358,
												"src": "12430:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12430:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12429:14:0"
									},
									"scope": 460,
									"src": "12327:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "12996:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 370,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "13035:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "13043:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 372,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "13049:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13056:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 369,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															377,
															409
														],
														"referencedDeclaration": 409,
														"src": "13013:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13013:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 368,
												"id": 375,
												"nodeType": "Return",
												"src": "13006:94:0"
											}
										]
									},
									"documentation": "@dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\nbut also transferring `value` wei to `target`.\n     * Requirements:\n     * - the calling contract must have an ETH balance of at least `value`.\n- the called Solidity function must be `payable`.\n     * _Available since v3.1._",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 377,
												"src": "12914:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 377,
												"src": "12930:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12930:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 377,
												"src": "12949:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12913:50:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 377,
												"src": "12982:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12982:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12981:14:0"
									},
									"scope": 460,
									"src": "12883:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "13496:172:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 393,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "13522:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$460",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$460",
																				"typeString": "library Address"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13514:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "13514:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13514:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13514:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 396,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "13539:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13514:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13546:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13506:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "13506:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 402,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "13627:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 403,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "13635:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 404,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "13641:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 405,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "13648:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 401,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "13604:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13604:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 389,
												"id": 407,
												"nodeType": "Return",
												"src": "13597:64:0"
											}
										]
									},
									"documentation": "@dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\nwith `errorMessage` as a fallback revert reason when `target` reverts.\n     * _Available since v3.1._",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 409,
												"src": "13386:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 409,
												"src": "13402:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13402:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 409,
												"src": "13421:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 409,
												"src": "13436:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 384,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13436:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13385:78:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 409,
												"src": "13482:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13482:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13481:14:0"
									},
									"scope": 460,
									"src": "13355:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "13818:814:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "13847:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "13836:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13836:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13856:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13828:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "13828:60:0"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 458,
														"src": "13959:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13959:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 458,
														"src": "13973:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 437,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "14031:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 433,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "14000:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14000:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 435,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "14020:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14000:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14000:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13958:78:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 440,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 430,
													"src": "14050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "14107:519:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 444,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "14191:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14191:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14211:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14191:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 454,
																"nodeType": "Block",
																"src": "14563:53:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 451,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 417,
																					"src": "14588:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 450,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "14581:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14581:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 453,
																		"nodeType": "ExpressionStatement",
																		"src": "14581:20:0"
																	}
																]
															},
															"id": 455,
															"nodeType": "IfStatement",
															"src": "14187:429:0",
															"trueBody": {
																"id": 449,
																"nodeType": "Block",
																"src": "14214:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "14398:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "14420:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "14449:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "14443:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14443:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "14424:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14492:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "14496:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "14488:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14488:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "14509:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "14481:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14481:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14481:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 432,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "14449:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 432,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "14496:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 448,
																		"nodeType": "InlineAssembly",
																		"src": "14389:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "14046:580:0",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "14059:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 441,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "14080:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 421,
															"id": 442,
															"nodeType": "Return",
															"src": "14073:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "13706:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "13722:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13722:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "13741:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "13759:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13759:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13705:81:0"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "13804:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13804:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13803:14:0"
									},
									"scope": 460,
									"src": "13674:958:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1348,
							"src": "8880:5754:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 461,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "14654:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 462,
									"nodeType": "InheritanceSpecifier",
									"src": "14654:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 463,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 89,
										"src": "14663:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$89",
											"typeString": "contract IERC20"
										}
									},
									"id": 464,
									"nodeType": "InheritanceSpecifier",
									"src": "14663:6:0"
								}
							],
							"contractDependencies": [
								22,
								89
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 942,
							"linearizedBaseContracts": [
								942,
								89,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 467,
									"libraryName": {
										"contractScope": null,
										"id": 465,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 274,
										"src": "14682:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$274",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "14676:27:0",
									"typeName": {
										"id": 466,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14695:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 470,
									"libraryName": {
										"contractScope": null,
										"id": 468,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 460,
										"src": "14714:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$460",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "14708:26:0",
									"typeName": {
										"id": 469,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14726:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 474,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "14740:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 473,
										"keyType": {
											"id": 471,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14749:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14740:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 472,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "14760:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 480,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "14793:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 479,
										"keyType": {
											"id": 475,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "14802:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "14793:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 478,
											"keyType": {
												"id": 476,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "14822:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "14813:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 477,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "14833:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 482,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "14869:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 481,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14869:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 484,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "14904:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 483,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "14904:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 486,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "14930:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 485,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "14930:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 488,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 942,
									"src": "14958:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 487,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "14958:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "15366:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 495,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "15376:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 496,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "15384:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "15376:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "15376:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 499,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "15398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 500,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "15408:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "15398:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "15398:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 503,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "15424:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15436:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "15424:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "15424:14:0"
											}
										]
									},
									"documentation": "@dev Sets the values for {name} and {symbol}, initializes {decimals} with\na default value of 18.\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     * All three of these values are immutable: they can only be set once during\nconstruction.",
									"id": 508,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 508,
												"src": "15317:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15317:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 508,
												"src": "15337:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15316:42:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15366:0:0"
									},
									"scope": 942,
									"src": "15304:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "15562:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 513,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 484,
													"src": "15579:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 512,
												"id": 514,
												"nodeType": "Return",
												"src": "15572:12:0"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"functionSelector": "06fdde03",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15523:2:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "15547:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 510,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15546:15:0"
									},
									"scope": 942,
									"src": "15510:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "15758:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 521,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 486,
													"src": "15775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 520,
												"id": 522,
												"nodeType": "Return",
												"src": "15768:14:0"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"functionSelector": "95d89b41",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15719:2:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "15743:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15743:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15742:15:0"
									},
									"scope": 942,
									"src": "15704:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "16460:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 529,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "16477:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 528,
												"id": 530,
												"nodeType": "Return",
												"src": "16470:16:0"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\ncalled.\n     * NOTE: This information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n{IERC20-balanceOf} and {IERC20-transfer}.",
									"functionSelector": "313ce567",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16429:2:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "16453:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 526,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16453:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16452:7:0"
									},
									"scope": 942,
									"src": "16412:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										27
									],
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "16615:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 538,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 482,
													"src": "16632:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 537,
												"id": 539,
												"nodeType": "Return",
												"src": "16625:19:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-totalSupply}.",
									"functionSelector": "18160ddd",
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 534,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16588:8:0"
									},
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16573:2:0"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 541,
												"src": "16606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16605:9:0"
									},
									"scope": 942,
									"src": "16553:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "16784:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 549,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "16801:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 551,
													"indexExpression": {
														"argumentTypes": null,
														"id": 550,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "16811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16801:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 548,
												"id": 552,
												"nodeType": "Return",
												"src": "16794:25:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-balanceOf}.",
									"functionSelector": "70a08231",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 545,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16757:8:0"
									},
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 554,
												"src": "16728:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16727:17:0"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 554,
												"src": "16775:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16774:9:0"
									},
									"scope": 942,
									"src": "16709:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										43
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "17121:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "17141:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17141:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "17155:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "17166:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "17131:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17131:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "17131:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17190:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "17183:11:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"functionSelector": "a9059cbb",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 560,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17097:8:0"
									},
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "17047:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "17066:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17046:35:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "17115:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17114:6:0"
									},
									"scope": 942,
									"src": "17029:172:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										52
									],
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "17357:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 584,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "17374:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 586,
														"indexExpression": {
															"argumentTypes": null,
															"id": 585,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "17386:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17374:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 588,
													"indexExpression": {
														"argumentTypes": null,
														"id": 587,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "17393:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17374:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 583,
												"id": 589,
												"nodeType": "Return",
												"src": "17367:34:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-allowance}.",
									"functionSelector": "dd62ed3e",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17330:8:0"
									},
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "17278:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "17293:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17277:32:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "17348:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17347:9:0"
									},
									"scope": 942,
									"src": "17259:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										61
									],
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "17635:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 602,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "17654:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17654:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 604,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "17668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 605,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "17677:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "17645:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17645:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "17645:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17701:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 600,
												"id": 609,
												"nodeType": "Return",
												"src": "17694:11:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-approve}.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"functionSelector": "095ea7b3",
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 597,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17611:8:0"
									},
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 611,
												"src": "17563:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 611,
												"src": "17580:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17562:33:0"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 611,
												"src": "17629:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17629:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17628:6:0"
									},
									"scope": 942,
									"src": "17546:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										72
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "18284:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 624,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "18304:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 625,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "18312:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "18323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "18294:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18294:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "18294:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 630,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "18349:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 631,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "18357:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18357:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 640,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "18409:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18417:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 633,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "18371:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 635,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 634,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 613,
																			"src": "18383:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18371:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 638,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 636,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "18391:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18391:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18371:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 157,
																"src": "18371:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18371:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "18340:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18340:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "18340:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18478:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 622,
												"id": 646,
												"nodeType": "Return",
												"src": "18471:11:0"
											}
										]
									},
									"documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for ``sender``'s tokens of at least\n`amount`.",
									"functionSelector": "23b872dd",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 619,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18260:8:0"
									},
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "18194:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "18210:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "18229:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18193:51:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "18278:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18277:6:0"
									},
									"scope": 942,
									"src": "18172:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "18978:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 658,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "18997:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18997:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 660,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "19011:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 668,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "19059:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 661,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "19020:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 664,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 662,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "19032:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19032:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19020:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 666,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 665,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "19046:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19020:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 114,
																"src": "19020:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19020:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 657,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "18988:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18988:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "18988:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19088:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 656,
												"id": 673,
												"nodeType": "Return",
												"src": "19081:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"functionSelector": "39509351",
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 675,
												"src": "18911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 675,
												"src": "18928:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18910:37:0"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 675,
												"src": "18972:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18972:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18971:6:0"
									},
									"scope": 942,
									"src": "18884:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "19685:167:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 685,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "19704:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19704:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 687,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "19718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 695,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "19766:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19783:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 688,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "19727:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 691,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 689,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "19739:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19739:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19727:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 693,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 692,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "19753:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19727:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 157,
																"src": "19727:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19727:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "19695:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19695:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "19695:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19841:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 683,
												"id": 701,
												"nodeType": "Return",
												"src": "19834:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"functionSelector": "a457c2d7",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 703,
												"src": "19613:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 703,
												"src": "19630:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19612:42:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 703,
												"src": "19679:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19679:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19678:6:0"
									},
									"scope": 942,
									"src": "19586:266:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "20413:443:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 713,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "20431:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20449:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20441:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 714,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20441:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20441:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20431:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20453:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20423:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20423:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "20423:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 723,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "20511:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20532:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20524:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 724,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20524:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20524:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20511:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20536:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20503:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "20503:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 733,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "20606:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 734,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "20614:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 735,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "20625:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 732,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "20585:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20585:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "20585:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 738,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "20643:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 740,
														"indexExpression": {
															"argumentTypes": null,
															"id": 739,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "20653:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20643:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 745,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "20685:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20693:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 741,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "20663:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 743,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 742,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "20673:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20663:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 157,
															"src": "20663:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20663:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20643:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "20643:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 750,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "20744:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 752,
														"indexExpression": {
															"argumentTypes": null,
															"id": 751,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "20754:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20744:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 757,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "20792:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 753,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "20767:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 755,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 754,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "20777:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20767:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 114,
															"src": "20767:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20767:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20744:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "20744:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 762,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "20823:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 763,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "20831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 764,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "20842:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 761,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "20814:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20814:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "EmitStatement",
												"src": "20809:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "20345:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "20361:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "20380:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20344:51:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20413:0:0"
									},
									"scope": 942,
									"src": "20326:530:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "21191:305:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 776,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "21209:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21228:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21220:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 777,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21220:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21220:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21209:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21232:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 775,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21201:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "21201:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21306:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 786,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21298:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21298:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 790,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "21310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 791,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "21319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 785,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "21277:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21277:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "21277:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 794,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "21337:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 797,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "21369:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 795,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "21352:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 114,
															"src": "21352:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21352:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21337:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "21337:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 801,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "21386:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 803,
														"indexExpression": {
															"argumentTypes": null,
															"id": 802,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "21396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21386:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 808,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "21430:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 804,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "21407:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 806,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 805,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "21417:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21407:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 114,
															"src": "21407:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21407:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21386:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "21386:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21469:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21461:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21461:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21461:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 817,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "21473:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 818,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "21482:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "21452:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21452:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "EmitStatement",
												"src": "21447:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 822,
												"src": "21141:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 822,
												"src": "21158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21140:33:0"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21191:0:0"
									},
									"scope": 942,
									"src": "21126:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "21880:345:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 830,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "21898:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21917:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21909:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 831,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21909:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21909:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21898:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21921:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21890:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "21890:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 840,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "21989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22006:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21998:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 841,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21998:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21998:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 845,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "22010:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 839,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "21968:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21968:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "21968:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 848,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "22028:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 850,
														"indexExpression": {
															"argumentTypes": null,
															"id": 849,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "22038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22028:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 855,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "22072:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22080:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 851,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "22049:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 853,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 852,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "22059:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22049:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 157,
															"src": "22049:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22049:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22028:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "22028:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 860,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "22127:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 863,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "22159:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 861,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "22142:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 130,
															"src": "22142:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22142:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22127:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "22127:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 868,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "22190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22207:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22199:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 869,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22199:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 873,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "22211:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 867,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "22181:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22181:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "EmitStatement",
												"src": "22176:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a {Transfer} event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 877,
												"src": "21830:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 877,
												"src": "21847:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21829:33:0"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21880:0:0"
									},
									"scope": 942,
									"src": "21815:410:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "22731:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 887,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "22749:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22766:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22758:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 888,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22758:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22758:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "22749:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22770:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22741:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "22741:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 897,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "22827:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22846:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22838:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 898,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22838:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22838:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "22827:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22850:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 896,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22819:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22819:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "22819:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 906,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "22898:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 909,
															"indexExpression": {
																"argumentTypes": null,
																"id": 907,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "22910:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22898:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 910,
														"indexExpression": {
															"argumentTypes": null,
															"id": 908,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "22917:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22898:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 911,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "22928:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22898:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "22898:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 915,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "22958:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 916,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "22965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 917,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "22974:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 914,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "22949:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22949:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "EmitStatement",
												"src": "22944:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     * This internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 921,
												"src": "22666:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 921,
												"src": "22681:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 921,
												"src": "22698:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22665:48:0"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22731:0:0"
									},
									"scope": 942,
									"src": "22648:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "23361:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 926,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "23371:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 927,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "23383:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "23371:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "23371:21:0"
											}
										]
									},
									"documentation": "@dev Sets {decimals} to a value other than the default one of 18.\n     * WARNING: This function should only be called from the constructor. Most\napplications that interact with token contracts will not expect\n{decimals} to ever change, and may work incorrectly if it does.",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 931,
												"src": "23335:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 922,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "23335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23334:17:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23361:0:0"
									},
									"scope": 942,
									"src": "23311:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "24075:3:0",
										"statements": []
									},
									"documentation": "@dev Hook that is called before any transfer of tokens. This includes\nminting and burning.\n     * Calling conditions:\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\nwill be to transferred to `to`.\n- when `from` is zero, `amount` tokens will be minted for `to`.\n- when `to` is zero, `amount` of ``from``'s tokens will be burned.\n- `from` and `to` are never both zero.\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "24016:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "24030:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "24042:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24015:42:0"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24075:0:0"
									},
									"scope": 942,
									"src": "23986:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1348,
							"src": "14636:9444:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 943,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "24102:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 944,
									"nodeType": "InheritanceSpecifier",
									"src": "24102:7:0"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1042,
							"linearizedBaseContracts": [
								1042,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 946,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1042,
									"src": "24116:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 945,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24116:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 952,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 952,
												"src": "24172:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 952,
												"src": "24203:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24171:57:0"
									},
									"src": "24145:84:0"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "24355:135:0",
										"statements": [
											{
												"assignments": [
													956
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 972,
														"src": "24365:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 955,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24365:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 957,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "24385:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24385:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24365:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 960,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "24407:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 961,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "24416:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24407:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "24407:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24469:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24461:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 965,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24461:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24461:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 969,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "24473:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 964,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "24440:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24440:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "EmitStatement",
												"src": "24435:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 973,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24343:2:0"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24355:0:0"
									},
									"scope": 1042,
									"src": "24331:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "24613:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 978,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 946,
													"src": "24630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 977,
												"id": 979,
												"nodeType": "Return",
												"src": "24623:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"functionSelector": "8da5cb5b",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24580:2:0"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 981,
												"src": "24604:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24603:9:0"
									},
									"scope": 1042,
									"src": "24566:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "24752:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 984,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "24770:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 985,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "24780:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24780:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "24770:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24794:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "24762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24762:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "24762:67:0"
											},
											{
												"id": 991,
												"nodeType": "PlaceholderStatement",
												"src": "24839:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 993,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24749:2:0"
									},
									"src": "24731:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "25243:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 999,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "25279:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25295:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25287:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1000,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25287:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25287:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 998,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "25258:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25258:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "EmitStatement",
												"src": "25253:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1006,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "25308:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25325:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1007,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25317:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25317:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "25308:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "25308:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"functionSelector": "715018a6",
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 996,
											"modifierName": {
												"argumentTypes": null,
												"id": 995,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 993,
												"src": "25233:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "25233:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25215:2:0"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25243:0:0"
									},
									"scope": 1042,
									"src": "25189:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "25553:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1022,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "25571:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25591:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25583:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1023,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "25583:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25583:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25571:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25595:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "25563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25563:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "25563:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1032,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "25672:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1033,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "25680:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1031,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "25651:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25651:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "EmitStatement",
												"src": "25646:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1036,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "25699:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1037,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "25708:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25699:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "25699:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"functionSelector": "f2fde38b",
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1019,
											"modifierName": {
												"argumentTypes": null,
												"id": 1018,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 993,
												"src": "25543:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "25543:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1041,
												"src": "25510:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25509:18:0"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25553:0:0"
									},
									"scope": 1042,
									"src": "25483:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1348,
							"src": "24082:1643:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1088,
							"linearizedBaseContracts": [
								1088
							],
							"name": "Counters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1045,
									"libraryName": {
										"contractScope": null,
										"id": 1043,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 274,
										"src": "25756:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$274",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "25750:27:0",
									"typeName": {
										"id": 1044,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25769:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Counters.Counter",
									"id": 1048,
									"members": [
										{
											"constant": false,
											"id": 1047,
											"name": "_value",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1048,
											"src": "26122:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1046,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "26122:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nodeType": "StructDefinition",
									"scope": 1088,
									"src": "25783:374:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "26237:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1055,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "26254:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1047,
													"src": "26254:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1057,
												"nodeType": "Return",
												"src": "26247:21:0"
											}
										]
									},
									"documentation": null,
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1059,
												"src": "26180:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"contractScope": null,
													"id": 1049,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1048,
													"src": "26180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26179:25:0"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1059,
												"src": "26228:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26227:9:0"
									},
									"scope": 1088,
									"src": "26163:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "26334:125:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1064,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "26433:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1047,
														"src": "26433:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26451:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "26433:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "26433:19:0"
											}
										]
									},
									"documentation": null,
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1071,
												"src": "26300:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"contractScope": null,
													"id": 1060,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1048,
													"src": "26300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26299:25:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26334:0:0"
									},
									"scope": 1088,
									"src": "26281:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "26518:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1076,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "26528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1047,
														"src": "26528:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26564:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1079,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "26545:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1047,
																"src": "26545:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 130,
															"src": "26545:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26545:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26528:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "26528:38:0"
											}
										]
									},
									"documentation": null,
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"name": "counter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1087,
												"src": "26484:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"contractScope": null,
													"id": 1072,
													"name": "Counter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1048,
													"src": "26484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26483:25:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26518:0:0"
									},
									"scope": 1088,
									"src": "26465:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1348,
							"src": "25727:848:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC2612 standard as defined in the EIP.\n * Adds the {permit} method, which can be used to change one's\n{IERC20-allowance} without having to send a transaction, by signing a\nmessage. This allows users to spend tokens without having to hold Ether.\n * See https://eips.ethereum.org/EIPS/eip-2612.",
							"fullyImplemented": false,
							"id": 1113,
							"linearizedBaseContracts": [
								1113
							],
							"name": "IERC2612Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\ngiven `owner`'s signed approval.\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\nordering also apply here.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.\n- `deadline` must be a timestamp in the future.\n- `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\nover the EIP712-formatted function arguments.\n- the signature must use ``owner``'s current nonce (see {nonces}).\n     * For more information on the signature format, see the\nhttps://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\nsection].",
									"functionSelector": "d505accf",
									"id": 1105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "27802:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "27817:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "27834:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "27850:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "27868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1097,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "27868:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "27877:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1099,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "27877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "27888:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "27888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27801:97:0"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27907:0:0"
									},
									"scope": 1113,
									"src": "27786:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the current ERC2612 nonce for `owner`. This value must be\nincluded whenever a signature is generated for {permit}.\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\nprevents a signature from being used multiple times.",
									"functionSelector": "7ecebe00",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1112,
												"src": "28237:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28236:15:0"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1112,
												"src": "28275:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28274:9:0"
									},
									"scope": 1113,
									"src": "28221:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1348,
							"src": "26916:1370:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1114,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 942,
										"src": "28321:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$942",
											"typeString": "contract ERC20"
										}
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "28321:5:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1116,
										"name": "IERC2612Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1113,
										"src": "28328:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC2612Permit_$1113",
											"typeString": "contract IERC2612Permit"
										}
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "28328:14:0"
								}
							],
							"contractDependencies": [
								22,
								89,
								942,
								1113
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1276,
							"linearizedBaseContracts": [
								1276,
								1113,
								942,
								89,
								22
							],
							"name": "ERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1120,
									"libraryName": {
										"contractScope": null,
										"id": 1118,
										"name": "Counters",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1088,
										"src": "28355:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Counters_$1088",
											"typeString": "library Counters"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "28349:36:0",
									"typeName": {
										"contractScope": null,
										"id": 1119,
										"name": "Counters.Counter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1048,
										"src": "28368:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1124,
									"name": "_nonces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1276,
									"src": "28391:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1048_storage_$",
										"typeString": "mapping(address => struct Counters.Counter)"
									},
									"typeName": {
										"id": 1123,
										"keyType": {
											"id": 1121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28400:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28391:37:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1048_storage_$",
											"typeString": "mapping(address => struct Counters.Counter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1122,
											"name": "Counters.Counter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1048,
											"src": "28411:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$1048_storage_ptr",
												"typeString": "struct Counters.Counter"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "30adf81f",
									"id": 1127,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1276,
									"src": "28555:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1125,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "28555:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 1126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "28597:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3644e515",
									"id": 1129,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1276,
									"src": "28670:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1128,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "28670:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "28731:442:0",
										"statements": [
											{
												"assignments": [
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"name": "chainID",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1165,
														"src": "28741:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1134,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "28741:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "28775:44:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28789:20:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "28800:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "28800:9:0"
															},
															"variableNames": [
																{
																	"name": "chainID",
																	"nodeType": "YulIdentifier",
																	"src": "28789:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1133,
														"isOffset": false,
														"isSlot": false,
														"src": "28789:7:0",
														"valueSize": 1
													}
												],
												"id": 1135,
												"nodeType": "InlineAssembly",
												"src": "28766:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1136,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "28829:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28909:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 1140,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "28899:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28899:95:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1146,
																							"name": "name",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 516,
																							"src": "29028:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																								"typeString": "function () view returns (string memory)"
																							}
																						},
																						"id": 1147,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "29028:6:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 1145,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "29022:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1144,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "29022:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "29022:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1143,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "29012:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29012:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "29070:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 1152,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "29064:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1151,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "29064:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 1154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "29064:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1150,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -8,
																			"src": "29054:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29054:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1156,
																		"name": "chainID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "29104:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1159,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "29137:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Permit_$1276",
																					"typeString": "contract ERC20Permit"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Permit_$1276",
																					"typeString": "contract ERC20Permit"
																				}
																			],
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29129:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1157,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29129:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29129:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1138,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -1,
																		"src": "28871:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "28871:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28871:285:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1137,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -8,
															"src": "28848:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28848:318:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "28829:337:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "28829:337:0"
											}
										]
									},
									"documentation": null,
									"id": 1166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28719:2:0"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28731:0:0"
									},
									"scope": 1276,
									"src": "28708:465:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1105
									],
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "29380:746:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1185,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "29398:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "29398:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1187,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "29417:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29398:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5065726d69743a206578706972656420646561646c696e65",
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29427:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															},
															"value": "Permit: expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2653e73bd25237d539c23d6d5799f13b15dfa883cef62e39776fc90f0ea94a82",
																"typeString": "literal_string \"Permit: expired deadline\""
															}
														],
														"id": 1184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "29390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29390:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "29390:64:0"
											},
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"name": "hashStruct",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1259,
														"src": "29465:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1192,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "29465:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1209,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1197,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "29537:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1198,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "29570:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1199,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "29593:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1200,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "29618:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1201,
																				"name": "_nonces",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1124,
																				"src": "29642:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1048_storage_$",
																					"typeString": "mapping(address => struct Counters.Counter storage ref)"
																				}
																			},
																			"id": 1203,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1202,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "29650:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "29642:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$1048_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1059,
																		"src": "29642:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1048_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1048_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29642:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1206,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1174,
																	"src": "29684:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1195,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "29509:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "29509:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29509:197:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1194,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "29486:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29486:230:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29465:251:0"
											},
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"name": "_hash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1259,
														"src": "29727:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1210,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "29727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "307831393031",
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29807:6:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			},
																			"value": "0x1901"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_6401_by_1",
																				"typeString": "int_const 6401"
																			}
																		],
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29800:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1215,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "29800:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29800:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1219,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "29832:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1220,
																	"name": "hashStruct",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "29866:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1213,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "29766:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "29766:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29766:124:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1212,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -8,
														"src": "29743:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29743:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29727:173:0"
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"name": "signer",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1259,
														"src": "29911:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1224,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29911:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1227,
															"name": "_hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "29938:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1228,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "29945:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 1229,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "29948:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1230,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "29951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1226,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -6,
														"src": "29928:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29928:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29911:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1234,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "29971:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29989:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29981:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1235,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "29981:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29981:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "29971:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1240,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "29995:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1241,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "30005:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "29995:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "29971:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5065726d69743a20496e76616c6964207369676e6174757265",
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30012:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a8f02c832e43224eb0718eda9e0dde3a89c9d11255d78ba4117473a08bc8875",
																"typeString": "literal_string \"Permit: Invalid signature\""
															},
															"value": "Permit: Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a8f02c832e43224eb0718eda9e0dde3a89c9d11255d78ba4117473a08bc8875",
																"typeString": "literal_string \"Permit: Invalid signature\""
															}
														],
														"id": 1233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "29963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29963:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "29963:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1247,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "30051:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1048_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1249,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1248,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "30059:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30051:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1048_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1071,
														"src": "30051:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1048_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1048_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30051:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "30051:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1254,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "30096:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1255,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "30103:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1256,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "30112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1253,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "30087:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30087:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "30087:32:0"
											}
										]
									},
									"documentation": "@dev See {IERC2612Permit-permit}.\n     ",
									"functionSelector": "d505accf",
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29371:8:0"
									},
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1260,
												"src": "29259:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1260,
												"src": "29274:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1260,
												"src": "29291:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1260,
												"src": "29307:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1260,
												"src": "29325:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1175,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29325:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1260,
												"src": "29334:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1260,
												"src": "29345:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29258:97:0"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29380:0:0"
									},
									"scope": 1276,
									"src": "29243:883:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1112
									],
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "30259:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1268,
																"name": "_nonces",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "30276:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1048_storage_$",
																	"typeString": "mapping(address => struct Counters.Counter storage ref)"
																}
															},
															"id": 1270,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1269,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "30284:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30276:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1048_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1059,
														"src": "30276:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1048_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1048_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30276:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1267,
												"id": 1273,
												"nodeType": "Return",
												"src": "30269:31:0"
											}
										]
									},
									"documentation": "@dev See {IERC2612Permit-nonces}.",
									"functionSelector": "7ecebe00",
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1264,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30232:8:0"
									},
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1275,
												"src": "30205:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30204:15:0"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1275,
												"src": "30250:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30249:9:0"
									},
									"scope": 1276,
									"src": "30189:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1348,
							"src": "28288:2021:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1277,
										"name": "ERC20Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1276,
										"src": "30338:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Permit_$1276",
											"typeString": "contract ERC20Permit"
										}
									},
									"id": 1278,
									"nodeType": "InheritanceSpecifier",
									"src": "30338:11:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1279,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1042,
										"src": "30351:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1042",
											"typeString": "contract Ownable"
										}
									},
									"id": 1280,
									"nodeType": "InheritanceSpecifier",
									"src": "30351:7:0"
								}
							],
							"contractDependencies": [
								22,
								89,
								942,
								1042,
								1113,
								1276
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1347,
							"linearizedBaseContracts": [
								1347,
								1042,
								1276,
								1113,
								942,
								89,
								22
							],
							"name": "newERC20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "30489:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1296,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "30505:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1297,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "30509:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1295,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "30499:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30499:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "30499:22:0"
											}
										]
									},
									"documentation": null,
									"id": 1301,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 1291,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1284,
													"src": "30475:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"argumentTypes": null,
													"id": 1292,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1286,
													"src": "30481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1293,
											"modifierName": {
												"argumentTypes": null,
												"id": 1290,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 942,
												"src": "30468:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$942_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30468:20:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1301,
												"src": "30378:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1301,
												"src": "30390:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1301,
												"src": "30410:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30410:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"name": "totalSupply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1301,
												"src": "30432:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30377:75:0"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30489:0:0"
									},
									"scope": 1347,
									"src": "30365:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "30595:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1311,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "30611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1312,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "30615:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1310,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "30605:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30605:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "30605:17:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ab27be20",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1308,
											"modifierName": {
												"argumentTypes": null,
												"id": 1307,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 993,
												"src": "30585:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30585:9:0"
										}
									],
									"name": "mine",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1316,
												"src": "30548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1316,
												"src": "30560:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30547:28:0"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30595:0:0"
									},
									"scope": 1347,
									"src": "30534:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "30728:145:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1328,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1318,
																"src": "30746:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1329,
																"name": "destination",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "30755:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30746:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c69642061646472657373",
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30768:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30738:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30738:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "30738:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1339,
																	"name": "destination",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "30826:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1340,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "30839:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1336,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1318,
																			"src": "30810:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1335,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "30804:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$942_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30804:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$942",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 574,
																"src": "30804:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30804:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265747269657665206661696c6564",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30848:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ecc626b66b045534c63cd6d7af604b850c4e32457f284e7aa4bbccb079b9ad9",
																"typeString": "literal_string \"Retrieve failed\""
															},
															"value": "Retrieve failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ecc626b66b045534c63cd6d7af604b850c4e32457f284e7aa4bbccb079b9ad9",
																"typeString": "literal_string \"Retrieve failed\""
															}
														],
														"id": 1334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "30796:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30796:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "30796:70:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "cea9d26f",
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1325,
											"modifierName": {
												"argumentTypes": null,
												"id": 1324,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 993,
												"src": "30718:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30718:9:0"
										}
									],
									"name": "rescueTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1346,
												"src": "30657:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"name": "destination",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1346,
												"src": "30672:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1346,
												"src": "30693:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30656:52:0"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30728:0:0"
									},
									"scope": 1347,
									"src": "30635:238:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1348,
							"src": "30312:563:0"
						}
					],
					"src": "0:30875:0"
				},
				"id": 0
			}
		}
	}
}