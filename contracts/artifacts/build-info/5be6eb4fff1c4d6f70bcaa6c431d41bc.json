{
	"id": "5be6eb4fff1c4d6f70bcaa6c431d41bc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.2",
	"solcLongVersion": "0.8.2+commit.661d1103",
	"input": {
		"language": "Solidity",
		"sources": {
			"interestrate.sol": {
				"content": "pragma solidity 0.8.2;\n// SPDX-License-Identifier: MIT\n\n\nimport \"./lib/utils/math/SafeMath.sol\";\n\ncontract UnilendV2InterestRateModel {\n    using SafeMath for uint256;\n\n    constructor() {\n\n    }\n\n    function getCurrentInterestRate(uint totalBorrow, uint availableBorrow) external pure returns (uint){\n        uint uRate;\n        if(totalBorrow > 0){\n            uRate = (totalBorrow.mul(10**18)).div(availableBorrow.add(totalBorrow));\n        }\n        uint apy = uint(10).add( uRate.mul(30) );\n        return apy.div(2102400); // per block interest\n    }\n\n}\n"
			},
			"lib/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"interestrate.sol": {
				"UnilendV2InterestRateModel": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "totalBorrow",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrow",
									"type": "uint256"
								}
							],
							"name": "getCurrentInterestRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"interestrate.sol\":98:560  contract UnilendV2InterestRateModel {... */\n  mstore(0x40, 0x80)\n    /* \"interestrate.sol\":173:195  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"interestrate.sol\":98:560  contract UnilendV2InterestRateModel {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"interestrate.sol\":98:560  contract UnilendV2InterestRateModel {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4c8f48bb\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"interestrate.sol\":201:557  function getCurrentInterestRate(uint totalBorrow, uint availableBorrow) external pure returns (uint){... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"interestrate.sol\":296:300  uint */\n      0x00\n        /* \"interestrate.sol\":311:321  uint uRate */\n      dup1\n        /* \"interestrate.sol\":348:349  0 */\n      0x00\n        /* \"interestrate.sol\":334:345  totalBorrow */\n      dup5\n        /* \"interestrate.sol\":334:349  totalBorrow > 0 */\n      gt\n        /* \"interestrate.sol\":331:446  if(totalBorrow > 0){... */\n      iszero\n      tag_11\n      jumpi\n        /* \"interestrate.sol\":372:435  (totalBorrow.mul(10**18)).div(availableBorrow.add(totalBorrow)) */\n      tag_12\n        /* \"interestrate.sol\":402:434  availableBorrow.add(totalBorrow) */\n      tag_13\n        /* \"interestrate.sol\":422:433  totalBorrow */\n      dup6\n        /* \"interestrate.sol\":402:417  availableBorrow */\n      dup6\n        /* \"interestrate.sol\":402:421  availableBorrow.add */\n      tag_14\n      swap1\n        /* \"interestrate.sol\":402:434  availableBorrow.add(totalBorrow) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_13:\n        /* \"interestrate.sol\":373:396  totalBorrow.mul(10**18) */\n      tag_15\n        /* \"interestrate.sol\":389:395  10**18 */\n      0x0de0b6b3a7640000\n        /* \"interestrate.sol\":373:384  totalBorrow */\n      dup8\n        /* \"interestrate.sol\":373:388  totalBorrow.mul */\n      tag_16\n      swap1\n        /* \"interestrate.sol\":373:396  totalBorrow.mul(10**18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_15:\n        /* \"interestrate.sol\":372:401  (totalBorrow.mul(10**18)).div */\n      tag_17\n      swap1\n        /* \"interestrate.sol\":372:435  (totalBorrow.mul(10**18)).div(availableBorrow.add(totalBorrow)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_12:\n        /* \"interestrate.sol\":364:435  uRate = (totalBorrow.mul(10**18)).div(availableBorrow.add(totalBorrow)) */\n      swap1\n      pop\n        /* \"interestrate.sol\":331:446  if(totalBorrow > 0){... */\n    tag_11:\n        /* \"interestrate.sol\":455:463  uint apy */\n      0x00\n        /* \"interestrate.sol\":466:495  uint(10).add( uRate.mul(30) ) */\n      tag_18\n        /* \"interestrate.sol\":480:493  uRate.mul(30) */\n      tag_19\n        /* \"interestrate.sol\":490:492  30 */\n      0x1e\n        /* \"interestrate.sol\":480:485  uRate */\n      dup5\n        /* \"interestrate.sol\":480:489  uRate.mul */\n      tag_16\n      swap1\n        /* \"interestrate.sol\":480:493  uRate.mul(30) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_19:\n        /* \"interestrate.sol\":471:473  10 */\n      0x0a\n        /* \"interestrate.sol\":466:478  uint(10).add */\n      tag_14\n      swap1\n        /* \"interestrate.sol\":466:495  uint(10).add( uRate.mul(30) ) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_18:\n        /* \"interestrate.sol\":455:495  uint apy = uint(10).add( uRate.mul(30) ) */\n      swap1\n      pop\n        /* \"interestrate.sol\":512:528  apy.div(2102400) */\n      tag_20\n        /* \"interestrate.sol\":520:527  2102400 */\n      0x201480\n        /* \"interestrate.sol\":512:515  apy */\n      dup3\n        /* \"interestrate.sol\":512:519  apy.div */\n      tag_17\n      swap1\n        /* \"interestrate.sol\":512:528  apy.div(2102400) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_20:\n        /* \"interestrate.sol\":505:528  return apy.div(2102400) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"interestrate.sol\":201:557  function getCurrentInterestRate(uint totalBorrow, uint availableBorrow) external pure returns (uint){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/utils/math/SafeMath.sol\":2672:2768  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_14:\n        /* \"lib/utils/math/SafeMath.sol\":2730:2737  uint256 */\n      0x00\n        /* \"lib/utils/math/SafeMath.sol\":2760:2761  b */\n      dup2\n        /* \"lib/utils/math/SafeMath.sol\":2756:2757  a */\n      dup4\n        /* \"lib/utils/math/SafeMath.sol\":2756:2761  a + b */\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"lib/utils/math/SafeMath.sol\":2749:2761  return a + b */\n      swap1\n      pop\n        /* \"lib/utils/math/SafeMath.sol\":2672:2768  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/utils/math/SafeMath.sol\":3382:3478  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_16:\n        /* \"lib/utils/math/SafeMath.sol\":3440:3447  uint256 */\n      0x00\n        /* \"lib/utils/math/SafeMath.sol\":3470:3471  b */\n      dup2\n        /* \"lib/utils/math/SafeMath.sol\":3466:3467  a */\n      dup4\n        /* \"lib/utils/math/SafeMath.sol\":3466:3471  a * b */\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"lib/utils/math/SafeMath.sol\":3459:3471  return a * b */\n      swap1\n      pop\n        /* \"lib/utils/math/SafeMath.sol\":3382:3478  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/utils/math/SafeMath.sol\":3767:3863  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"lib/utils/math/SafeMath.sol\":3825:3832  uint256 */\n      0x00\n        /* \"lib/utils/math/SafeMath.sol\":3855:3856  b */\n      dup2\n        /* \"lib/utils/math/SafeMath.sol\":3851:3852  a */\n      dup4\n        /* \"lib/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"lib/utils/math/SafeMath.sol\":3844:3856  return a / b */\n      swap1\n      pop\n        /* \"lib/utils/math/SafeMath.sol\":3767:3863  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_31:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_33\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:559   */\n    tag_6:\n      0x00\n      dup1\n        /* \"#utility.yul\":277:279   */\n      0x40\n        /* \"#utility.yul\":265:274   */\n      dup4\n        /* \"#utility.yul\":256:263   */\n      dup6\n        /* \"#utility.yul\":252:275   */\n      sub\n        /* \"#utility.yul\":248:280   */\n      slt\n        /* \"#utility.yul\":245:247   */\n      iszero\n      tag_36\n      jumpi\n        /* \"#utility.yul\":293:294   */\n      0x00\n        /* \"#utility.yul\":290:291   */\n      dup1\n        /* \"#utility.yul\":283:295   */\n      revert\n        /* \"#utility.yul\":245:247   */\n    tag_36:\n        /* \"#utility.yul\":336:337   */\n      0x00\n        /* \"#utility.yul\":361:414   */\n      tag_37\n        /* \"#utility.yul\":406:413   */\n      dup6\n        /* \"#utility.yul\":397:403   */\n      dup3\n        /* \"#utility.yul\":386:395   */\n      dup7\n        /* \"#utility.yul\":382:404   */\n      add\n        /* \"#utility.yul\":361:414   */\n      tag_31\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":351:414   */\n      swap3\n      pop\n        /* \"#utility.yul\":307:424   */\n      pop\n        /* \"#utility.yul\":463:465   */\n      0x20\n        /* \"#utility.yul\":489:542   */\n      tag_38\n        /* \"#utility.yul\":534:541   */\n      dup6\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup7\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_31\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":434:552   */\n      pop\n        /* \"#utility.yul\":235:559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:683   */\n    tag_39:\n        /* \"#utility.yul\":652:676   */\n      tag_41\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":652:676   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":647:650   */\n      dup3\n        /* \"#utility.yul\":640:677   */\n      mstore\n        /* \"#utility.yul\":630:683   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:911   */\n    tag_9:\n      0x00\n        /* \"#utility.yul\":820:822   */\n      0x20\n        /* \"#utility.yul\":809:818   */\n      dup3\n        /* \"#utility.yul\":805:823   */\n      add\n        /* \"#utility.yul\":797:823   */\n      swap1\n      pop\n        /* \"#utility.yul\":833:904   */\n      tag_44\n        /* \"#utility.yul\":901:902   */\n      0x00\n        /* \"#utility.yul\":890:899   */\n      dup4\n        /* \"#utility.yul\":886:903   */\n      add\n        /* \"#utility.yul\":877:883   */\n      dup5\n        /* \"#utility.yul\":833:904   */\n      tag_39\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":787:911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":917:1222   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":976:996   */\n      tag_46\n        /* \"#utility.yul\":994:995   */\n      dup3\n        /* \"#utility.yul\":976:996   */\n      tag_42\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":971:996   */\n      swap2\n      pop\n        /* \"#utility.yul\":1010:1030   */\n      tag_47\n        /* \"#utility.yul\":1028:1029   */\n      dup4\n        /* \"#utility.yul\":1010:1030   */\n      tag_42\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1005:1030   */\n      swap3\n      pop\n        /* \"#utility.yul\":1164:1165   */\n      dup3\n        /* \"#utility.yul\":1096:1162   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1092:1166   */\n      sub\n        /* \"#utility.yul\":1089:1090   */\n      dup3\n        /* \"#utility.yul\":1086:1167   */\n      gt\n        /* \"#utility.yul\":1083:1085   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1170:1188   */\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1083:1085   */\n    tag_48:\n        /* \"#utility.yul\":1214:1215   */\n      dup3\n        /* \"#utility.yul\":1211:1212   */\n      dup3\n        /* \"#utility.yul\":1207:1216   */\n      add\n        /* \"#utility.yul\":1200:1216   */\n      swap1\n      pop\n        /* \"#utility.yul\":961:1222   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1413   */\n    tag_29:\n      0x00\n        /* \"#utility.yul\":1285:1305   */\n      tag_52\n        /* \"#utility.yul\":1303:1304   */\n      dup3\n        /* \"#utility.yul\":1285:1305   */\n      tag_42\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1280:1305   */\n      swap2\n      pop\n        /* \"#utility.yul\":1319:1339   */\n      tag_53\n        /* \"#utility.yul\":1337:1338   */\n      dup4\n        /* \"#utility.yul\":1319:1339   */\n      tag_42\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1314:1339   */\n      swap3\n      pop\n        /* \"#utility.yul\":1358:1359   */\n      dup3\n        /* \"#utility.yul\":1348:1350   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1363:1381   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1348:1350   */\n    tag_54:\n        /* \"#utility.yul\":1405:1406   */\n      dup3\n        /* \"#utility.yul\":1402:1403   */\n      dup3\n        /* \"#utility.yul\":1398:1407   */\n      div\n        /* \"#utility.yul\":1393:1407   */\n      swap1\n      pop\n        /* \"#utility.yul\":1270:1413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1419:1767   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":1482:1502   */\n      tag_58\n        /* \"#utility.yul\":1500:1501   */\n      dup3\n        /* \"#utility.yul\":1482:1502   */\n      tag_42\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1477:1502   */\n      swap2\n      pop\n        /* \"#utility.yul\":1516:1536   */\n      tag_59\n        /* \"#utility.yul\":1534:1535   */\n      dup4\n        /* \"#utility.yul\":1516:1536   */\n      tag_42\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1511:1536   */\n      swap3\n      pop\n        /* \"#utility.yul\":1704:1705   */\n      dup2\n        /* \"#utility.yul\":1636:1702   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1632:1706   */\n      div\n        /* \"#utility.yul\":1629:1630   */\n      dup4\n        /* \"#utility.yul\":1626:1707   */\n      gt\n        /* \"#utility.yul\":1621:1622   */\n      dup3\n        /* \"#utility.yul\":1614:1623   */\n      iszero\n        /* \"#utility.yul\":1607:1624   */\n      iszero\n        /* \"#utility.yul\":1603:1708   */\n      and\n        /* \"#utility.yul\":1600:1602   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1711:1729   */\n      tag_61\n      tag_50\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1600:1602   */\n    tag_60:\n        /* \"#utility.yul\":1759:1760   */\n      dup3\n        /* \"#utility.yul\":1756:1757   */\n      dup3\n        /* \"#utility.yul\":1752:1761   */\n      mul\n        /* \"#utility.yul\":1741:1761   */\n      swap1\n      pop\n        /* \"#utility.yul\":1467:1767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1773:1850   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":1839:1844   */\n      dup2\n        /* \"#utility.yul\":1828:1844   */\n      swap1\n      pop\n        /* \"#utility.yul\":1818:1850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1856:2036   */\n    tag_50:\n        /* \"#utility.yul\":1904:1981   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1901:1902   */\n      0x00\n        /* \"#utility.yul\":1894:1982   */\n      mstore\n        /* \"#utility.yul\":2001:2005   */\n      0x11\n        /* \"#utility.yul\":1998:1999   */\n      0x04\n        /* \"#utility.yul\":1991:2006   */\n      mstore\n        /* \"#utility.yul\":2025:2029   */\n      0x24\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2015:2030   */\n      revert\n        /* \"#utility.yul\":2042:2222   */\n    tag_56:\n        /* \"#utility.yul\":2090:2167   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2080:2168   */\n      mstore\n        /* \"#utility.yul\":2187:2191   */\n      0x12\n        /* \"#utility.yul\":2184:2185   */\n      0x04\n        /* \"#utility.yul\":2177:2192   */\n      mstore\n        /* \"#utility.yul\":2211:2215   */\n      0x24\n        /* \"#utility.yul\":2208:2209   */\n      0x00\n        /* \"#utility.yul\":2201:2216   */\n      revert\n        /* \"#utility.yul\":2228:2350   */\n    tag_34:\n        /* \"#utility.yul\":2301:2325   */\n      tag_66\n        /* \"#utility.yul\":2319:2324   */\n      dup2\n        /* \"#utility.yul\":2301:2325   */\n      tag_42\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2294:2299   */\n      dup2\n        /* \"#utility.yul\":2291:2326   */\n      eq\n        /* \"#utility.yul\":2281:2283   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2337:2338   */\n      dup1\n        /* \"#utility.yul\":2330:2342   */\n      revert\n        /* \"#utility.yul\":2281:2283   */\n    tag_67:\n        /* \"#utility.yul\":2271:2350   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202de1c99a28b053a4e9ea7e0f98052a758846b5bc0943db82c187a04508db76fc64736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061034c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634c8f48bb14610030575b600080fd5b61004a60048036038101906100459190610150565b610060565b604051610057919061019b565b60405180910390f35b60008060008411156100ae576100ab61008285856100f990919063ffffffff16565b61009d670de0b6b3a76400008761010f90919063ffffffff16565b61012590919063ffffffff16565b90505b60006100d76100c7601e8461010f90919063ffffffff16565b600a6100f990919063ffffffff16565b90506100ef622014808261012590919063ffffffff16565b9250505092915050565b6000818361010791906101b6565b905092915050565b6000818361011d919061023d565b905092915050565b60008183610133919061020c565b905092915050565b60008135905061014a816102ff565b92915050565b6000806040838503121561016357600080fd5b60006101718582860161013b565b92505060206101828582860161013b565b9150509250929050565b61019581610297565b82525050565b60006020820190506101b0600083018461018c565b92915050565b60006101c182610297565b91506101cc83610297565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610201576102006102a1565b5b828201905092915050565b600061021782610297565b915061022283610297565b925082610232576102316102d0565b5b828204905092915050565b600061024882610297565b915061025383610297565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561028c5761028b6102a1565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61030881610297565b811461031357600080fd5b5056fea26469706673582212202de1c99a28b053a4e9ea7e0f98052a758846b5bc0943db82c187a04508db76fc64736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C8F48BB EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT ISZERO PUSH2 0xAE JUMPI PUSH2 0xAB PUSH2 0x82 DUP6 DUP6 PUSH2 0xF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9D PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x10F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x125 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xD7 PUSH2 0xC7 PUSH1 0x1E DUP5 PUSH2 0x10F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xEF PUSH3 0x201480 DUP3 PUSH2 0x125 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x1B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x23D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A DUP2 PUSH2 0x2FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x171 DUP6 DUP3 DUP7 ADD PUSH2 0x13B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x182 DUP6 DUP3 DUP7 ADD PUSH2 0x13B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x195 DUP2 PUSH2 0x297 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1 DUP3 PUSH2 0x297 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC DUP4 PUSH2 0x297 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x201 JUMPI PUSH2 0x200 PUSH2 0x2A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217 DUP3 PUSH2 0x297 JUMP JUMPDEST SWAP2 POP PUSH2 0x222 DUP4 PUSH2 0x297 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x232 JUMPI PUSH2 0x231 PUSH2 0x2D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248 DUP3 PUSH2 0x297 JUMP JUMPDEST SWAP2 POP PUSH2 0x253 DUP4 PUSH2 0x297 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x28C JUMPI PUSH2 0x28B PUSH2 0x2A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x308 DUP2 PUSH2 0x297 JUMP JUMPDEST DUP2 EQ PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xE1 0xC9 SWAP11 0x28 0xB0 MSTORE8 LOG4 0xE9 0xEA PUSH31 0xF98052A758846B5BC0943DB82C187A04508DB76FC64736F6C634300080200 CALLER ",
							"sourceMap": "98:462:0:-:0;;;173:22;;;;;;;;;;98:462;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2353:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "235:324:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "281:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "290:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "293:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "283:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "283:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "283:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "256:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "265:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "252:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "252:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "277:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "248:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:32:2"
															},
															"nodeType": "YulIf",
															"src": "245:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "307:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "322:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "326:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "351:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "386:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "397:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "382:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "382:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "406:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "361:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "361:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "351:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "434:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "449:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "463:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "453:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "197:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "208:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "220:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "228:6:2",
														"type": ""
													}
												],
												"src": "152:407:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "630:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "647:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "652:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "640:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "618:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "625:3:2",
														"type": ""
													}
												],
												"src": "565:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "787:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "797:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "809:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "820:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "805:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "805:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "797:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "877:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "890:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "901:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "886:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "886:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "833:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "833:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "759:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "771:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "782:4:2",
														"type": ""
													}
												],
												"src": "689:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "961:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "971:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "994:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "976:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "971:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1005:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1028:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1010:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1005:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1168:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1170:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1170:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1170:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1089:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1096:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1164:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1092:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1092:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1086:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:81:2"
															},
															"nodeType": "YulIf",
															"src": "1083:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1200:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1211:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1214:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1207:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1200:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "948:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "951:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "957:3:2",
														"type": ""
													}
												],
												"src": "917:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1270:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1280:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1303:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1285:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1280:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1314:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1337:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1319:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1319:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1314:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1361:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1363:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1363:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1363:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1358:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1351:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:9:2"
															},
															"nodeType": "YulIf",
															"src": "1348:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1393:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1402:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1405:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1398:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1398:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1393:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1259:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1262:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1268:1:2",
														"type": ""
													}
												],
												"src": "1228:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1467:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1477:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1500:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1482:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1482:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1477:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1511:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1534:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1516:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1511:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1709:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1711:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1711:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1711:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1621:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1614:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1614:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1607:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1607:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1629:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1636:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1704:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1632:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1632:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1626:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1626:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1603:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:105:2"
															},
															"nodeType": "YulIf",
															"src": "1600:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1741:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1756:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1759:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1752:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1741:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1450:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1453:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1459:7:2",
														"type": ""
													}
												],
												"src": "1419:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1818:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1828:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1839:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1828:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1800:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1810:7:2",
														"type": ""
													}
												],
												"src": "1773:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1884:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1901:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1904:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1894:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1894:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1998:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2001:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1991:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1991:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1991:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2025:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2015:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2070:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2087:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2080:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2184:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2177:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2201:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2042:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2271:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2328:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2330:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2330:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2330:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2294:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2319:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2301:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2301:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2291:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2291:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:43:2"
															},
															"nodeType": "YulIf",
															"src": "2281:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:2",
														"type": ""
													}
												],
												"src": "2228:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80634c8f48bb14610030575b600080fd5b61004a60048036038101906100459190610150565b610060565b604051610057919061019b565b60405180910390f35b60008060008411156100ae576100ab61008285856100f990919063ffffffff16565b61009d670de0b6b3a76400008761010f90919063ffffffff16565b61012590919063ffffffff16565b90505b60006100d76100c7601e8461010f90919063ffffffff16565b600a6100f990919063ffffffff16565b90506100ef622014808261012590919063ffffffff16565b9250505092915050565b6000818361010791906101b6565b905092915050565b6000818361011d919061023d565b905092915050565b60008183610133919061020c565b905092915050565b60008135905061014a816102ff565b92915050565b6000806040838503121561016357600080fd5b60006101718582860161013b565b92505060206101828582860161013b565b9150509250929050565b61019581610297565b82525050565b60006020820190506101b0600083018461018c565b92915050565b60006101c182610297565b91506101cc83610297565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610201576102006102a1565b5b828201905092915050565b600061021782610297565b915061022283610297565b925082610232576102316102d0565b5b828204905092915050565b600061024882610297565b915061025383610297565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561028c5761028b6102a1565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61030881610297565b811461031357600080fd5b5056fea26469706673582212202de1c99a28b053a4e9ea7e0f98052a758846b5bc0943db82c187a04508db76fc64736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C8F48BB EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT ISZERO PUSH2 0xAE JUMPI PUSH2 0xAB PUSH2 0x82 DUP6 DUP6 PUSH2 0xF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9D PUSH8 0xDE0B6B3A7640000 DUP8 PUSH2 0x10F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x125 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xD7 PUSH2 0xC7 PUSH1 0x1E DUP5 PUSH2 0x10F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH2 0xF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xEF PUSH3 0x201480 DUP3 PUSH2 0x125 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x1B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x23D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A DUP2 PUSH2 0x2FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x171 DUP6 DUP3 DUP7 ADD PUSH2 0x13B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x182 DUP6 DUP3 DUP7 ADD PUSH2 0x13B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x195 DUP2 PUSH2 0x297 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1 DUP3 PUSH2 0x297 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC DUP4 PUSH2 0x297 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x201 JUMPI PUSH2 0x200 PUSH2 0x2A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217 DUP3 PUSH2 0x297 JUMP JUMPDEST SWAP2 POP PUSH2 0x222 DUP4 PUSH2 0x297 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x232 JUMPI PUSH2 0x231 PUSH2 0x2D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248 DUP3 PUSH2 0x297 JUMP JUMPDEST SWAP2 POP PUSH2 0x253 DUP4 PUSH2 0x297 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x28C JUMPI PUSH2 0x28B PUSH2 0x2A1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x308 DUP2 PUSH2 0x297 JUMP JUMPDEST DUP2 EQ PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xE1 0xC9 SWAP11 0x28 0xB0 MSTORE8 LOG4 0xE9 0xEA PUSH31 0xF98052A758846B5BC0943DB82C187A04508DB76FC64736F6C634300080200 CALLER ",
							"sourceMap": "98:462:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;201:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;296:4;311:10;348:1;334:11;:15;331:115;;;372:63;402:32;422:11;402:15;:19;;:32;;;;:::i;:::-;373:23;389:6;373:11;:15;;:23;;;;:::i;:::-;372:29;;:63;;;;:::i;:::-;364:71;;331:115;455:8;466:29;480:13;490:2;480:5;:9;;:13;;;;:::i;:::-;471:2;466:12;;:29;;;;:::i;:::-;455:40;;512:16;520:7;512:3;:7;;:16;;;;:::i;:::-;505:23;;;;201:356;;;;:::o;2672:96:1:-;2730:7;2760:1;2756;:5;;;;:::i;:::-;2749:12;;2672:96;;;;:::o;3382:::-;3440:7;3470:1;3466;:5;;;;:::i;:::-;3459:12;;3382:96;;;;:::o;3767:::-;3825:7;3855:1;3851;:5;;;;:::i;:::-;3844:12;;3767:96;;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:407::-;;;277:2;265:9;256:7;252:23;248:32;245:2;;;293:1;290;283:12;245:2;336:1;361:53;406:7;397:6;386:9;382:22;361:53;:::i;:::-;351:63;;307:117;463:2;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;434:118;235:324;;;;;:::o;565:118::-;652:24;670:5;652:24;:::i;:::-;647:3;640:37;630:53;;:::o;689:222::-;;820:2;809:9;805:18;797:26;;833:71;901:1;890:9;886:17;877:6;833:71;:::i;:::-;787:124;;;;:::o;917:305::-;;976:20;994:1;976:20;:::i;:::-;971:25;;1010:20;1028:1;1010:20;:::i;:::-;1005:25;;1164:1;1096:66;1092:74;1089:1;1086:81;1083:2;;;1170:18;;:::i;:::-;1083:2;1214:1;1211;1207:9;1200:16;;961:261;;;;:::o;1228:185::-;;1285:20;1303:1;1285:20;:::i;:::-;1280:25;;1319:20;1337:1;1319:20;:::i;:::-;1314:25;;1358:1;1348:2;;1363:18;;:::i;:::-;1348:2;1405:1;1402;1398:9;1393:14;;1270:143;;;;:::o;1419:348::-;;1482:20;1500:1;1482:20;:::i;:::-;1477:25;;1516:20;1534:1;1516:20;:::i;:::-;1511:25;;1704:1;1636:66;1632:74;1629:1;1626:81;1621:1;1614:9;1607:17;1603:105;1600:2;;;1711:18;;:::i;:::-;1600:2;1759:1;1756;1752:9;1741:20;;1467:300;;;;:::o;1773:77::-;;1839:5;1828:16;;1818:32;;;:::o;1856:180::-;1904:77;1901:1;1894:88;2001:4;1998:1;1991:15;2025:4;2022:1;2015:15;2042:180;2090:77;2087:1;2080:88;2187:4;2184:1;2177:15;2211:4;2208:1;2201:15;2228:122;2301:24;2319:5;2301:24;:::i;:::-;2294:5;2291:35;2281:2;;2340:1;2337;2330:12;2281:2;2271:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "168800",
								"executionCost": "214",
								"totalCost": "169014"
							},
							"external": {
								"getCurrentInterestRate(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 560,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 173,
									"end": 195,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 173,
									"end": 195,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 173,
									"end": 195,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 173,
									"end": 195,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 195,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 173,
									"end": 195,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 195,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 173,
									"end": 195,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 173,
									"end": 195,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 195,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 173,
									"end": 195,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 98,
									"end": 560,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 98,
									"end": 560,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 560,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 98,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 560,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202de1c99a28b053a4e9ea7e0f98052a758846b5bc0943db82c187a04508db76fc64736f6c63430008020033",
									".code": [
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "4C8F48BB"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 98,
											"end": 560,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 201,
											"end": 557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 334,
											"end": 349,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 446,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 331,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 331,
											"end": 446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 372,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 402,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 422,
											"end": 433,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 402,
											"end": 417,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 402,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 402,
											"end": 434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 402,
											"end": 434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 402,
											"end": 434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 434,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 402,
											"end": 434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 389,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 373,
											"end": 384,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 373,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 373,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 373,
											"end": 396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 373,
											"end": 396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 396,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 373,
											"end": 396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 372,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 372,
											"end": 401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 372,
											"end": 435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 372,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 372,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 372,
											"end": 435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 372,
											"end": 435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 372,
											"end": 435,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 372,
											"end": 435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 331,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 480,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 480,
											"end": 485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 480,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 480,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 480,
											"end": 493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 480,
											"end": 493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 480,
											"end": 493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 480,
											"end": 493,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 480,
											"end": 493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 473,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 466,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 466,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 466,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 466,
											"end": 495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 466,
											"end": 495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 466,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 512,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "201480"
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 512,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 512,
											"end": 519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 512,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 512,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 512,
											"end": 528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 512,
											"end": 528,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 512,
											"end": 528,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 512,
											"end": 528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 505,
											"end": 528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 505,
											"end": 528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 505,
											"end": 528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 505,
											"end": 528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 557,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 277,
											"end": 279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 274,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 256,
											"end": 263,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 252,
											"end": 275,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 248,
											"end": 280,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 245,
											"end": 247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 245,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 245,
											"end": 247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 293,
											"end": 294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 295,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 245,
											"end": 247,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 245,
											"end": 247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 336,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 406,
											"end": 413,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 386,
											"end": 395,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 382,
											"end": 404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 361,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 361,
											"end": 414,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 361,
											"end": 414,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 361,
											"end": 414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 351,
											"end": 414,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 351,
											"end": 414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 307,
											"end": 424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 463,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 434,
											"end": 552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 235,
											"end": 559,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 235,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 235,
											"end": 559,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 235,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 235,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 235,
											"end": 559,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 565,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 652,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 652,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 652,
											"end": 676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 652,
											"end": 676,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 652,
											"end": 676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 647,
											"end": 650,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 640,
											"end": 677,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 683,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 689,
											"end": 911,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 689,
											"end": 911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 689,
											"end": 911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 805,
											"end": 823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 797,
											"end": 823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 833,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 901,
											"end": 902,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 886,
											"end": 903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 877,
											"end": 883,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 833,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 833,
											"end": 904,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 904,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 833,
											"end": 904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 787,
											"end": 911,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 787,
											"end": 911,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 787,
											"end": 911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 787,
											"end": 911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 787,
											"end": 911,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 917,
											"end": 1222,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 917,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 994,
											"end": 995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 976,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 976,
											"end": 996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 996,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 976,
											"end": 996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 971,
											"end": 996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 971,
											"end": 996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1028,
											"end": 1029,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1010,
											"end": 1030,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1010,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1010,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1166,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1167,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1170,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1170,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1170,
											"end": 1188,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1170,
											"end": 1188,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1170,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1216,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1222,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 961,
											"end": 1222,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1228,
											"end": 1413,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1228,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1319,
											"end": 1339,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1339,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1319,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1339,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1348,
											"end": 1350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1350,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1348,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1403,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1407,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1413,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1413,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1413,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1413,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1413,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1419,
											"end": 1767,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1419,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1534,
											"end": 1535,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1516,
											"end": 1536,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1516,
											"end": 1536,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1516,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1632,
											"end": 1706,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1707,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1624,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1600,
											"end": 1602,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1600,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1600,
											"end": 1602,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1600,
											"end": 1602,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1600,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1761,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1761,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1767,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1767,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1767,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1773,
											"end": 1850,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1773,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1850,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1856,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1856,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1981,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1998,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1991,
											"end": 2006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2030,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2222,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2042,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2168,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2184,
											"end": 2185,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2177,
											"end": 2192,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2350,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2228,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2319,
											"end": 2324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2301,
											"end": 2325,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2301,
											"end": 2325,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2301,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2326,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2350,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getCurrentInterestRate(uint256,uint256)": "4c8f48bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrow\",\"type\":\"uint256\"}],\"name\":\"getCurrentInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interestrate.sol\":\"UnilendV2InterestRateModel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interestrate.sol\":{\"keccak256\":\"0x3642a0d8abb678a3874261c2cc8371c80ed64cac06502ab9f2c99182a64a427e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d578354862cb8451441f4750ff8195cc83182cde973abd55d14a8fb7758dbf4e\",\"dweb:/ipfs/QmVusr3uyVYWYjqR4HpWrfeLxmJfGG8dP48n7pfjDhR4z5\"]},\"lib/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207bf53cbb8fa2f548fc3036a208b0c0e8a16f4e080d3767701e15794b2c36040564736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bf53cbb8fa2f548fc3036a208b0c0e8a16f4e080d3767701e15794b2c36040564736f6c63430008020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xF53CBB8FA2F548FC3036A208B0C0E8A16F4E080D3767701E15794B2C CALLDATASIZE DIV SDIV PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "398:6301:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bf53cbb8fa2f548fc3036a208b0c0e8a16f4e080d3767701e15794b2c36040564736f6c63430008020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xF53CBB8FA2F548FC3036A208B0C0E8A16F4E080D3767701E15794B2C CALLDATASIZE DIV SDIV PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "398:6301:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207bf53cbb8fa2f548fc3036a208b0c0e8a16f4e080d3767701e15794b2c36040564736f6c63430008020033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"interestrate.sol": {
				"ast": {
					"absolutePath": "interestrate.sol",
					"exportedSymbols": {
						"SafeMath": [
							374
						],
						"UnilendV2InterestRateModel": [
							62
						]
					},
					"id": 63,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"absolutePath": "lib/utils/math/SafeMath.sol",
							"file": "./lib/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 63,
							"sourceUnit": 375,
							"src": "57:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "UnilendV2InterestRateModel",
							"nameLocation": "107:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"id": 3,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 374,
										"src": "146:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "140:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "159:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 8,
										"nodeType": "Block",
										"src": "187:8:0",
										"statements": []
									},
									"id": 9,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:0:0"
									},
									"scope": 62,
									"src": "173:22:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "301:256:0",
										"statements": [
											{
												"assignments": [
													19
												],
												"declarations": [
													{
														"constant": false,
														"id": 19,
														"mutability": "mutable",
														"name": "uRate",
														"nameLocation": "316:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 60,
														"src": "311:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 18,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "311:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 20,
												"nodeType": "VariableDeclarationStatement",
												"src": "311:10:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 21,
														"name": "totalBorrow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "334:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 41,
												"nodeType": "IfStatement",
												"src": "331:115:0",
												"trueBody": {
													"id": 40,
													"nodeType": "Block",
													"src": "350:96:0",
													"statements": [
														{
															"expression": {
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 24,
																	"name": "uRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "364:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 35,
																					"name": "totalBorrow",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 11,
																					"src": "422:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 33,
																					"name": "availableBorrow",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "402:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 34,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 238,
																				"src": "402:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "402:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"id": 29,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 27,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "389:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"hexValue": "3138",
																								"id": 28,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "393:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_18_by_1",
																									"typeString": "int_const 18"
																								},
																								"value": "18"
																							},
																							"src": "389:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"id": 25,
																							"name": "totalBorrow",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 11,
																							"src": "373:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 26,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 268,
																						"src": "373:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 30,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "373:23:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 31,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "372:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 283,
																		"src": "372:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "372:63:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "364:71:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 39,
															"nodeType": "ExpressionStatement",
															"src": "364:71:0"
														}
													]
												}
											},
											{
												"assignments": [
													43
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"mutability": "mutable",
														"name": "apy",
														"nameLocation": "460:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 60,
														"src": "455:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 42,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "455:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "3330",
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "490:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	}
																],
																"expression": {
																	"id": 49,
																	"name": "uRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "480:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 268,
																"src": "480:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "480:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3130",
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "471:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	}
																],
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "466:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 44,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "466:4:0",
																	"typeDescriptions": {}
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "466:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 238,
														"src": "466:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "466:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "455:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "32313032343030",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2102400_by_1",
																"typeString": "int_const 2102400"
															},
															"value": "2102400"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2102400_by_1",
																"typeString": "int_const 2102400"
															}
														],
														"expression": {
															"id": 55,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "512:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 283,
														"src": "512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "512:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 17,
												"id": 59,
												"nodeType": "Return",
												"src": "505:23:0"
											}
										]
									},
									"functionSelector": "4c8f48bb",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentInterestRate",
									"nameLocation": "210:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "totalBorrow",
												"nameLocation": "238:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "233:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "availableBorrow",
												"nameLocation": "256:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "251:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "251:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:40:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "296:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "296:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:6:0"
									},
									"scope": 62,
									"src": "201:356:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 63,
							"src": "98:462:0"
						}
					],
					"src": "0:561:0"
				},
				"id": 0
			},
			"lib/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "lib/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							374
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 64,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 65,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "SafeMath",
							"nameLocation": "406:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "633:140:1",
										"statements": [
											{
												"id": 95,
												"nodeType": "UncheckedBlock",
												"src": "643:124:1",
												"statements": [
													{
														"assignments": [
															78
														],
														"declarations": [
															{
																"constant": false,
																"id": 78,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 95,
																"src": "667:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 77,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 82,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 79,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "679:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 80,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 83,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "702:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "706:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 90,
														"nodeType": "IfStatement",
														"src": "698:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 88,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 76,
															"id": 89,
															"nodeType": "Return",
															"src": "709:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 92,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "754:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 93,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 76,
														"id": 94,
														"nodeType": "Return",
														"src": "740:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "573:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "584:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:1"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "618:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 72,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "624:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:1"
									},
									"scope": 374,
									"src": "557:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "995:113:1",
										"statements": [
											{
												"id": 123,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "1033:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 110,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "1037:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 116,
														"nodeType": "IfStatement",
														"src": "1029:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 114,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 108,
															"id": 115,
															"nodeType": "Return",
															"src": "1040:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 118,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "1085:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 119,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "1089:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 121,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 108,
														"id": 122,
														"nodeType": "Return",
														"src": "1071:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:1",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "935:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "946:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "980:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "986:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:1"
									},
									"scope": 374,
									"src": "919:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "1332:417:1",
										"statements": [
											{
												"id": 165,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "1600:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 144,
														"nodeType": "IfStatement",
														"src": "1596:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 142,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 136,
															"id": 143,
															"nodeType": "Return",
															"src": "1608:16:1"
														}
													},
													{
														"assignments": [
															146
														],
														"declarations": [
															{
																"constant": false,
																"id": 146,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 165,
																"src": "1638:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 150,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 147,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "1650:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 148,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1654:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 151,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "1673:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 152,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "1677:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 154,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1682:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 160,
														"nodeType": "IfStatement",
														"src": "1669:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 158,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 136,
															"id": 159,
															"nodeType": "Return",
															"src": "1685:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 162,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "1730:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 163,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 136,
														"id": 164,
														"nodeType": "Return",
														"src": "1716:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1272:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1283:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1317:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1323:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:1"
									},
									"scope": 374,
									"src": "1256:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "1974:114:1",
										"statements": [
											{
												"id": 193,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 179,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "2012:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 186,
														"nodeType": "IfStatement",
														"src": "2008:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 184,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 178,
															"id": 185,
															"nodeType": "Return",
															"src": "2020:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 188,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "2065:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 189,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "2069:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 191,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 178,
														"id": 192,
														"nodeType": "Return",
														"src": "2051:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1914:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1925:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1959:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1965:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:1"
									},
									"scope": 374,
									"src": "1898:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "2323:114:1",
										"statements": [
											{
												"id": 221,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2361:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 214,
														"nodeType": "IfStatement",
														"src": "2357:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 212,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 206,
															"id": 213,
															"nodeType": "Return",
															"src": "2369:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 216,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2414:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 217,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 200,
																		"src": "2418:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 219,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 206,
														"id": 220,
														"nodeType": "Return",
														"src": "2400:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2263:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2274:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2308:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2314:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:1"
									},
									"scope": 374,
									"src": "2247:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2739:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 233,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2756:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 234,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "2760:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 232,
												"id": 236,
												"nodeType": "Return",
												"src": "2749:12:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2685:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2730:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:1"
									},
									"scope": 374,
									"src": "2672:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "3106:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "3123:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "3127:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "3116:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3052:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3063:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3097:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:1"
									},
									"scope": 374,
									"src": "3039:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3449:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3466:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3470:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3459:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3395:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3406:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3440:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:1"
									},
									"scope": 374,
									"src": "3382:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3834:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3851:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3855:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3844:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3780:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3791:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3825:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:1"
									},
									"scope": 374,
									"src": "3767:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "4383:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "4400:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "4404:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "4393:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "4329:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "4340:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "4374:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:1"
									},
									"scope": 374,
									"src": "4316:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "5001:106:1",
										"statements": [
											{
												"id": 321,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 311,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "5043:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 312,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "5048:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 314,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "5051:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 310,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 316,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 317,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "5085:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 318,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "5089:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 309,
														"id": 320,
														"nodeType": "Return",
														"src": "5078:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4898:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4917:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4936:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:1"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4992:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:1"
									},
									"scope": 374,
									"src": "4876:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "5716:105:1",
										"statements": [
											{
												"id": 346,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 336,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "5758:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 339,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "5765:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 335,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 341,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 342,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "5799:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 343,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "5803:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 334,
														"id": 345,
														"nodeType": "Return",
														"src": "5792:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "5613:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "5632:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "5651:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "5707:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:1"
									},
									"scope": 374,
									"src": "5591:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "6592:105:1",
										"statements": [
											{
												"id": 371,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 361,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "6634:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 364,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "6641:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 360,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 366,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "6675:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 368,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "6679:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 359,
														"id": 370,
														"nodeType": "Return",
														"src": "6668:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6508:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6527:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:1"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6583:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:1"
									},
									"scope": 374,
									"src": "6467:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 375,
							"src": "398:6301:1"
						}
					],
					"src": "33:6667:1"
				},
				"id": 1
			}
		}
	}
}