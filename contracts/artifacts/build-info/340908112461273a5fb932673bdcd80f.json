{
	"id": "340908112461273a5fb932673bdcd80f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"oracle.sol": {
				"content": "pragma solidity ^0.8.2;\n// SPDX-License-Identifier: MIT\n\nimport \"./lib/utils/Context.sol\";\nimport \"./lib/utils/math/SafeMath.sol\";\nimport \"./lib/access/Ownable.sol\";\n\n// import \"https://github.com/smartcontractkit/chainlink/blob/master/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ninterface AggregatorV3Interface {\n    function decimals() external view returns (uint8);\n\n    function description() external view returns (string memory);\n\n    function version() external view returns (uint256);\n\n    function getRoundData(uint80 _roundId)\n        external\n        view\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        );\n\n    function latestRoundData()\n        external\n        view\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        );\n}\n\ncontract UnilendV2oracle is Ownable {\n    using SafeMath for uint256;\n\n    address public WETH;\n\n    mapping(address => AggregatorV3Interface) private assetsOracles;\n\n    event AssetOracleUpdated(address indexed asset, address indexed source);\n\n    constructor(address weth) {\n        require(weth != address(0), \"UnilendV2: ZERO ADDRESS\");\n        WETH = weth;\n    }\n\n    function setAssetOracles(\n        address[] calldata assets,\n        address[] calldata sources\n    ) external onlyOwner {\n        require(assets.length == sources.length, \"INCONSISTENT_PARAMS_LENGTH\");\n\n        for (uint256 i = 0; i < assets.length; i++) {\n            assetsOracles[assets[i]] = AggregatorV3Interface(sources[i]);\n            emit AssetOracleUpdated(assets[i], sources[i]);\n        }\n    }\n\n    function getLatestPrice(AggregatorV3Interface priceFeed)\n        public\n        view\n        returns (int256)\n    {\n        (\n            ,\n            /*uint80 roundID*/\n            int256 price,\n            ,\n            ,\n\n        ) = /*uint startedAt*/\n            /*uint timeStamp*/\n            /*uint80 answeredInRound*/\n            priceFeed.latestRoundData();\n        return price;\n    }\n\n    function getChainLinkAssetPrice(address asset)\n        public\n        view\n        returns (int256 price)\n    {\n        AggregatorV3Interface source = assetsOracles[asset];\n        if (address(source) != address(0)) {\n            price = getLatestPrice(AggregatorV3Interface(source));\n        }\n    }\n\n    function getAssetPrice(\n        address token0,\n        address token1,\n        uint256 amount\n    ) public view returns (uint256 _price) {\n        int256 price0;\n        int256 price1;\n\n        if (token0 == WETH && token1 != WETH) {\n            price0 = 1 ether;\n            price1 = getChainLinkAssetPrice(token1);\n\n            if (price1 <= 0) {\n                price1 = getUniswapV3Price(token0, token1);\n            }\n        } else if (token0 != WETH && token1 == WETH) {\n            price0 = getChainLinkAssetPrice(token0);\n            price1 = 1 ether;\n\n            if (price0 <= 0) {\n                price0 = getUniswapV3Price(token1, token0);\n            }\n        } else {\n            price0 = getChainLinkAssetPrice(token0);\n            price1 = getChainLinkAssetPrice(token1);\n\n            if (price0 <= 0) {\n                price0 = getUniswapV3Price(token1, token0);\n            }\n\n            if (price1 <= 0) {\n                price1 = getUniswapV3Price(token0, token1);\n            }\n        }\n\n        _price = (amount.mul(uint256(price1))).div(uint256(price0));\n    }\n\n    // tmp xxxxxx\n    function getUniswapV3Price(address token0, address token1)\n        public\n        view\n        returns (int256)\n    {\n        if (aPrice[token0][token1] > 0) {\n            return int256(aPrice[token0][token1]);\n        } else {\n            return 1 ether;\n        }\n    }\n\n    mapping(address => mapping(address => uint256)) public aPrice;\n\n    function setTokenPrice(\n        address token0,\n        address token1,\n        uint256 price\n    ) public {\n        aPrice[token0][token1] = price;\n        aPrice[token1][token0] = uint256(1).div(price);\n    }\n\n    function setTokenPriceB(\n        address token0,\n        address token1,\n        uint256 price\n    ) public {\n        aPrice[token0][token1] = price;\n    }\n}\n"
			},
			"lib/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"lib/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"lib/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lib/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/access/Ownable.sol\":{\"keccak256\":\"0x64d0f54d0d9a6c9f78e54930477a509a0c2bee91ddda7b2f4a781074b6e66ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d0f0721942b0dc9d2f5c57b97c814bb7b18e06614a872cbaf68feab2174bb8\",\"dweb:/ipfs/QmacDiUVK818R4iXkEAUfehwaYFvptqLAELkcf9aJXZjyy\"]},\"lib/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "lib/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/utils/math/SafeMath.sol\":398:6699  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122070f341a426c0977291e1c491fb3e13d0da8f13263ae6a44781adcaf71b15ee3364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122070f341a426c0977291e1c491fb3e13d0da8f13263ae6a44781adcaf71b15ee3364736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xF341A426C0977291E1C491FB3E13D0DA8F SGT 0x26 GASPRICE 0xE6 LOG4 SELFBALANCE DUP2 0xAD 0xCA 0xF7 SHL ISZERO 0xEE CALLER PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "398:6301:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122070f341a426c0977291e1c491fb3e13d0da8f13263ae6a44781adcaf71b15ee3364736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xF341A426C0977291E1C491FB3E13D0DA8F SGT 0x26 GASPRICE 0xE6 LOG4 SELFBALANCE DUP2 0xAD 0xCA 0xF7 SHL ISZERO 0xEE CALLER PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "398:6301:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 398,
									"end": 6699,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070f341a426c0977291e1c491fb3e13d0da8f13263ae6a44781adcaf71b15ee3364736f6c63430008130033",
									".code": [
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 398,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"lib/access/Ownable.sol",
								"lib/utils/Context.sol",
								"lib/utils/math/SafeMath.sol",
								"oracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"oracle.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"oracle.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/access/Ownable.sol\":{\"keccak256\":\"0x64d0f54d0d9a6c9f78e54930477a509a0c2bee91ddda7b2f4a781074b6e66ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d0f0721942b0dc9d2f5c57b97c814bb7b18e06614a872cbaf68feab2174bb8\",\"dweb:/ipfs/QmacDiUVK818R4iXkEAUfehwaYFvptqLAELkcf9aJXZjyy\"]},\"lib/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"lib/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"oracle.sol\":{\"keccak256\":\"0x5b56f8d4c7a5ba2e8d7f9b2fc3bf5f00ff0117ef87e4781ab74b20d81ffc9464\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9b1f69e247809dccee118e58a4f853382c1254accd0104d96d7e7e1be44def9\",\"dweb:/ipfs/QmbmGAmbBHeSFE4NMGXHgeVfRsibUSXi4xvNtbnEy71Krs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UnilendV2oracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "weth",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "source",
									"type": "address"
								}
							],
							"name": "AssetOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "aPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getChainLinkAssetPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "price",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "priceFeed",
									"type": "address"
								}
							],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"name": "getUniswapV3Price",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "sources",
									"type": "address[]"
								}
							],
							"name": "setAssetOracles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "setTokenPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "setTokenPriceB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"oracle.sol\":1009:4332  contract UnilendV2oracle is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"oracle.sol\":1258:1376  constructor(address weth) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"lib/access/Ownable.sol\":867:899  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"lib/access/Ownable.sol\":886:898  _msgSender() */\n  tag_8\n    /* \"lib/access/Ownable.sol\":886:896  _msgSender */\n  shl(0x20, tag_9)\n    /* \"lib/access/Ownable.sol\":886:898  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"lib/access/Ownable.sol\":867:885  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"lib/access/Ownable.sol\":867:899  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"oracle.sol\":1318:1319  0 */\n  0x00\n    /* \"oracle.sol\":1302:1320  weth != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"oracle.sol\":1302:1306  weth */\n  dup2\n    /* \"oracle.sol\":1302:1320  weth != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"oracle.sol\":1294:1348  require(weth != address(0), \"UnilendV2: ZERO ADDRESS\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"oracle.sol\":1365:1369  weth */\n  dup1\n    /* \"oracle.sol\":1358:1362  WETH */\n  0x01\n  0x00\n    /* \"oracle.sol\":1358:1369  WETH = weth */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"oracle.sol\":1258:1376  constructor(address weth) {... */\n  pop\n    /* \"oracle.sol\":1009:4332  contract UnilendV2oracle is Ownable {... */\n  jump(tag_15)\n    /* \"lib/utils/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"lib/utils/Context.sol\":640:647  address */\n  0x00\n    /* \"lib/utils/Context.sol\":666:676  msg.sender */\n  caller\n    /* \"lib/utils/Context.sol\":659:676  return msg.sender */\n  swap1\n  pop\n    /* \"lib/utils/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"lib/access/Ownable.sol\":2216:2403  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"lib/access/Ownable.sol\":2289:2305  address oldOwner */\n  0x00\n    /* \"lib/access/Ownable.sol\":2308:2314  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/access/Ownable.sol\":2289:2314  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"lib/access/Ownable.sol\":2333:2341  newOwner */\n  dup2\n    /* \"lib/access/Ownable.sol\":2324:2330  _owner */\n  0x00\n  dup1\n    /* \"lib/access/Ownable.sol\":2324:2341  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lib/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"lib/access/Ownable.sol\":2356:2396  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/access/Ownable.sol\":2377:2385  oldOwner */\n  dup2\n    /* \"lib/access/Ownable.sol\":2356:2396  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"lib/access/Ownable.sol\":2279:2403  {... */\n  pop\n    /* \"lib/access/Ownable.sol\":2216:2403  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_34\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_36\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_37:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_39\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_42\n  tag_19\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":932:1051   */\ntag_41:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_43\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_24\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_25:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1550   */\ntag_26:\n    /* \"#utility.yul\":1517:1542   */\n  0x556e696c656e6456323a205a45524f2041444452455353000000000000000000\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1543   */\n  mstore\n    /* \"#utility.yul\":1377:1550   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1556:1922   */\ntag_27:\n    /* \"#utility.yul\":1698:1701   */\n  0x00\n    /* \"#utility.yul\":1719:1786   */\n  tag_47\n    /* \"#utility.yul\":1783:1785   */\n  0x17\n    /* \"#utility.yul\":1778:1781   */\n  dup4\n    /* \"#utility.yul\":1719:1786   */\n  tag_25\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1712:1786   */\n  swap2\n  pop\n    /* \"#utility.yul\":1795:1888   */\n  tag_48\n    /* \"#utility.yul\":1884:1887   */\n  dup3\n    /* \"#utility.yul\":1795:1888   */\n  tag_26\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1913:1915   */\n  0x20\n    /* \"#utility.yul\":1908:1911   */\n  dup3\n    /* \"#utility.yul\":1904:1916   */\n  add\n    /* \"#utility.yul\":1897:1916   */\n  swap1\n  pop\n    /* \"#utility.yul\":1556:1922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1928:2347   */\ntag_14:\n    /* \"#utility.yul\":2094:2098   */\n  0x00\n    /* \"#utility.yul\":2132:2134   */\n  0x20\n    /* \"#utility.yul\":2121:2130   */\n  dup3\n    /* \"#utility.yul\":2117:2135   */\n  add\n    /* \"#utility.yul\":2109:2135   */\n  swap1\n  pop\n    /* \"#utility.yul\":2181:2190   */\n  dup2\n    /* \"#utility.yul\":2175:2179   */\n  dup2\n    /* \"#utility.yul\":2171:2191   */\n  sub\n    /* \"#utility.yul\":2167:2168   */\n  0x00\n    /* \"#utility.yul\":2156:2165   */\n  dup4\n    /* \"#utility.yul\":2152:2169   */\n  add\n    /* \"#utility.yul\":2145:2192   */\n  mstore\n    /* \"#utility.yul\":2209:2340   */\n  tag_50\n    /* \"#utility.yul\":2335:2339   */\n  dup2\n    /* \"#utility.yul\":2209:2340   */\n  tag_27\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2201:2340   */\n  swap1\n  pop\n    /* \"#utility.yul\":1928:2347   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"oracle.sol\":1009:4332  contract UnilendV2oracle is Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"oracle.sol\":1009:4332  contract UnilendV2oracle is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7bc6c34e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf56730ac\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x16345f18\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3176fce1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x39c0f0c4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3fbff512\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4cb3dc2e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5b2e4dc5\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"oracle.sol\":1795:2190  function getLatestPrice(AggregatorV3Interface priceFeed)... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"oracle.sol\":4175:4330  function setTokenPriceB(... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"oracle.sol\":3614:3885  function getUniswapV3Price(address token0, address token1)... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"oracle.sol\":1382:1789  function setAssetOracles(... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"oracle.sol\":3959:4169  function setTokenPrice(... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"oracle.sol\":2502:3590  function getAssetPrice(... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/access/Ownable.sol\":1614:1715  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"oracle.sol\":2196:2496  function getChainLinkAssetPrice(address asset)... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/access/Ownable.sol\":982:1067  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"oracle.sol\":1084:1103  address public WETH */\n    tag_12:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/access/Ownable.sol\":1864:2062  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"oracle.sol\":3891:3952  mapping(address => mapping(address => uint256)) public aPrice */\n    tag_14:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"oracle.sol\":1795:2190  function getLatestPrice(AggregatorV3Interface priceFeed)... */\n    tag_19:\n        /* \"oracle.sol\":1897:1903  int256 */\n      0x00\n        /* \"oracle.sol\":1978:1990  int256 price */\n      dup1\n        /* \"oracle.sol\":2134:2143  priceFeed */\n      dup3\n        /* \"oracle.sol\":2134:2159  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"oracle.sol\":2134:2161  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"oracle.sol\":1919:2161  (... */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"oracle.sol\":2178:2183  price */\n      dup1\n        /* \"oracle.sol\":2171:2183  return price */\n      swap2\n      pop\n      pop\n        /* \"oracle.sol\":1795:2190  function getLatestPrice(AggregatorV3Interface priceFeed)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"oracle.sol\":4175:4330  function setTokenPriceB(... */\n    tag_25:\n        /* \"oracle.sol\":4318:4323  price */\n      dup1\n        /* \"oracle.sol\":4293:4299  aPrice */\n      0x03\n        /* \"oracle.sol\":4293:4307  aPrice[token0] */\n      0x00\n        /* \"oracle.sol\":4300:4306  token0 */\n      dup6\n        /* \"oracle.sol\":4293:4307  aPrice[token0] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"oracle.sol\":4293:4315  aPrice[token0][token1] */\n      0x00\n        /* \"oracle.sol\":4308:4314  token1 */\n      dup5\n        /* \"oracle.sol\":4293:4315  aPrice[token0][token1] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"oracle.sol\":4293:4323  aPrice[token0][token1] = price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"oracle.sol\":4175:4330  function setTokenPriceB(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"oracle.sol\":3614:3885  function getUniswapV3Price(address token0, address token1)... */\n    tag_29:\n        /* \"oracle.sol\":3718:3724  int256 */\n      0x00\n        /* \"oracle.sol\":3769:3770  0 */\n      dup1\n        /* \"oracle.sol\":3744:3750  aPrice */\n      0x03\n        /* \"oracle.sol\":3744:3758  aPrice[token0] */\n      0x00\n        /* \"oracle.sol\":3751:3757  token0 */\n      dup6\n        /* \"oracle.sol\":3744:3758  aPrice[token0] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"oracle.sol\":3744:3766  aPrice[token0][token1] */\n      0x00\n        /* \"oracle.sol\":3759:3765  token1 */\n      dup5\n        /* \"oracle.sol\":3744:3766  aPrice[token0][token1] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"oracle.sol\":3744:3770  aPrice[token0][token1] > 0 */\n      gt\n        /* \"oracle.sol\":3740:3879  if (aPrice[token0][token1] > 0) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"oracle.sol\":3800:3806  aPrice */\n      0x03\n        /* \"oracle.sol\":3800:3814  aPrice[token0] */\n      0x00\n        /* \"oracle.sol\":3807:3813  token0 */\n      dup5\n        /* \"oracle.sol\":3800:3814  aPrice[token0] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"oracle.sol\":3800:3822  aPrice[token0][token1] */\n      0x00\n        /* \"oracle.sol\":3815:3821  token1 */\n      dup4\n        /* \"oracle.sol\":3800:3822  aPrice[token0][token1] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"oracle.sol\":3786:3823  return int256(aPrice[token0][token1]) */\n      swap1\n      pop\n      jump(tag_70)\n        /* \"oracle.sol\":3740:3879  if (aPrice[token0][token1] > 0) {... */\n    tag_71:\n        /* \"oracle.sol\":3861:3868  1 ether */\n      0x0de0b6b3a7640000\n        /* \"oracle.sol\":3854:3868  return 1 ether */\n      swap1\n      pop\n        /* \"oracle.sol\":3614:3885  function getUniswapV3Price(address token0, address token1)... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"oracle.sol\":1382:1789  function setAssetOracles(... */\n    tag_34:\n        /* \"lib/access/Ownable.sol\":1205:1217  _msgSender() */\n      tag_74\n        /* \"lib/access/Ownable.sol\":1205:1215  _msgSender */\n      tag_75\n        /* \"lib/access/Ownable.sol\":1205:1217  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"lib/access/Ownable.sol\":1194:1217  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/access/Ownable.sol\":1194:1201  owner() */\n      tag_76\n        /* \"lib/access/Ownable.sol\":1194:1199  owner */\n      tag_51\n        /* \"lib/access/Ownable.sol\":1194:1201  owner() */\n      jump\t// in\n    tag_76:\n        /* \"lib/access/Ownable.sol\":1194:1217  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/access/Ownable.sol\":1186:1254  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"oracle.sol\":1538:1545  sources */\n      dup2\n      dup2\n        /* \"oracle.sol\":1538:1552  sources.length */\n      swap1\n      pop\n        /* \"oracle.sol\":1521:1527  assets */\n      dup5\n      dup5\n        /* \"oracle.sol\":1521:1534  assets.length */\n      swap1\n      pop\n        /* \"oracle.sol\":1521:1552  assets.length == sources.length */\n      eq\n        /* \"oracle.sol\":1513:1583  require(assets.length == sources.length, \"INCONSISTENT_PARAMS_LENGTH\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"oracle.sol\":1599:1608  uint256 i */\n      0x00\n        /* \"oracle.sol\":1594:1783  for (uint256 i = 0; i < assets.length; i++) {... */\n    tag_84:\n        /* \"oracle.sol\":1618:1624  assets */\n      dup5\n      dup5\n        /* \"oracle.sol\":1618:1631  assets.length */\n      swap1\n      pop\n        /* \"oracle.sol\":1614:1615  i */\n      dup2\n        /* \"oracle.sol\":1614:1631  i < assets.length */\n      lt\n        /* \"oracle.sol\":1594:1783  for (uint256 i = 0; i < assets.length; i++) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"oracle.sol\":1701:1708  sources */\n      dup3\n      dup3\n        /* \"oracle.sol\":1709:1710  i */\n      dup3\n        /* \"oracle.sol\":1701:1711  sources[i] */\n      dup2\n      dup2\n      lt\n      tag_87\n      jumpi\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n    tag_87:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_90:\n        /* \"oracle.sol\":1652:1665  assetsOracles */\n      0x02\n        /* \"oracle.sol\":1652:1676  assetsOracles[assets[i]] */\n      0x00\n        /* \"oracle.sol\":1666:1672  assets */\n      dup8\n      dup8\n        /* \"oracle.sol\":1673:1674  i */\n      dup6\n        /* \"oracle.sol\":1666:1675  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_91\n      jumpi\n      tag_92\n      tag_89\n      jump\t// in\n    tag_92:\n    tag_91:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_93:\n        /* \"oracle.sol\":1652:1676  assetsOracles[assets[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"oracle.sol\":1652:1712  assetsOracles[assets[i]] = AggregatorV3Interface(sources[i]) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"oracle.sol\":1761:1768  sources */\n      dup3\n      dup3\n        /* \"oracle.sol\":1769:1770  i */\n      dup3\n        /* \"oracle.sol\":1761:1771  sources[i] */\n      dup2\n      dup2\n      lt\n      tag_94\n      jumpi\n      tag_95\n      tag_89\n      jump\t// in\n    tag_95:\n    tag_94:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_96:\n        /* \"oracle.sol\":1731:1772  AssetOracleUpdated(assets[i], sources[i]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":1750:1756  assets */\n      dup6\n      dup6\n        /* \"oracle.sol\":1757:1758  i */\n      dup4\n        /* \"oracle.sol\":1750:1759  assets[i] */\n      dup2\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_89\n      jump\t// in\n    tag_98:\n    tag_97:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_99:\n        /* \"oracle.sol\":1731:1772  AssetOracleUpdated(assets[i], sources[i]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x126a75207b8b11156ec1f4a0ad246f458582451fc5bee4b8a729a1a68886e132\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"oracle.sol\":1633:1636  i++ */\n      dup1\n      dup1\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      swap2\n      pop\n      pop\n        /* \"oracle.sol\":1594:1783  for (uint256 i = 0; i < assets.length; i++) {... */\n      jump(tag_84)\n    tag_85:\n      pop\n        /* \"oracle.sol\":1382:1789  function setAssetOracles(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"oracle.sol\":3959:4169  function setTokenPrice(... */\n    tag_37:\n        /* \"oracle.sol\":4101:4106  price */\n      dup1\n        /* \"oracle.sol\":4076:4082  aPrice */\n      0x03\n        /* \"oracle.sol\":4076:4090  aPrice[token0] */\n      0x00\n        /* \"oracle.sol\":4083:4089  token0 */\n      dup6\n        /* \"oracle.sol\":4076:4090  aPrice[token0] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"oracle.sol\":4076:4098  aPrice[token0][token1] */\n      0x00\n        /* \"oracle.sol\":4091:4097  token1 */\n      dup5\n        /* \"oracle.sol\":4076:4098  aPrice[token0][token1] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"oracle.sol\":4076:4106  aPrice[token0][token1] = price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"oracle.sol\":4141:4162  uint256(1).div(price) */\n      tag_103\n        /* \"oracle.sol\":4156:4161  price */\n      dup2\n        /* \"oracle.sol\":4149:4150  1 */\n      0x01\n        /* \"oracle.sol\":4141:4155  uint256(1).div */\n      tag_104\n      swap1\n        /* \"oracle.sol\":4141:4162  uint256(1).div(price) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"oracle.sol\":4116:4122  aPrice */\n      0x03\n        /* \"oracle.sol\":4116:4130  aPrice[token1] */\n      0x00\n        /* \"oracle.sol\":4123:4129  token1 */\n      dup5\n        /* \"oracle.sol\":4116:4130  aPrice[token1] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"oracle.sol\":4116:4138  aPrice[token1][token0] */\n      0x00\n        /* \"oracle.sol\":4131:4137  token0 */\n      dup6\n        /* \"oracle.sol\":4116:4138  aPrice[token1][token0] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"oracle.sol\":4116:4162  aPrice[token1][token0] = uint256(1).div(price) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"oracle.sol\":3959:4169  function setTokenPrice(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"oracle.sol\":2502:3590  function getAssetPrice(... */\n    tag_40:\n        /* \"oracle.sol\":2624:2638  uint256 _price */\n      0x00\n        /* \"oracle.sol\":2650:2663  int256 price0 */\n      dup1\n        /* \"oracle.sol\":2673:2686  int256 price1 */\n      0x00\n        /* \"oracle.sol\":2711:2715  WETH */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":2701:2715  token0 == WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":2701:2707  token0 */\n      dup7\n        /* \"oracle.sol\":2701:2715  token0 == WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"oracle.sol\":2701:2733  token0 == WETH && token1 != WETH */\n      dup1\n      iszero\n      tag_106\n      jumpi\n      pop\n        /* \"oracle.sol\":2729:2733  WETH */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":2719:2733  token1 != WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":2719:2725  token1 */\n      dup6\n        /* \"oracle.sol\":2719:2733  token1 != WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"oracle.sol\":2701:2733  token0 == WETH && token1 != WETH */\n    tag_106:\n        /* \"oracle.sol\":2697:3514  if (token0 == WETH && token1 != WETH) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"oracle.sol\":2758:2765  1 ether */\n      0x0de0b6b3a7640000\n        /* \"oracle.sol\":2749:2765  price0 = 1 ether */\n      swap2\n      pop\n        /* \"oracle.sol\":2788:2818  getChainLinkAssetPrice(token1) */\n      tag_108\n        /* \"oracle.sol\":2811:2817  token1 */\n      dup6\n        /* \"oracle.sol\":2788:2810  getChainLinkAssetPrice */\n      tag_48\n        /* \"oracle.sol\":2788:2818  getChainLinkAssetPrice(token1) */\n      jump\t// in\n    tag_108:\n        /* \"oracle.sol\":2779:2818  price1 = getChainLinkAssetPrice(token1) */\n      swap1\n      pop\n        /* \"oracle.sol\":2847:2848  0 */\n      0x00\n        /* \"oracle.sol\":2837:2843  price1 */\n      dup2\n        /* \"oracle.sol\":2837:2848  price1 <= 0 */\n      sgt\n        /* \"oracle.sol\":2833:2925  if (price1 <= 0) {... */\n      tag_109\n      jumpi\n        /* \"oracle.sol\":2877:2910  getUniswapV3Price(token0, token1) */\n      tag_110\n        /* \"oracle.sol\":2895:2901  token0 */\n      dup7\n        /* \"oracle.sol\":2903:2909  token1 */\n      dup7\n        /* \"oracle.sol\":2877:2894  getUniswapV3Price */\n      tag_29\n        /* \"oracle.sol\":2877:2910  getUniswapV3Price(token0, token1) */\n      jump\t// in\n    tag_110:\n        /* \"oracle.sol\":2868:2910  price1 = getUniswapV3Price(token0, token1) */\n      swap1\n      pop\n        /* \"oracle.sol\":2833:2925  if (price1 <= 0) {... */\n    tag_109:\n        /* \"oracle.sol\":2697:3514  if (token0 == WETH && token1 != WETH) {... */\n      jump(tag_111)\n    tag_107:\n        /* \"oracle.sol\":2955:2959  WETH */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":2945:2959  token0 != WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":2945:2951  token0 */\n      dup7\n        /* \"oracle.sol\":2945:2959  token0 != WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"oracle.sol\":2945:2977  token0 != WETH && token1 == WETH */\n      dup1\n      iszero\n      tag_112\n      jumpi\n      pop\n        /* \"oracle.sol\":2973:2977  WETH */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":2963:2977  token1 == WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":2963:2969  token1 */\n      dup6\n        /* \"oracle.sol\":2963:2977  token1 == WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"oracle.sol\":2945:2977  token0 != WETH && token1 == WETH */\n    tag_112:\n        /* \"oracle.sol\":2941:3514  if (token0 != WETH && token1 == WETH) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"oracle.sol\":3002:3032  getChainLinkAssetPrice(token0) */\n      tag_114\n        /* \"oracle.sol\":3025:3031  token0 */\n      dup7\n        /* \"oracle.sol\":3002:3024  getChainLinkAssetPrice */\n      tag_48\n        /* \"oracle.sol\":3002:3032  getChainLinkAssetPrice(token0) */\n      jump\t// in\n    tag_114:\n        /* \"oracle.sol\":2993:3032  price0 = getChainLinkAssetPrice(token0) */\n      swap2\n      pop\n        /* \"oracle.sol\":3055:3062  1 ether */\n      0x0de0b6b3a7640000\n        /* \"oracle.sol\":3046:3062  price1 = 1 ether */\n      swap1\n      pop\n        /* \"oracle.sol\":3091:3092  0 */\n      0x00\n        /* \"oracle.sol\":3081:3087  price0 */\n      dup3\n        /* \"oracle.sol\":3081:3092  price0 <= 0 */\n      sgt\n        /* \"oracle.sol\":3077:3169  if (price0 <= 0) {... */\n      tag_115\n      jumpi\n        /* \"oracle.sol\":3121:3154  getUniswapV3Price(token1, token0) */\n      tag_116\n        /* \"oracle.sol\":3139:3145  token1 */\n      dup6\n        /* \"oracle.sol\":3147:3153  token0 */\n      dup8\n        /* \"oracle.sol\":3121:3138  getUniswapV3Price */\n      tag_29\n        /* \"oracle.sol\":3121:3154  getUniswapV3Price(token1, token0) */\n      jump\t// in\n    tag_116:\n        /* \"oracle.sol\":3112:3154  price0 = getUniswapV3Price(token1, token0) */\n      swap2\n      pop\n        /* \"oracle.sol\":3077:3169  if (price0 <= 0) {... */\n    tag_115:\n        /* \"oracle.sol\":2941:3514  if (token0 != WETH && token1 == WETH) {... */\n      jump(tag_117)\n    tag_113:\n        /* \"oracle.sol\":3208:3238  getChainLinkAssetPrice(token0) */\n      tag_118\n        /* \"oracle.sol\":3231:3237  token0 */\n      dup7\n        /* \"oracle.sol\":3208:3230  getChainLinkAssetPrice */\n      tag_48\n        /* \"oracle.sol\":3208:3238  getChainLinkAssetPrice(token0) */\n      jump\t// in\n    tag_118:\n        /* \"oracle.sol\":3199:3238  price0 = getChainLinkAssetPrice(token0) */\n      swap2\n      pop\n        /* \"oracle.sol\":3261:3291  getChainLinkAssetPrice(token1) */\n      tag_119\n        /* \"oracle.sol\":3284:3290  token1 */\n      dup6\n        /* \"oracle.sol\":3261:3283  getChainLinkAssetPrice */\n      tag_48\n        /* \"oracle.sol\":3261:3291  getChainLinkAssetPrice(token1) */\n      jump\t// in\n    tag_119:\n        /* \"oracle.sol\":3252:3291  price1 = getChainLinkAssetPrice(token1) */\n      swap1\n      pop\n        /* \"oracle.sol\":3320:3321  0 */\n      0x00\n        /* \"oracle.sol\":3310:3316  price0 */\n      dup3\n        /* \"oracle.sol\":3310:3321  price0 <= 0 */\n      sgt\n        /* \"oracle.sol\":3306:3398  if (price0 <= 0) {... */\n      tag_120\n      jumpi\n        /* \"oracle.sol\":3350:3383  getUniswapV3Price(token1, token0) */\n      tag_121\n        /* \"oracle.sol\":3368:3374  token1 */\n      dup6\n        /* \"oracle.sol\":3376:3382  token0 */\n      dup8\n        /* \"oracle.sol\":3350:3367  getUniswapV3Price */\n      tag_29\n        /* \"oracle.sol\":3350:3383  getUniswapV3Price(token1, token0) */\n      jump\t// in\n    tag_121:\n        /* \"oracle.sol\":3341:3383  price0 = getUniswapV3Price(token1, token0) */\n      swap2\n      pop\n        /* \"oracle.sol\":3306:3398  if (price0 <= 0) {... */\n    tag_120:\n        /* \"oracle.sol\":3426:3427  0 */\n      0x00\n        /* \"oracle.sol\":3416:3422  price1 */\n      dup2\n        /* \"oracle.sol\":3416:3427  price1 <= 0 */\n      sgt\n        /* \"oracle.sol\":3412:3504  if (price1 <= 0) {... */\n      tag_122\n      jumpi\n        /* \"oracle.sol\":3456:3489  getUniswapV3Price(token0, token1) */\n      tag_123\n        /* \"oracle.sol\":3474:3480  token0 */\n      dup7\n        /* \"oracle.sol\":3482:3488  token1 */\n      dup7\n        /* \"oracle.sol\":3456:3473  getUniswapV3Price */\n      tag_29\n        /* \"oracle.sol\":3456:3489  getUniswapV3Price(token0, token1) */\n      jump\t// in\n    tag_123:\n        /* \"oracle.sol\":3447:3489  price1 = getUniswapV3Price(token0, token1) */\n      swap1\n      pop\n        /* \"oracle.sol\":3412:3504  if (price1 <= 0) {... */\n    tag_122:\n        /* \"oracle.sol\":2941:3514  if (token0 != WETH && token1 == WETH) {... */\n    tag_117:\n        /* \"oracle.sol\":2697:3514  if (token0 == WETH && token1 != WETH) {... */\n    tag_111:\n        /* \"oracle.sol\":3533:3583  (amount.mul(uint256(price1))).div(uint256(price0)) */\n      tag_124\n        /* \"oracle.sol\":3575:3581  price0 */\n      dup3\n        /* \"oracle.sol\":3534:3561  amount.mul(uint256(price1)) */\n      tag_125\n        /* \"oracle.sol\":3553:3559  price1 */\n      dup4\n        /* \"oracle.sol\":3534:3540  amount */\n      dup8\n        /* \"oracle.sol\":3534:3544  amount.mul */\n      tag_126\n      swap1\n        /* \"oracle.sol\":3534:3561  amount.mul(uint256(price1)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"oracle.sol\":3533:3566  (amount.mul(uint256(price1))).div */\n      tag_104\n      swap1\n        /* \"oracle.sol\":3533:3583  (amount.mul(uint256(price1))).div(uint256(price0)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"oracle.sol\":3524:3583  _price = (amount.mul(uint256(price1))).div(uint256(price0)) */\n      swap3\n      pop\n        /* \"oracle.sol\":2640:3590  {... */\n      pop\n      pop\n        /* \"oracle.sol\":2502:3590  function getAssetPrice(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/access/Ownable.sol\":1614:1715  function renounceOwnership() public virtual onlyOwner {... */\n    tag_44:\n        /* \"lib/access/Ownable.sol\":1205:1217  _msgSender() */\n      tag_128\n        /* \"lib/access/Ownable.sol\":1205:1215  _msgSender */\n      tag_75\n        /* \"lib/access/Ownable.sol\":1205:1217  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"lib/access/Ownable.sol\":1194:1217  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/access/Ownable.sol\":1194:1201  owner() */\n      tag_129\n        /* \"lib/access/Ownable.sol\":1194:1199  owner */\n      tag_51\n        /* \"lib/access/Ownable.sol\":1194:1201  owner() */\n      jump\t// in\n    tag_129:\n        /* \"lib/access/Ownable.sol\":1194:1217  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/access/Ownable.sol\":1186:1254  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_79\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"lib/access/Ownable.sol\":1678:1708  _transferOwnership(address(0)) */\n      tag_133\n        /* \"lib/access/Ownable.sol\":1705:1706  0 */\n      0x00\n        /* \"lib/access/Ownable.sol\":1678:1696  _transferOwnership */\n      tag_134\n        /* \"lib/access/Ownable.sol\":1678:1708  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_133:\n        /* \"lib/access/Ownable.sol\":1614:1715  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"oracle.sol\":2196:2496  function getChainLinkAssetPrice(address asset)... */\n    tag_48:\n        /* \"oracle.sol\":2288:2300  int256 price */\n      0x00\n        /* \"oracle.sol\":2316:2344  AggregatorV3Interface source */\n      dup1\n        /* \"oracle.sol\":2347:2360  assetsOracles */\n      0x02\n        /* \"oracle.sol\":2347:2367  assetsOracles[asset] */\n      0x00\n        /* \"oracle.sol\":2361:2366  asset */\n      dup5\n        /* \"oracle.sol\":2347:2367  assetsOracles[asset] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":2316:2367  AggregatorV3Interface source = assetsOracles[asset] */\n      swap1\n      pop\n        /* \"oracle.sol\":2408:2409  0 */\n      0x00\n        /* \"oracle.sol\":2381:2410  address(source) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"oracle.sol\":2389:2395  source */\n      dup2\n        /* \"oracle.sol\":2381:2410  address(source) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"oracle.sol\":2377:2490  if (address(source) != address(0)) {... */\n      tag_136\n      jumpi\n        /* \"oracle.sol\":2434:2479  getLatestPrice(AggregatorV3Interface(source)) */\n      tag_137\n        /* \"oracle.sol\":2471:2477  source */\n      dup2\n        /* \"oracle.sol\":2434:2448  getLatestPrice */\n      tag_19\n        /* \"oracle.sol\":2434:2479  getLatestPrice(AggregatorV3Interface(source)) */\n      jump\t// in\n    tag_137:\n        /* \"oracle.sol\":2426:2479  price = getLatestPrice(AggregatorV3Interface(source)) */\n      swap2\n      pop\n        /* \"oracle.sol\":2377:2490  if (address(source) != address(0)) {... */\n    tag_136:\n        /* \"oracle.sol\":2306:2496  {... */\n      pop\n        /* \"oracle.sol\":2196:2496  function getChainLinkAssetPrice(address asset)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/access/Ownable.sol\":982:1067  function owner() public view virtual returns (address) {... */\n    tag_51:\n        /* \"lib/access/Ownable.sol\":1028:1035  address */\n      0x00\n        /* \"lib/access/Ownable.sol\":1054:1060  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/access/Ownable.sol\":1047:1060  return _owner */\n      swap1\n      pop\n        /* \"lib/access/Ownable.sol\":982:1067  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"oracle.sol\":1084:1103  address public WETH */\n    tag_55:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"lib/access/Ownable.sol\":1864:2062  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_59:\n        /* \"lib/access/Ownable.sol\":1205:1217  _msgSender() */\n      tag_140\n        /* \"lib/access/Ownable.sol\":1205:1215  _msgSender */\n      tag_75\n        /* \"lib/access/Ownable.sol\":1205:1217  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"lib/access/Ownable.sol\":1194:1217  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/access/Ownable.sol\":1194:1201  owner() */\n      tag_141\n        /* \"lib/access/Ownable.sol\":1194:1199  owner */\n      tag_51\n        /* \"lib/access/Ownable.sol\":1194:1201  owner() */\n      jump\t// in\n    tag_141:\n        /* \"lib/access/Ownable.sol\":1194:1217  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/access/Ownable.sol\":1186:1254  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_79\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"lib/access/Ownable.sol\":1972:1973  0 */\n      0x00\n        /* \"lib/access/Ownable.sol\":1952:1974  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/access/Ownable.sol\":1952:1960  newOwner */\n      dup2\n        /* \"lib/access/Ownable.sol\":1952:1974  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/access/Ownable.sol\":1944:2017  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"lib/access/Ownable.sol\":2027:2055  _transferOwnership(newOwner) */\n      tag_148\n        /* \"lib/access/Ownable.sol\":2046:2054  newOwner */\n      dup2\n        /* \"lib/access/Ownable.sol\":2027:2045  _transferOwnership */\n      tag_134\n        /* \"lib/access/Ownable.sol\":2027:2055  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"lib/access/Ownable.sol\":1864:2062  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"oracle.sol\":3891:3952  mapping(address => mapping(address => uint256)) public aPrice */\n    tag_62:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"lib/utils/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n    tag_75:\n        /* \"lib/utils/Context.sol\":640:647  address */\n      0x00\n        /* \"lib/utils/Context.sol\":666:676  msg.sender */\n      caller\n        /* \"lib/utils/Context.sol\":659:676  return msg.sender */\n      swap1\n      pop\n        /* \"lib/utils/Context.sol\":587:683  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"lib/utils/math/SafeMath.sol\":3767:3863  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_104:\n        /* \"lib/utils/math/SafeMath.sol\":3825:3832  uint256 */\n      0x00\n        /* \"lib/utils/math/SafeMath.sol\":3855:3856  b */\n      dup2\n        /* \"lib/utils/math/SafeMath.sol\":3851:3852  a */\n      dup4\n        /* \"lib/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"lib/utils/math/SafeMath.sol\":3844:3856  return a / b */\n      swap1\n      pop\n        /* \"lib/utils/math/SafeMath.sol\":3767:3863  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/utils/math/SafeMath.sol\":3382:3478  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"lib/utils/math/SafeMath.sol\":3440:3447  uint256 */\n      0x00\n        /* \"lib/utils/math/SafeMath.sol\":3470:3471  b */\n      dup2\n        /* \"lib/utils/math/SafeMath.sol\":3466:3467  a */\n      dup4\n        /* \"lib/utils/math/SafeMath.sol\":3466:3471  a * b */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"lib/utils/math/SafeMath.sol\":3459:3471  return a * b */\n      swap1\n      pop\n        /* \"lib/utils/math/SafeMath.sol\":3382:3478  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/access/Ownable.sol\":2216:2403  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_134:\n        /* \"lib/access/Ownable.sol\":2289:2305  address oldOwner */\n      0x00\n        /* \"lib/access/Ownable.sol\":2308:2314  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/access/Ownable.sol\":2289:2314  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"lib/access/Ownable.sol\":2333:2341  newOwner */\n      dup2\n        /* \"lib/access/Ownable.sol\":2324:2330  _owner */\n      0x00\n      dup1\n        /* \"lib/access/Ownable.sol\":2324:2341  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lib/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"lib/access/Ownable.sol\":2356:2396  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/access/Ownable.sol\":2377:2385  oldOwner */\n      dup2\n        /* \"lib/access/Ownable.sol\":2356:2396  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"lib/access/Ownable.sol\":2279:2403  {... */\n      pop\n        /* \"lib/access/Ownable.sol\":2216:2403  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_158:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_159:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_160:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_161:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_199\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_160\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:693   */\n    tag_162:\n        /* \"#utility.yul\":634:641   */\n      0x00\n        /* \"#utility.yul\":663:687   */\n      tag_201\n        /* \"#utility.yul\":681:686   */\n      dup3\n        /* \"#utility.yul\":663:687   */\n      tag_161\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":652:687   */\n      swap1\n      pop\n        /* \"#utility.yul\":568:693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":699:879   */\n    tag_163:\n        /* \"#utility.yul\":801:854   */\n      tag_203\n        /* \"#utility.yul\":848:853   */\n      dup2\n        /* \"#utility.yul\":801:854   */\n      tag_162\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":794:799   */\n      dup2\n        /* \"#utility.yul\":791:855   */\n      eq\n        /* \"#utility.yul\":781:873   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":869:870   */\n      0x00\n        /* \"#utility.yul\":866:867   */\n      dup1\n        /* \"#utility.yul\":859:871   */\n      revert\n        /* \"#utility.yul\":781:873   */\n    tag_204:\n        /* \"#utility.yul\":699:879   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":885:1082   */\n    tag_164:\n        /* \"#utility.yul\":960:965   */\n      0x00\n        /* \"#utility.yul\":998:1004   */\n      dup2\n        /* \"#utility.yul\":985:1005   */\n      calldataload\n        /* \"#utility.yul\":976:1005   */\n      swap1\n      pop\n        /* \"#utility.yul\":1014:1076   */\n      tag_206\n        /* \"#utility.yul\":1070:1075   */\n      dup2\n        /* \"#utility.yul\":1014:1076   */\n      tag_163\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":885:1082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1088:1475   */\n    tag_18:\n        /* \"#utility.yul\":1176:1182   */\n      0x00\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1213:1222   */\n      dup3\n        /* \"#utility.yul\":1204:1211   */\n      dup5\n        /* \"#utility.yul\":1200:1223   */\n      sub\n        /* \"#utility.yul\":1196:1228   */\n      slt\n        /* \"#utility.yul\":1193:1312   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1231:1310   */\n      tag_209\n      tag_158\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1193:1312   */\n    tag_208:\n        /* \"#utility.yul\":1351:1352   */\n      0x00\n        /* \"#utility.yul\":1376:1458   */\n      tag_210\n        /* \"#utility.yul\":1450:1457   */\n      dup5\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup6\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1376:1458   */\n      tag_164\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1366:1458   */\n      swap2\n      pop\n        /* \"#utility.yul\":1322:1468   */\n      pop\n        /* \"#utility.yul\":1088:1475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1481:1557   */\n    tag_165:\n        /* \"#utility.yul\":1517:1524   */\n      0x00\n        /* \"#utility.yul\":1546:1551   */\n      dup2\n        /* \"#utility.yul\":1535:1551   */\n      swap1\n      pop\n        /* \"#utility.yul\":1481:1557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1563:1678   */\n    tag_166:\n        /* \"#utility.yul\":1648:1671   */\n      tag_213\n        /* \"#utility.yul\":1665:1670   */\n      dup2\n        /* \"#utility.yul\":1648:1671   */\n      tag_165\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1643:1646   */\n      dup3\n        /* \"#utility.yul\":1636:1672   */\n      mstore\n        /* \"#utility.yul\":1563:1678   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1684:1902   */\n    tag_21:\n        /* \"#utility.yul\":1775:1779   */\n      0x00\n        /* \"#utility.yul\":1813:1815   */\n      0x20\n        /* \"#utility.yul\":1802:1811   */\n      dup3\n        /* \"#utility.yul\":1798:1816   */\n      add\n        /* \"#utility.yul\":1790:1816   */\n      swap1\n      pop\n        /* \"#utility.yul\":1826:1895   */\n      tag_215\n        /* \"#utility.yul\":1892:1893   */\n      0x00\n        /* \"#utility.yul\":1881:1890   */\n      dup4\n        /* \"#utility.yul\":1877:1894   */\n      add\n        /* \"#utility.yul\":1868:1874   */\n      dup5\n        /* \"#utility.yul\":1826:1895   */\n      tag_166\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1684:1902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1908:2030   */\n    tag_167:\n        /* \"#utility.yul\":1981:2005   */\n      tag_217\n        /* \"#utility.yul\":1999:2004   */\n      dup2\n        /* \"#utility.yul\":1981:2005   */\n      tag_161\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1974:1979   */\n      dup2\n        /* \"#utility.yul\":1971:2006   */\n      eq\n        /* \"#utility.yul\":1961:2024   */\n      tag_218\n      jumpi\n        /* \"#utility.yul\":2020:2021   */\n      0x00\n        /* \"#utility.yul\":2017:2018   */\n      dup1\n        /* \"#utility.yul\":2010:2022   */\n      revert\n        /* \"#utility.yul\":1961:2024   */\n    tag_218:\n        /* \"#utility.yul\":1908:2030   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2036:2175   */\n    tag_168:\n        /* \"#utility.yul\":2082:2087   */\n      0x00\n        /* \"#utility.yul\":2120:2126   */\n      dup2\n        /* \"#utility.yul\":2107:2127   */\n      calldataload\n        /* \"#utility.yul\":2098:2127   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2169   */\n      tag_220\n        /* \"#utility.yul\":2163:2168   */\n      dup2\n        /* \"#utility.yul\":2136:2169   */\n      tag_167\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2036:2175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2181:2258   */\n    tag_169:\n        /* \"#utility.yul\":2218:2225   */\n      0x00\n        /* \"#utility.yul\":2247:2252   */\n      dup2\n        /* \"#utility.yul\":2236:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2181:2258   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2264:2386   */\n    tag_170:\n        /* \"#utility.yul\":2337:2361   */\n      tag_223\n        /* \"#utility.yul\":2355:2360   */\n      dup2\n        /* \"#utility.yul\":2337:2361   */\n      tag_169\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2330:2335   */\n      dup2\n        /* \"#utility.yul\":2327:2362   */\n      eq\n        /* \"#utility.yul\":2317:2380   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":2376:2377   */\n      0x00\n        /* \"#utility.yul\":2373:2374   */\n      dup1\n        /* \"#utility.yul\":2366:2378   */\n      revert\n        /* \"#utility.yul\":2317:2380   */\n    tag_224:\n        /* \"#utility.yul\":2264:2386   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2392:2531   */\n    tag_171:\n        /* \"#utility.yul\":2438:2443   */\n      0x00\n        /* \"#utility.yul\":2476:2482   */\n      dup2\n        /* \"#utility.yul\":2463:2483   */\n      calldataload\n        /* \"#utility.yul\":2454:2483   */\n      swap1\n      pop\n        /* \"#utility.yul\":2492:2525   */\n      tag_226\n        /* \"#utility.yul\":2519:2524   */\n      dup2\n        /* \"#utility.yul\":2492:2525   */\n      tag_170\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2392:2531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2537:3156   */\n    tag_24:\n        /* \"#utility.yul\":2614:2620   */\n      0x00\n        /* \"#utility.yul\":2622:2628   */\n      dup1\n        /* \"#utility.yul\":2630:2636   */\n      0x00\n        /* \"#utility.yul\":2679:2681   */\n      0x60\n        /* \"#utility.yul\":2667:2676   */\n      dup5\n        /* \"#utility.yul\":2658:2665   */\n      dup7\n        /* \"#utility.yul\":2654:2677   */\n      sub\n        /* \"#utility.yul\":2650:2682   */\n      slt\n        /* \"#utility.yul\":2647:2766   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":2685:2764   */\n      tag_229\n      tag_158\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2647:2766   */\n    tag_228:\n        /* \"#utility.yul\":2805:2806   */\n      0x00\n        /* \"#utility.yul\":2830:2883   */\n      tag_230\n        /* \"#utility.yul\":2875:2882   */\n      dup7\n        /* \"#utility.yul\":2866:2872   */\n      dup3\n        /* \"#utility.yul\":2855:2864   */\n      dup8\n        /* \"#utility.yul\":2851:2873   */\n      add\n        /* \"#utility.yul\":2830:2883   */\n      tag_168\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2820:2883   */\n      swap4\n      pop\n        /* \"#utility.yul\":2776:2893   */\n      pop\n        /* \"#utility.yul\":2932:2934   */\n      0x20\n        /* \"#utility.yul\":2958:3011   */\n      tag_231\n        /* \"#utility.yul\":3003:3010   */\n      dup7\n        /* \"#utility.yul\":2994:3000   */\n      dup3\n        /* \"#utility.yul\":2983:2992   */\n      dup8\n        /* \"#utility.yul\":2979:3001   */\n      add\n        /* \"#utility.yul\":2958:3011   */\n      tag_168\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2948:3011   */\n      swap3\n      pop\n        /* \"#utility.yul\":2903:3021   */\n      pop\n        /* \"#utility.yul\":3060:3062   */\n      0x40\n        /* \"#utility.yul\":3086:3139   */\n      tag_232\n        /* \"#utility.yul\":3131:3138   */\n      dup7\n        /* \"#utility.yul\":3122:3128   */\n      dup3\n        /* \"#utility.yul\":3111:3120   */\n      dup8\n        /* \"#utility.yul\":3107:3129   */\n      add\n        /* \"#utility.yul\":3086:3139   */\n      tag_171\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3076:3139   */\n      swap2\n      pop\n        /* \"#utility.yul\":3031:3149   */\n      pop\n        /* \"#utility.yul\":2537:3156   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3162:3636   */\n    tag_28:\n        /* \"#utility.yul\":3230:3236   */\n      0x00\n        /* \"#utility.yul\":3238:3244   */\n      dup1\n        /* \"#utility.yul\":3287:3289   */\n      0x40\n        /* \"#utility.yul\":3275:3284   */\n      dup4\n        /* \"#utility.yul\":3266:3273   */\n      dup6\n        /* \"#utility.yul\":3262:3285   */\n      sub\n        /* \"#utility.yul\":3258:3290   */\n      slt\n        /* \"#utility.yul\":3255:3374   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":3293:3372   */\n      tag_235\n      tag_158\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3255:3374   */\n    tag_234:\n        /* \"#utility.yul\":3413:3414   */\n      0x00\n        /* \"#utility.yul\":3438:3491   */\n      tag_236\n        /* \"#utility.yul\":3483:3490   */\n      dup6\n        /* \"#utility.yul\":3474:3480   */\n      dup3\n        /* \"#utility.yul\":3463:3472   */\n      dup7\n        /* \"#utility.yul\":3459:3481   */\n      add\n        /* \"#utility.yul\":3438:3491   */\n      tag_168\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3428:3491   */\n      swap3\n      pop\n        /* \"#utility.yul\":3384:3501   */\n      pop\n        /* \"#utility.yul\":3540:3542   */\n      0x20\n        /* \"#utility.yul\":3566:3619   */\n      tag_237\n        /* \"#utility.yul\":3611:3618   */\n      dup6\n        /* \"#utility.yul\":3602:3608   */\n      dup3\n        /* \"#utility.yul\":3591:3600   */\n      dup7\n        /* \"#utility.yul\":3587:3609   */\n      add\n        /* \"#utility.yul\":3566:3619   */\n      tag_168\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3556:3619   */\n      swap2\n      pop\n        /* \"#utility.yul\":3511:3629   */\n      pop\n        /* \"#utility.yul\":3162:3636   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3642:3759   */\n    tag_172:\n        /* \"#utility.yul\":3751:3752   */\n      0x00\n        /* \"#utility.yul\":3748:3749   */\n      dup1\n        /* \"#utility.yul\":3741:3753   */\n      revert\n        /* \"#utility.yul\":3765:3882   */\n    tag_173:\n        /* \"#utility.yul\":3874:3875   */\n      0x00\n        /* \"#utility.yul\":3871:3872   */\n      dup1\n        /* \"#utility.yul\":3864:3876   */\n      revert\n        /* \"#utility.yul\":3888:4005   */\n    tag_174:\n        /* \"#utility.yul\":3997:3998   */\n      0x00\n        /* \"#utility.yul\":3994:3995   */\n      dup1\n        /* \"#utility.yul\":3987:3999   */\n      revert\n        /* \"#utility.yul\":4028:4596   */\n    tag_175:\n        /* \"#utility.yul\":4101:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4161:4164   */\n      dup4\n        /* \"#utility.yul\":4154:4158   */\n      0x1f\n        /* \"#utility.yul\":4146:4152   */\n      dup5\n        /* \"#utility.yul\":4142:4159   */\n      add\n        /* \"#utility.yul\":4138:4165   */\n      slt\n        /* \"#utility.yul\":4128:4250   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":4169:4248   */\n      tag_243\n      tag_172\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4128:4250   */\n    tag_242:\n        /* \"#utility.yul\":4282:4288   */\n      dup3\n        /* \"#utility.yul\":4269:4289   */\n      calldataload\n        /* \"#utility.yul\":4259:4289   */\n      swap1\n      pop\n        /* \"#utility.yul\":4312:4330   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4304:4310   */\n      dup2\n        /* \"#utility.yul\":4301:4331   */\n      gt\n        /* \"#utility.yul\":4298:4415   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":4334:4413   */\n      tag_245\n      tag_173\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4298:4415   */\n    tag_244:\n        /* \"#utility.yul\":4448:4452   */\n      0x20\n        /* \"#utility.yul\":4440:4446   */\n      dup4\n        /* \"#utility.yul\":4436:4453   */\n      add\n        /* \"#utility.yul\":4424:4453   */\n      swap2\n      pop\n        /* \"#utility.yul\":4502:4505   */\n      dup4\n        /* \"#utility.yul\":4494:4498   */\n      0x20\n        /* \"#utility.yul\":4486:4492   */\n      dup3\n        /* \"#utility.yul\":4482:4499   */\n      mul\n        /* \"#utility.yul\":4472:4480   */\n      dup4\n        /* \"#utility.yul\":4468:4500   */\n      add\n        /* \"#utility.yul\":4465:4506   */\n      gt\n        /* \"#utility.yul\":4462:4590   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":4509:4588   */\n      tag_247\n      tag_174\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4462:4590   */\n    tag_246:\n        /* \"#utility.yul\":4028:4596   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4602:5536   */\n    tag_33:\n        /* \"#utility.yul\":4724:4730   */\n      0x00\n        /* \"#utility.yul\":4732:4738   */\n      dup1\n        /* \"#utility.yul\":4740:4746   */\n      0x00\n        /* \"#utility.yul\":4748:4754   */\n      dup1\n        /* \"#utility.yul\":4797:4799   */\n      0x40\n        /* \"#utility.yul\":4785:4794   */\n      dup6\n        /* \"#utility.yul\":4776:4783   */\n      dup8\n        /* \"#utility.yul\":4772:4795   */\n      sub\n        /* \"#utility.yul\":4768:4800   */\n      slt\n        /* \"#utility.yul\":4765:4884   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":4803:4882   */\n      tag_250\n      tag_158\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4765:4884   */\n    tag_249:\n        /* \"#utility.yul\":4951:4952   */\n      0x00\n        /* \"#utility.yul\":4940:4949   */\n      dup6\n        /* \"#utility.yul\":4936:4953   */\n      add\n        /* \"#utility.yul\":4923:4954   */\n      calldataload\n        /* \"#utility.yul\":4981:4999   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4973:4979   */\n      dup2\n        /* \"#utility.yul\":4970:5000   */\n      gt\n        /* \"#utility.yul\":4967:5084   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":5003:5082   */\n      tag_252\n      tag_159\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4967:5084   */\n    tag_251:\n        /* \"#utility.yul\":5116:5196   */\n      tag_253\n        /* \"#utility.yul\":5188:5195   */\n      dup8\n        /* \"#utility.yul\":5179:5185   */\n      dup3\n        /* \"#utility.yul\":5168:5177   */\n      dup9\n        /* \"#utility.yul\":5164:5186   */\n      add\n        /* \"#utility.yul\":5116:5196   */\n      tag_175\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5098:5196   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":4894:5206   */\n      pop\n        /* \"#utility.yul\":5273:5275   */\n      0x20\n        /* \"#utility.yul\":5262:5271   */\n      dup6\n        /* \"#utility.yul\":5258:5276   */\n      add\n        /* \"#utility.yul\":5245:5277   */\n      calldataload\n        /* \"#utility.yul\":5304:5322   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5296:5302   */\n      dup2\n        /* \"#utility.yul\":5293:5323   */\n      gt\n        /* \"#utility.yul\":5290:5407   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":5326:5405   */\n      tag_255\n      tag_159\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5290:5407   */\n    tag_254:\n        /* \"#utility.yul\":5439:5519   */\n      tag_256\n        /* \"#utility.yul\":5511:5518   */\n      dup8\n        /* \"#utility.yul\":5502:5508   */\n      dup3\n        /* \"#utility.yul\":5491:5500   */\n      dup9\n        /* \"#utility.yul\":5487:5509   */\n      add\n        /* \"#utility.yul\":5439:5519   */\n      tag_175\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5421:5519   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":5216:5529   */\n      pop\n        /* \"#utility.yul\":4602:5536   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5542:5660   */\n    tag_176:\n        /* \"#utility.yul\":5629:5653   */\n      tag_258\n        /* \"#utility.yul\":5647:5652   */\n      dup2\n        /* \"#utility.yul\":5629:5653   */\n      tag_169\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5624:5627   */\n      dup3\n        /* \"#utility.yul\":5617:5654   */\n      mstore\n        /* \"#utility.yul\":5542:5660   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5666:5888   */\n    tag_42:\n        /* \"#utility.yul\":5759:5763   */\n      0x00\n        /* \"#utility.yul\":5797:5799   */\n      0x20\n        /* \"#utility.yul\":5786:5795   */\n      dup3\n        /* \"#utility.yul\":5782:5800   */\n      add\n        /* \"#utility.yul\":5774:5800   */\n      swap1\n      pop\n        /* \"#utility.yul\":5810:5881   */\n      tag_260\n        /* \"#utility.yul\":5878:5879   */\n      0x00\n        /* \"#utility.yul\":5867:5876   */\n      dup4\n        /* \"#utility.yul\":5863:5880   */\n      add\n        /* \"#utility.yul\":5854:5860   */\n      dup5\n        /* \"#utility.yul\":5810:5881   */\n      tag_176\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5666:5888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5894:6223   */\n    tag_47:\n        /* \"#utility.yul\":5953:5959   */\n      0x00\n        /* \"#utility.yul\":6002:6004   */\n      0x20\n        /* \"#utility.yul\":5990:5999   */\n      dup3\n        /* \"#utility.yul\":5981:5988   */\n      dup5\n        /* \"#utility.yul\":5977:6000   */\n      sub\n        /* \"#utility.yul\":5973:6005   */\n      slt\n        /* \"#utility.yul\":5970:6089   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":6008:6087   */\n      tag_263\n      tag_158\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5970:6089   */\n    tag_262:\n        /* \"#utility.yul\":6128:6129   */\n      0x00\n        /* \"#utility.yul\":6153:6206   */\n      tag_264\n        /* \"#utility.yul\":6198:6205   */\n      dup5\n        /* \"#utility.yul\":6189:6195   */\n      dup3\n        /* \"#utility.yul\":6178:6187   */\n      dup6\n        /* \"#utility.yul\":6174:6196   */\n      add\n        /* \"#utility.yul\":6153:6206   */\n      tag_168\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6143:6206   */\n      swap2\n      pop\n        /* \"#utility.yul\":6099:6216   */\n      pop\n        /* \"#utility.yul\":5894:6223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6229:6347   */\n    tag_177:\n        /* \"#utility.yul\":6316:6340   */\n      tag_266\n        /* \"#utility.yul\":6334:6339   */\n      dup2\n        /* \"#utility.yul\":6316:6340   */\n      tag_161\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6311:6314   */\n      dup3\n        /* \"#utility.yul\":6304:6341   */\n      mstore\n        /* \"#utility.yul\":6229:6347   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6353:6575   */\n    tag_53:\n        /* \"#utility.yul\":6446:6450   */\n      0x00\n        /* \"#utility.yul\":6484:6486   */\n      0x20\n        /* \"#utility.yul\":6473:6482   */\n      dup3\n        /* \"#utility.yul\":6469:6487   */\n      add\n        /* \"#utility.yul\":6461:6487   */\n      swap1\n      pop\n        /* \"#utility.yul\":6497:6568   */\n      tag_268\n        /* \"#utility.yul\":6565:6566   */\n      0x00\n        /* \"#utility.yul\":6554:6563   */\n      dup4\n        /* \"#utility.yul\":6550:6567   */\n      add\n        /* \"#utility.yul\":6541:6547   */\n      dup5\n        /* \"#utility.yul\":6497:6568   */\n      tag_177\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6353:6575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6581:6686   */\n    tag_178:\n        /* \"#utility.yul\":6617:6624   */\n      0x00\n        /* \"#utility.yul\":6657:6679   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":6650:6655   */\n      dup3\n        /* \"#utility.yul\":6646:6680   */\n      and\n        /* \"#utility.yul\":6635:6680   */\n      swap1\n      pop\n        /* \"#utility.yul\":6581:6686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6692:6812   */\n    tag_179:\n        /* \"#utility.yul\":6764:6787   */\n      tag_271\n        /* \"#utility.yul\":6781:6786   */\n      dup2\n        /* \"#utility.yul\":6764:6787   */\n      tag_178\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6757:6762   */\n      dup2\n        /* \"#utility.yul\":6754:6788   */\n      eq\n        /* \"#utility.yul\":6744:6806   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":6802:6803   */\n      0x00\n        /* \"#utility.yul\":6799:6800   */\n      dup1\n        /* \"#utility.yul\":6792:6804   */\n      revert\n        /* \"#utility.yul\":6744:6806   */\n    tag_272:\n        /* \"#utility.yul\":6692:6812   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6818:6959   */\n    tag_180:\n        /* \"#utility.yul\":6874:6879   */\n      0x00\n        /* \"#utility.yul\":6905:6911   */\n      dup2\n        /* \"#utility.yul\":6899:6912   */\n      mload\n        /* \"#utility.yul\":6890:6912   */\n      swap1\n      pop\n        /* \"#utility.yul\":6921:6953   */\n      tag_274\n        /* \"#utility.yul\":6947:6952   */\n      dup2\n        /* \"#utility.yul\":6921:6953   */\n      tag_179\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6818:6959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6965:7085   */\n    tag_181:\n        /* \"#utility.yul\":7037:7060   */\n      tag_276\n        /* \"#utility.yul\":7054:7059   */\n      dup2\n        /* \"#utility.yul\":7037:7060   */\n      tag_165\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7030:7035   */\n      dup2\n        /* \"#utility.yul\":7027:7061   */\n      eq\n        /* \"#utility.yul\":7017:7079   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":7075:7076   */\n      0x00\n        /* \"#utility.yul\":7072:7073   */\n      dup1\n        /* \"#utility.yul\":7065:7077   */\n      revert\n        /* \"#utility.yul\":7017:7079   */\n    tag_277:\n        /* \"#utility.yul\":6965:7085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7091:7232   */\n    tag_182:\n        /* \"#utility.yul\":7147:7152   */\n      0x00\n        /* \"#utility.yul\":7178:7184   */\n      dup2\n        /* \"#utility.yul\":7172:7185   */\n      mload\n        /* \"#utility.yul\":7163:7185   */\n      swap1\n      pop\n        /* \"#utility.yul\":7194:7226   */\n      tag_279\n        /* \"#utility.yul\":7220:7225   */\n      dup2\n        /* \"#utility.yul\":7194:7226   */\n      tag_181\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7091:7232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7238:7381   */\n    tag_183:\n        /* \"#utility.yul\":7295:7300   */\n      0x00\n        /* \"#utility.yul\":7326:7332   */\n      dup2\n        /* \"#utility.yul\":7320:7333   */\n      mload\n        /* \"#utility.yul\":7311:7333   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7375   */\n      tag_281\n        /* \"#utility.yul\":7369:7374   */\n      dup2\n        /* \"#utility.yul\":7342:7375   */\n      tag_170\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7238:7381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7387:8358   */\n    tag_68:\n        /* \"#utility.yul\":7490:7496   */\n      0x00\n        /* \"#utility.yul\":7498:7504   */\n      dup1\n        /* \"#utility.yul\":7506:7512   */\n      0x00\n        /* \"#utility.yul\":7514:7520   */\n      dup1\n        /* \"#utility.yul\":7522:7528   */\n      0x00\n        /* \"#utility.yul\":7571:7574   */\n      0xa0\n        /* \"#utility.yul\":7559:7568   */\n      dup7\n        /* \"#utility.yul\":7550:7557   */\n      dup9\n        /* \"#utility.yul\":7546:7569   */\n      sub\n        /* \"#utility.yul\":7542:7575   */\n      slt\n        /* \"#utility.yul\":7539:7659   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":7578:7657   */\n      tag_284\n      tag_158\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7539:7659   */\n    tag_283:\n        /* \"#utility.yul\":7698:7699   */\n      0x00\n        /* \"#utility.yul\":7723:7786   */\n      tag_285\n        /* \"#utility.yul\":7778:7785   */\n      dup9\n        /* \"#utility.yul\":7769:7775   */\n      dup3\n        /* \"#utility.yul\":7758:7767   */\n      dup10\n        /* \"#utility.yul\":7754:7776   */\n      add\n        /* \"#utility.yul\":7723:7786   */\n      tag_180\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7713:7786   */\n      swap6\n      pop\n        /* \"#utility.yul\":7669:7796   */\n      pop\n        /* \"#utility.yul\":7835:7837   */\n      0x20\n        /* \"#utility.yul\":7861:7924   */\n      tag_286\n        /* \"#utility.yul\":7916:7923   */\n      dup9\n        /* \"#utility.yul\":7907:7913   */\n      dup3\n        /* \"#utility.yul\":7896:7905   */\n      dup10\n        /* \"#utility.yul\":7892:7914   */\n      add\n        /* \"#utility.yul\":7861:7924   */\n      tag_182\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7851:7924   */\n      swap5\n      pop\n        /* \"#utility.yul\":7806:7934   */\n      pop\n        /* \"#utility.yul\":7973:7975   */\n      0x40\n        /* \"#utility.yul\":7999:8063   */\n      tag_287\n        /* \"#utility.yul\":8055:8062   */\n      dup9\n        /* \"#utility.yul\":8046:8052   */\n      dup3\n        /* \"#utility.yul\":8035:8044   */\n      dup10\n        /* \"#utility.yul\":8031:8053   */\n      add\n        /* \"#utility.yul\":7999:8063   */\n      tag_183\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7989:8063   */\n      swap4\n      pop\n        /* \"#utility.yul\":7944:8073   */\n      pop\n        /* \"#utility.yul\":8112:8114   */\n      0x60\n        /* \"#utility.yul\":8138:8202   */\n      tag_288\n        /* \"#utility.yul\":8194:8201   */\n      dup9\n        /* \"#utility.yul\":8185:8191   */\n      dup3\n        /* \"#utility.yul\":8174:8183   */\n      dup10\n        /* \"#utility.yul\":8170:8192   */\n      add\n        /* \"#utility.yul\":8138:8202   */\n      tag_183\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8128:8202   */\n      swap3\n      pop\n        /* \"#utility.yul\":8083:8212   */\n      pop\n        /* \"#utility.yul\":8251:8254   */\n      0x80\n        /* \"#utility.yul\":8278:8341   */\n      tag_289\n        /* \"#utility.yul\":8333:8340   */\n      dup9\n        /* \"#utility.yul\":8324:8330   */\n      dup3\n        /* \"#utility.yul\":8313:8322   */\n      dup10\n        /* \"#utility.yul\":8309:8331   */\n      add\n        /* \"#utility.yul\":8278:8341   */\n      tag_180\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8268:8341   */\n      swap2\n      pop\n        /* \"#utility.yul\":8222:8351   */\n      pop\n        /* \"#utility.yul\":7387:8358   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8364:8533   */\n    tag_184:\n        /* \"#utility.yul\":8448:8459   */\n      0x00\n        /* \"#utility.yul\":8482:8488   */\n      dup3\n        /* \"#utility.yul\":8477:8480   */\n      dup3\n        /* \"#utility.yul\":8470:8489   */\n      mstore\n        /* \"#utility.yul\":8522:8526   */\n      0x20\n        /* \"#utility.yul\":8517:8520   */\n      dup3\n        /* \"#utility.yul\":8513:8527   */\n      add\n        /* \"#utility.yul\":8498:8527   */\n      swap1\n      pop\n        /* \"#utility.yul\":8364:8533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8539:8721   */\n    tag_185:\n        /* \"#utility.yul\":8679:8713   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8675:8676   */\n      0x00\n        /* \"#utility.yul\":8667:8673   */\n      dup3\n        /* \"#utility.yul\":8663:8677   */\n      add\n        /* \"#utility.yul\":8656:8714   */\n      mstore\n        /* \"#utility.yul\":8539:8721   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8727:9093   */\n    tag_186:\n        /* \"#utility.yul\":8869:8872   */\n      0x00\n        /* \"#utility.yul\":8890:8957   */\n      tag_293\n        /* \"#utility.yul\":8954:8956   */\n      0x20\n        /* \"#utility.yul\":8949:8952   */\n      dup4\n        /* \"#utility.yul\":8890:8957   */\n      tag_184\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8883:8957   */\n      swap2\n      pop\n        /* \"#utility.yul\":8966:9059   */\n      tag_294\n        /* \"#utility.yul\":9055:9058   */\n      dup3\n        /* \"#utility.yul\":8966:9059   */\n      tag_185\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9084:9086   */\n      0x20\n        /* \"#utility.yul\":9079:9082   */\n      dup3\n        /* \"#utility.yul\":9075:9087   */\n      add\n        /* \"#utility.yul\":9068:9087   */\n      swap1\n      pop\n        /* \"#utility.yul\":8727:9093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9099:9518   */\n    tag_79:\n        /* \"#utility.yul\":9265:9269   */\n      0x00\n        /* \"#utility.yul\":9303:9305   */\n      0x20\n        /* \"#utility.yul\":9292:9301   */\n      dup3\n        /* \"#utility.yul\":9288:9306   */\n      add\n        /* \"#utility.yul\":9280:9306   */\n      swap1\n      pop\n        /* \"#utility.yul\":9352:9361   */\n      dup2\n        /* \"#utility.yul\":9346:9350   */\n      dup2\n        /* \"#utility.yul\":9342:9362   */\n      sub\n        /* \"#utility.yul\":9338:9339   */\n      0x00\n        /* \"#utility.yul\":9327:9336   */\n      dup4\n        /* \"#utility.yul\":9323:9340   */\n      add\n        /* \"#utility.yul\":9316:9363   */\n      mstore\n        /* \"#utility.yul\":9380:9511   */\n      tag_296\n        /* \"#utility.yul\":9506:9510   */\n      dup2\n        /* \"#utility.yul\":9380:9511   */\n      tag_186\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9372:9511   */\n      swap1\n      pop\n        /* \"#utility.yul\":9099:9518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9524:9700   */\n    tag_187:\n        /* \"#utility.yul\":9664:9692   */\n      0x494e434f4e53495354454e545f504152414d535f4c454e475448000000000000\n        /* \"#utility.yul\":9660:9661   */\n      0x00\n        /* \"#utility.yul\":9652:9658   */\n      dup3\n        /* \"#utility.yul\":9648:9662   */\n      add\n        /* \"#utility.yul\":9641:9693   */\n      mstore\n        /* \"#utility.yul\":9524:9700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9706:10072   */\n    tag_188:\n        /* \"#utility.yul\":9848:9851   */\n      0x00\n        /* \"#utility.yul\":9869:9936   */\n      tag_299\n        /* \"#utility.yul\":9933:9935   */\n      0x1a\n        /* \"#utility.yul\":9928:9931   */\n      dup4\n        /* \"#utility.yul\":9869:9936   */\n      tag_184\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9862:9936   */\n      swap2\n      pop\n        /* \"#utility.yul\":9945:10038   */\n      tag_300\n        /* \"#utility.yul\":10034:10037   */\n      dup3\n        /* \"#utility.yul\":9945:10038   */\n      tag_187\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":10063:10065   */\n      0x20\n        /* \"#utility.yul\":10058:10061   */\n      dup3\n        /* \"#utility.yul\":10054:10066   */\n      add\n        /* \"#utility.yul\":10047:10066   */\n      swap1\n      pop\n        /* \"#utility.yul\":9706:10072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10078:10497   */\n    tag_83:\n        /* \"#utility.yul\":10244:10248   */\n      0x00\n        /* \"#utility.yul\":10282:10284   */\n      0x20\n        /* \"#utility.yul\":10271:10280   */\n      dup3\n        /* \"#utility.yul\":10267:10285   */\n      add\n        /* \"#utility.yul\":10259:10285   */\n      swap1\n      pop\n        /* \"#utility.yul\":10331:10340   */\n      dup2\n        /* \"#utility.yul\":10325:10329   */\n      dup2\n        /* \"#utility.yul\":10321:10341   */\n      sub\n        /* \"#utility.yul\":10317:10318   */\n      0x00\n        /* \"#utility.yul\":10306:10315   */\n      dup4\n        /* \"#utility.yul\":10302:10319   */\n      add\n        /* \"#utility.yul\":10295:10342   */\n      mstore\n        /* \"#utility.yul\":10359:10490   */\n      tag_302\n        /* \"#utility.yul\":10485:10489   */\n      dup2\n        /* \"#utility.yul\":10359:10490   */\n      tag_188\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10351:10490   */\n      swap1\n      pop\n        /* \"#utility.yul\":10078:10497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10503:10683   */\n    tag_89:\n        /* \"#utility.yul\":10551:10628   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10548:10549   */\n      0x00\n        /* \"#utility.yul\":10541:10629   */\n      mstore\n        /* \"#utility.yul\":10648:10652   */\n      0x32\n        /* \"#utility.yul\":10645:10646   */\n      0x04\n        /* \"#utility.yul\":10638:10653   */\n      mstore\n        /* \"#utility.yul\":10672:10676   */\n      0x24\n        /* \"#utility.yul\":10669:10670   */\n      0x00\n        /* \"#utility.yul\":10662:10677   */\n      revert\n        /* \"#utility.yul\":10689:10869   */\n    tag_189:\n        /* \"#utility.yul\":10737:10814   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10734:10735   */\n      0x00\n        /* \"#utility.yul\":10727:10815   */\n      mstore\n        /* \"#utility.yul\":10834:10838   */\n      0x11\n        /* \"#utility.yul\":10831:10832   */\n      0x04\n        /* \"#utility.yul\":10824:10839   */\n      mstore\n        /* \"#utility.yul\":10858:10862   */\n      0x24\n        /* \"#utility.yul\":10855:10856   */\n      0x00\n        /* \"#utility.yul\":10848:10863   */\n      revert\n        /* \"#utility.yul\":10875:11108   */\n    tag_101:\n        /* \"#utility.yul\":10914:10917   */\n      0x00\n        /* \"#utility.yul\":10937:10961   */\n      tag_306\n        /* \"#utility.yul\":10955:10960   */\n      dup3\n        /* \"#utility.yul\":10937:10961   */\n      tag_169\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10928:10961   */\n      swap2\n      pop\n        /* \"#utility.yul\":10983:11049   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10976:10981   */\n      dup3\n        /* \"#utility.yul\":10973:11050   */\n      sub\n        /* \"#utility.yul\":10970:11073   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":11053:11071   */\n      tag_308\n      tag_189\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10970:11073   */\n    tag_307:\n        /* \"#utility.yul\":11100:11101   */\n      0x01\n        /* \"#utility.yul\":11093:11098   */\n      dup3\n        /* \"#utility.yul\":11089:11102   */\n      add\n        /* \"#utility.yul\":11082:11102   */\n      swap1\n      pop\n        /* \"#utility.yul\":10875:11108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11114:11339   */\n    tag_190:\n        /* \"#utility.yul\":11254:11288   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11250:11251   */\n      0x00\n        /* \"#utility.yul\":11242:11248   */\n      dup3\n        /* \"#utility.yul\":11238:11252   */\n      add\n        /* \"#utility.yul\":11231:11289   */\n      mstore\n        /* \"#utility.yul\":11323:11331   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11318:11320   */\n      0x20\n        /* \"#utility.yul\":11310:11316   */\n      dup3\n        /* \"#utility.yul\":11306:11321   */\n      add\n        /* \"#utility.yul\":11299:11332   */\n      mstore\n        /* \"#utility.yul\":11114:11339   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11345:11711   */\n    tag_191:\n        /* \"#utility.yul\":11487:11490   */\n      0x00\n        /* \"#utility.yul\":11508:11575   */\n      tag_311\n        /* \"#utility.yul\":11572:11574   */\n      0x26\n        /* \"#utility.yul\":11567:11570   */\n      dup4\n        /* \"#utility.yul\":11508:11575   */\n      tag_184\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11501:11575   */\n      swap2\n      pop\n        /* \"#utility.yul\":11584:11677   */\n      tag_312\n        /* \"#utility.yul\":11673:11676   */\n      dup3\n        /* \"#utility.yul\":11584:11677   */\n      tag_190\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":11702:11704   */\n      0x40\n        /* \"#utility.yul\":11697:11700   */\n      dup3\n        /* \"#utility.yul\":11693:11705   */\n      add\n        /* \"#utility.yul\":11686:11705   */\n      swap1\n      pop\n        /* \"#utility.yul\":11345:11711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11717:12136   */\n    tag_147:\n        /* \"#utility.yul\":11883:11887   */\n      0x00\n        /* \"#utility.yul\":11921:11923   */\n      0x20\n        /* \"#utility.yul\":11910:11919   */\n      dup3\n        /* \"#utility.yul\":11906:11924   */\n      add\n        /* \"#utility.yul\":11898:11924   */\n      swap1\n      pop\n        /* \"#utility.yul\":11970:11979   */\n      dup2\n        /* \"#utility.yul\":11964:11968   */\n      dup2\n        /* \"#utility.yul\":11960:11980   */\n      sub\n        /* \"#utility.yul\":11956:11957   */\n      0x00\n        /* \"#utility.yul\":11945:11954   */\n      dup4\n        /* \"#utility.yul\":11941:11958   */\n      add\n        /* \"#utility.yul\":11934:11981   */\n      mstore\n        /* \"#utility.yul\":11998:12129   */\n      tag_314\n        /* \"#utility.yul\":12124:12128   */\n      dup2\n        /* \"#utility.yul\":11998:12129   */\n      tag_191\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11990:12129   */\n      swap1\n      pop\n        /* \"#utility.yul\":11717:12136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12142:12322   */\n    tag_192:\n        /* \"#utility.yul\":12190:12267   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12187:12188   */\n      0x00\n        /* \"#utility.yul\":12180:12268   */\n      mstore\n        /* \"#utility.yul\":12287:12291   */\n      0x12\n        /* \"#utility.yul\":12284:12285   */\n      0x04\n        /* \"#utility.yul\":12277:12292   */\n      mstore\n        /* \"#utility.yul\":12311:12315   */\n      0x24\n        /* \"#utility.yul\":12308:12309   */\n      0x00\n        /* \"#utility.yul\":12301:12316   */\n      revert\n        /* \"#utility.yul\":12328:12513   */\n    tag_152:\n        /* \"#utility.yul\":12368:12369   */\n      0x00\n        /* \"#utility.yul\":12385:12405   */\n      tag_317\n        /* \"#utility.yul\":12403:12404   */\n      dup3\n        /* \"#utility.yul\":12385:12405   */\n      tag_169\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":12380:12405   */\n      swap2\n      pop\n        /* \"#utility.yul\":12419:12439   */\n      tag_318\n        /* \"#utility.yul\":12437:12438   */\n      dup4\n        /* \"#utility.yul\":12419:12439   */\n      tag_169\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":12414:12439   */\n      swap3\n      pop\n        /* \"#utility.yul\":12458:12459   */\n      dup3\n        /* \"#utility.yul\":12448:12483   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":12463:12481   */\n      tag_320\n      tag_192\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12448:12483   */\n    tag_319:\n        /* \"#utility.yul\":12505:12506   */\n      dup3\n        /* \"#utility.yul\":12502:12503   */\n      dup3\n        /* \"#utility.yul\":12498:12507   */\n      div\n        /* \"#utility.yul\":12493:12507   */\n      swap1\n      pop\n        /* \"#utility.yul\":12328:12513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12519:12929   */\n    tag_155:\n        /* \"#utility.yul\":12559:12566   */\n      0x00\n        /* \"#utility.yul\":12582:12602   */\n      tag_322\n        /* \"#utility.yul\":12600:12601   */\n      dup3\n        /* \"#utility.yul\":12582:12602   */\n      tag_169\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12577:12602   */\n      swap2\n      pop\n        /* \"#utility.yul\":12616:12636   */\n      tag_323\n        /* \"#utility.yul\":12634:12635   */\n      dup4\n        /* \"#utility.yul\":12616:12636   */\n      tag_169\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12611:12636   */\n      swap3\n      pop\n        /* \"#utility.yul\":12671:12672   */\n      dup3\n        /* \"#utility.yul\":12668:12669   */\n      dup3\n        /* \"#utility.yul\":12664:12673   */\n      mul\n        /* \"#utility.yul\":12693:12723   */\n      tag_324\n        /* \"#utility.yul\":12711:12722   */\n      dup2\n        /* \"#utility.yul\":12693:12723   */\n      tag_169\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12682:12723   */\n      swap2\n      pop\n        /* \"#utility.yul\":12872:12873   */\n      dup3\n        /* \"#utility.yul\":12863:12870   */\n      dup3\n        /* \"#utility.yul\":12859:12874   */\n      div\n        /* \"#utility.yul\":12856:12857   */\n      dup5\n        /* \"#utility.yul\":12853:12875   */\n      eq\n        /* \"#utility.yul\":12833:12834   */\n      dup4\n        /* \"#utility.yul\":12826:12835   */\n      iszero\n        /* \"#utility.yul\":12806:12889   */\n      or\n        /* \"#utility.yul\":12783:12922   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":12902:12920   */\n      tag_326\n      tag_189\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":12783:12922   */\n    tag_325:\n        /* \"#utility.yul\":12567:12929   */\n      pop\n        /* \"#utility.yul\":12519:12929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c8e1b83740addfbd5738d716778813e79cae25f52b3a338dfa8d5516369b8c8e64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_525": {
									"entryPoint": null,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 273,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 281,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2350:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1298:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1336:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1270:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1275:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1286:11:4",
														"type": ""
													}
												],
												"src": "1202:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1483:67:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:4"
																	},
																	{
																		"hexValue": "556e696c656e6456323a205a45524f2041444452455353",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1517:25:4",
																		"type": "",
																		"value": "UnilendV2: ZERO ADDRESS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:49:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:49:4"
														}
													]
												},
												"name": "store_literal_in_memory_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1475:6:4",
														"type": ""
													}
												],
												"src": "1377:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1702:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1712:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1778:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:2:4",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1719:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1712:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1884:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f",
																	"nodeType": "YulIdentifier",
																	"src": "1795:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1795:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1795:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1897:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1908:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1913:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1904:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1897:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1690:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1698:3:4",
														"type": ""
													}
												],
												"src": "1556:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2099:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2109:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2121:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2132:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2117:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2117:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2109:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2156:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2167:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2152:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2152:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2175:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2181:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2171:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2171:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2145:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2145:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2201:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2335:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2209:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2209:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2201:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2079:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2094:4:4",
														"type": ""
													}
												],
												"src": "1928:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f(memPtr) {\n\n        mstore(add(memPtr, 0), \"UnilendV2: ZERO ADDRESS\")\n\n    }\n\n    function abi_encode_t_stringliteral_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200180338038062001803833981810160405281019062000037919062000247565b620000576200004b6200011160201b60201c565b6200011960201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c090620002da565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020f82620001e2565b9050919050565b620002218162000202565b81146200022d57600080fd5b50565b600081519050620002418162000216565b92915050565b60006020828403121562000260576200025f620001dd565b5b6000620002708482850162000230565b91505092915050565b600082825260208201905092915050565b7f556e696c656e6456323a205a45524f2041444452455353000000000000000000600082015250565b6000620002c260178362000279565b9150620002cf826200028a565b602082019050919050565b60006020820190508181036000830152620002f581620002b3565b9050919050565b6114f7806200030c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a61461019d5780637bc6c34e146101a75780638da5cb5b146101d7578063ad5c4648146101f5578063f2fde38b14610213578063f56730ac1461022f576100b4565b806316345f18146100b95780633176fce1146100e957806339c0f0c4146101055780633fbff512146101355780634cb3dc2e146101515780635b2e4dc51461016d575b600080fd5b6100d360048036038101906100ce9190610e43565b61025f565b6040516100e09190610e89565b60405180910390f35b61010360048036038101906100fe9190610f06565b6102e0565b005b61011f600480360381019061011a9190610f59565b610366565b60405161012c9190610e89565b60405180910390f35b61014f600480360381019061014a9190610ffe565b610482565b005b61016b60048036038101906101669190610f06565b6106e2565b005b61018760048036038101906101829190610f06565b6107fc565b604051610194919061108e565b60405180910390f35b6101a5610a33565b005b6101c160048036038101906101bc91906110a9565b610abb565b6040516101ce9190610e89565b60405180910390f35b6101df610b66565b6040516101ec91906110e5565b60405180910390f35b6101fd610b8f565b60405161020a91906110e5565b60405180910390f35b61022d600480360381019061022891906110a9565b610bb5565b005b61024960048036038101906102449190610f59565b610cac565b604051610256919061108e565b60405180910390f35b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190611183565b50505091505080915050919050565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561047057600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061047c565b670de0b6b3a764000090505b92915050565b61048a610cd1565b73ffffffffffffffffffffffffffffffffffffffff166104a8610b66565b73ffffffffffffffffffffffffffffffffffffffff16146104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f59061125b565b60405180910390fd5b818190508484905014610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d906112c7565b60405180910390fd5b60005b848490508110156106db57828282818110610567576105666112e7565b5b905060200201602081019061057c91906110a9565b60026000878785818110610593576105926112e7565b5b90506020020160208101906105a891906110a9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828282818110610633576106326112e7565b5b905060200201602081019061064891906110a9565b73ffffffffffffffffffffffffffffffffffffffff16858583818110610671576106706112e7565b5b905060200201602081019061068691906110a9565b73ffffffffffffffffffffffffffffffffffffffff167f126a75207b8b11156ec1f4a0ad246f458582451fc5bee4b8a729a1a68886e13260405160405180910390a380806106d390611345565b915050610549565b5050505050565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610777816001610cd990919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161480156108ac5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156108e157670de0b6b3a764000091506108c585610abb565b9050600081136108dc576108d98686610366565b90505b610a03565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561098c5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b156109c15761099a86610abb565b9150670de0b6b3a76400009050600082136109bc576109b98587610366565b91505b610a02565b6109ca86610abb565b91506109d585610abb565b9050600082136109ec576109e98587610366565b91505b60008113610a01576109fe8686610366565b90505b5b5b610a2882610a1a8387610cef90919063ffffffff16565b610cd990919063ffffffff16565b925050509392505050565b610a3b610cd1565b73ffffffffffffffffffffffffffffffffffffffff16610a59610b66565b73ffffffffffffffffffffffffffffffffffffffff1614610aaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa69061125b565b60405180910390fd5b610ab96000610d05565b565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b6057610b5d8161025f565b91505b50919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bbd610cd1565b73ffffffffffffffffffffffffffffffffffffffff16610bdb610b66565b73ffffffffffffffffffffffffffffffffffffffff1614610c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c289061125b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ca0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c97906113ff565b60405180910390fd5b610ca981610d05565b50565b6003602052816000526040600020602052806000526040600020600091509150505481565b600033905090565b60008183610ce7919061144e565b905092915050565b60008183610cfd919061147f565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dfe82610dd3565b9050919050565b6000610e1082610df3565b9050919050565b610e2081610e05565b8114610e2b57600080fd5b50565b600081359050610e3d81610e17565b92915050565b600060208284031215610e5957610e58610dc9565b5b6000610e6784828501610e2e565b91505092915050565b6000819050919050565b610e8381610e70565b82525050565b6000602082019050610e9e6000830184610e7a565b92915050565b610ead81610df3565b8114610eb857600080fd5b50565b600081359050610eca81610ea4565b92915050565b6000819050919050565b610ee381610ed0565b8114610eee57600080fd5b50565b600081359050610f0081610eda565b92915050565b600080600060608486031215610f1f57610f1e610dc9565b5b6000610f2d86828701610ebb565b9350506020610f3e86828701610ebb565b9250506040610f4f86828701610ef1565b9150509250925092565b60008060408385031215610f7057610f6f610dc9565b5b6000610f7e85828601610ebb565b9250506020610f8f85828601610ebb565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fbe57610fbd610f99565b5b8235905067ffffffffffffffff811115610fdb57610fda610f9e565b5b602083019150836020820283011115610ff757610ff6610fa3565b5b9250929050565b6000806000806040858703121561101857611017610dc9565b5b600085013567ffffffffffffffff81111561103657611035610dce565b5b61104287828801610fa8565b9450945050602085013567ffffffffffffffff81111561106557611064610dce565b5b61107187828801610fa8565b925092505092959194509250565b61108881610ed0565b82525050565b60006020820190506110a3600083018461107f565b92915050565b6000602082840312156110bf576110be610dc9565b5b60006110cd84828501610ebb565b91505092915050565b6110df81610df3565b82525050565b60006020820190506110fa60008301846110d6565b92915050565b600069ffffffffffffffffffff82169050919050565b61111f81611100565b811461112a57600080fd5b50565b60008151905061113c81611116565b92915050565b61114b81610e70565b811461115657600080fd5b50565b60008151905061116881611142565b92915050565b60008151905061117d81610eda565b92915050565b600080600080600060a0868803121561119f5761119e610dc9565b5b60006111ad8882890161112d565b95505060206111be88828901611159565b94505060406111cf8882890161116e565b93505060606111e08882890161116e565b92505060806111f18882890161112d565b9150509295509295909350565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112456020836111fe565b91506112508261120f565b602082019050919050565b6000602082019050818103600083015261127481611238565b9050919050565b7f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000600082015250565b60006112b1601a836111fe565b91506112bc8261127b565b602082019050919050565b600060208201905081810360008301526112e0816112a4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061135082610ed0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361138257611381611316565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006113e96026836111fe565b91506113f48261138d565b604082019050919050565b60006020820190508181036000830152611418816113dc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061145982610ed0565b915061146483610ed0565b9250826114745761147361141f565b5b828204905092915050565b600061148a82610ed0565b915061149583610ed0565b92508282026114a381610ed0565b915082820484148315176114ba576114b9611316565b5b509291505056fea2646970667358221220c8e1b83740addfbd5738d716778813e79cae25f52b3a338dfa8d5516369b8c8e64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1803 CODESIZE SUB DUP1 PUSH3 0x1803 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x247 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x111 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x119 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC0 SWAP1 PUSH3 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x2FC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20F DUP3 PUSH3 0x1E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x221 DUP2 PUSH3 0x202 JUMP JUMPDEST DUP2 EQ PUSH3 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x241 DUP2 PUSH3 0x216 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x260 JUMPI PUSH3 0x25F PUSH3 0x1DD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x270 DUP5 DUP3 DUP6 ADD PUSH3 0x230 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E696C656E6456323A205A45524F2041444452455353000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C2 PUSH1 0x17 DUP4 PUSH3 0x279 JUMP JUMPDEST SWAP2 POP PUSH3 0x2CF DUP3 PUSH3 0x28A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x2F5 DUP2 PUSH3 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F7 DUP1 PUSH3 0x30C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x7BC6C34E EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xF56730AC EQ PUSH2 0x22F JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x16345F18 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3176FCE1 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x39C0F0C4 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3FBFF512 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x4CB3DC2E EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x5B2E4DC5 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0xA33 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x470 JUMPI PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x47C JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48A PUSH2 0xCD1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4A8 PUSH2 0xB66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP1 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x6DB JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x12E7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x593 JUMPI PUSH2 0x592 PUSH2 0x12E7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0x12E7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x671 JUMPI PUSH2 0x670 PUSH2 0x12E7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x126A75207B8B11156EC1F4A0AD246F458582451FC5BEE4B8A729A1A68886E132 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH2 0x6D3 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x549 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x777 DUP2 PUSH1 0x1 PUSH2 0xCD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x8AC JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8E1 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 POP PUSH2 0x8C5 DUP6 PUSH2 0xABB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x8DC JUMPI PUSH2 0x8D9 DUP7 DUP7 PUSH2 0x366 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x98C JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x9C1 JUMPI PUSH2 0x99A DUP7 PUSH2 0xABB JUMP JUMPDEST SWAP2 POP PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 DUP3 SGT PUSH2 0x9BC JUMPI PUSH2 0x9B9 DUP6 DUP8 PUSH2 0x366 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9CA DUP7 PUSH2 0xABB JUMP JUMPDEST SWAP2 POP PUSH2 0x9D5 DUP6 PUSH2 0xABB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 SGT PUSH2 0x9EC JUMPI PUSH2 0x9E9 DUP6 DUP8 PUSH2 0x366 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 DUP2 SGT PUSH2 0xA01 JUMPI PUSH2 0x9FE DUP7 DUP7 PUSH2 0x366 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xA28 DUP3 PUSH2 0xA1A DUP4 DUP8 PUSH2 0xCEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xCD1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA59 PUSH2 0xB66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP1 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB9 PUSH1 0x0 PUSH2 0xD05 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB60 JUMPI PUSH2 0xB5D DUP2 PUSH2 0x25F JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xBBD PUSH2 0xCD1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDB PUSH2 0xB66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC28 SWAP1 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC97 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA9 DUP2 PUSH2 0xD05 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xCE7 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFE DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 DUP3 PUSH2 0xDF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE20 DUP2 PUSH2 0xE05 JUMP JUMPDEST DUP2 EQ PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE3D DUP2 PUSH2 0xE17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH2 0xE58 PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE67 DUP5 DUP3 DUP6 ADD PUSH2 0xE2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE83 DUP2 PUSH2 0xE70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE9E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEAD DUP2 PUSH2 0xDF3 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xECA DUP2 PUSH2 0xEA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE3 DUP2 PUSH2 0xED0 JUMP JUMPDEST DUP2 EQ PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF00 DUP2 PUSH2 0xEDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2D DUP7 DUP3 DUP8 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF3E DUP7 DUP3 DUP8 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF4F DUP7 DUP3 DUP8 ADD PUSH2 0xEF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF70 JUMPI PUSH2 0xF6F PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF7E DUP6 DUP3 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF8F DUP6 DUP3 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0xF99 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDB JUMPI PUSH2 0xFDA PUSH2 0xF9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xFA3 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1018 JUMPI PUSH2 0x1017 PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1036 JUMPI PUSH2 0x1035 PUSH2 0xDCE JUMP JUMPDEST JUMPDEST PUSH2 0x1042 DUP8 DUP3 DUP9 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1065 JUMPI PUSH2 0x1064 PUSH2 0xDCE JUMP JUMPDEST JUMPDEST PUSH2 0x1071 DUP8 DUP3 DUP9 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1088 DUP2 PUSH2 0xED0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x107F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP5 DUP3 DUP6 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DF DUP2 PUSH2 0xDF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111F DUP2 PUSH2 0x1100 JUMP JUMPDEST DUP2 EQ PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x113C DUP2 PUSH2 0x1116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114B DUP2 PUSH2 0xE70 JUMP JUMPDEST DUP2 EQ PUSH2 0x1156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1168 DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x117D DUP2 PUSH2 0xEDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x119F JUMPI PUSH2 0x119E PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11AD DUP9 DUP3 DUP10 ADD PUSH2 0x112D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x11BE DUP9 DUP3 DUP10 ADD PUSH2 0x1159 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x11CF DUP9 DUP3 DUP10 ADD PUSH2 0x116E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x11E0 DUP9 DUP3 DUP10 ADD PUSH2 0x116E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x11F1 DUP9 DUP3 DUP10 ADD PUSH2 0x112D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1245 PUSH1 0x20 DUP4 PUSH2 0x11FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1250 DUP3 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1274 DUP2 PUSH2 0x1238 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B1 PUSH1 0x1A DUP4 PUSH2 0x11FE JUMP JUMPDEST SWAP2 POP PUSH2 0x12BC DUP3 PUSH2 0x127B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E0 DUP2 PUSH2 0x12A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1350 DUP3 PUSH2 0xED0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1382 JUMPI PUSH2 0x1381 PUSH2 0x1316 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 PUSH1 0x26 DUP4 PUSH2 0x11FE JUMP JUMPDEST SWAP2 POP PUSH2 0x13F4 DUP3 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1418 DUP2 PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1459 DUP3 PUSH2 0xED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1464 DUP4 PUSH2 0xED0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1474 JUMPI PUSH2 0x1473 PUSH2 0x141F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148A DUP3 PUSH2 0xED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1495 DUP4 PUSH2 0xED0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14A3 DUP2 PUSH2 0xED0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14BA JUMPI PUSH2 0x14B9 PUSH2 0x1316 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xE1 0xB8 CALLDATACOPY BLOCKHASH 0xAD 0xDF 0xBD JUMPI CODESIZE 0xD7 AND PUSH24 0x8813E79CAE25F52B3A338DFA8D5516369B8C8E64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1009:3323:3:-:0;;;1258:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:32:0;886:12;:10;;;:12;;:::i;:::-;867:18;;;:32;;:::i;:::-;1318:1:3;1302:18;;:4;:18;;;1294:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1365:4;1358;;:11;;;;;;;;;;;;;;;;;;1258:118;1009:3323;;587:96:1;640:7;666:10;659:17;;587:96;:::o;2216:187:0:-;2289:16;2308:6;;;;;;;;;;;2289:25;;2333:8;2324:6;;:17;;;;;;;;;;;;;;;;;;2387:8;2356:40;;2377:8;2356:40;;;;;;;;;;;;2279:124;2216:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:173::-;1517:25;1513:1;1505:6;1501:14;1494:49;1377:173;:::o;1556:366::-;1698:3;1719:67;1783:2;1778:3;1719:67;:::i;:::-;1712:74;;1795:93;1884:3;1795:93;:::i;:::-;1913:2;1908:3;1904:12;1897:19;;1556:366;;;:::o;1928:419::-;2094:4;2132:2;2121:9;2117:18;2109:26;;2181:9;2175:4;2171:20;2167:1;2156:9;2152:17;2145:47;2209:131;2335:4;2209:131;:::i;:::-;2201:139;;1928:419;;;:::o;1009:3323:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH_494": {
									"entryPoint": 2959,
									"id": 494,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 3281,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3333,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@aPrice_802": {
									"entryPoint": 3244,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_347": {
									"entryPoint": 3289,
									"id": 347,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAssetPrice_765": {
									"entryPoint": 2044,
									"id": 765,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getChainLinkAssetPrice_631": {
									"entryPoint": 2747,
									"id": 631,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLatestPrice_597": {
									"entryPoint": 607,
									"id": 597,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUniswapV3Price_796": {
									"entryPoint": 870,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_332": {
									"entryPoint": 3311,
									"id": 332,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 2918,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2611,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAssetOracles_580": {
									"entryPoint": 1154,
									"id": 580,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setTokenPriceB_852": {
									"entryPoint": 736,
									"id": 852,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setTokenPrice_834": {
									"entryPoint": 1762,
									"id": 834,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 2997,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 4008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_contract$_AggregatorV3Interface_$487": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 4441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 4397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 4094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_contract$_AggregatorV3Interface_$487": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 4483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 3706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 3721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_AggregatorV3Interface_$487": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 3696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_AggregatorV3Interface_$487": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 4374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12932:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "652:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "681:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "663:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "663:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "652:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_AggregatorV3Interface_$487",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "624:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "634:7:4",
														"type": ""
													}
												],
												"src": "568:125:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:108:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "857:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "869:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "859:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "859:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "859:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "794:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "848:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_AggregatorV3Interface_$487",
																					"nodeType": "YulIdentifier",
																					"src": "801:46:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "801:53:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "791:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "791:64:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "784:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:72:4"
															},
															"nodeType": "YulIf",
															"src": "781:92:4"
														}
													]
												},
												"name": "validator_revert_t_contract$_AggregatorV3Interface_$487",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "764:5:4",
														"type": ""
													}
												],
												"src": "699:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "966:116:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "976:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "998:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "985:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "976:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1070:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_AggregatorV3Interface_$487",
																	"nodeType": "YulIdentifier",
																	"src": "1014:55:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1014:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1014:62:4"
														}
													]
												},
												"name": "abi_decode_t_contract$_AggregatorV3Interface_$487",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "944:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "952:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:4",
														"type": ""
													}
												],
												"src": "885:197:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:292:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1229:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1231:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1231:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1231:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1204:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1213:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1200:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1200:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1225:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1196:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1196:32:4"
															},
															"nodeType": "YulIf",
															"src": "1193:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1322:146:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1337:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1351:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1341:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1366:92:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_AggregatorV3Interface_$487",
																			"nodeType": "YulIdentifier",
																			"src": "1376:49:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1376:82:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1366:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_AggregatorV3Interface_$487",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1153:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1164:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1176:6:4",
														"type": ""
													}
												],
												"src": "1088:387:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1525:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1535:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1546:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1535:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1507:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1517:7:4",
														"type": ""
													}
												],
												"src": "1481:76:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1626:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1643:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1665:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "1648:16:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:23:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1636:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1636:36:4"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1614:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1621:3:4",
														"type": ""
													}
												],
												"src": "1563:115:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:122:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1790:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1802:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1813:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1798:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1790:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1868:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1881:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1892:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1877:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1877:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1826:41:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:69:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1826:69:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1752:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1764:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1775:4:4",
														"type": ""
													}
												],
												"src": "1684:218:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2008:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2017:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2020:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2010:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2010:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2010:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1974:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1999:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1981:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1981:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1971:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:43:4"
															},
															"nodeType": "YulIf",
															"src": "1961:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1944:5:4",
														"type": ""
													}
												],
												"src": "1908:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2088:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2098:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2120:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2107:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2098:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2163:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2136:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2136:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2066:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2074:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2082:5:4",
														"type": ""
													}
												],
												"src": "2036:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2236:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2247:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2236:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2208:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2218:7:4",
														"type": ""
													}
												],
												"src": "2181:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2307:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2364:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2373:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2376:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2366:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2366:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2366:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2330:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2355:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2337:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2337:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2327:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2327:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2320:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:43:4"
															},
															"nodeType": "YulIf",
															"src": "2317:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2300:5:4",
														"type": ""
													}
												],
												"src": "2264:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2444:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2454:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2463:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2454:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2519:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2492:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2492:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2422:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2430:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2438:5:4",
														"type": ""
													}
												],
												"src": "2392:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2637:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2683:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2685:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2685:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2685:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2658:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2654:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2654:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2650:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:32:4"
															},
															"nodeType": "YulIf",
															"src": "2647:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2776:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2791:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2795:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2820:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2855:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2866:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2851:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2851:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2875:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2830:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2830:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2820:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2903:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2918:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2932:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2922:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2948:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2983:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2994:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2979:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2979:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3003:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2958:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2958:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2948:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3031:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3046:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3060:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3050:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3076:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3111:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3122:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3107:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3107:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3131:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3086:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3086:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3076:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2591:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2602:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2614:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2622:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2630:6:4",
														"type": ""
													}
												],
												"src": "2537:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3245:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3291:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3293:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3293:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3293:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3266:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3275:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3262:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3262:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3287:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3258:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3258:32:4"
															},
															"nodeType": "YulIf",
															"src": "3255:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3384:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3399:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3413:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3403:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3428:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3463:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3474:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3459:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3459:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3483:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3438:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3438:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3428:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3511:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3526:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3530:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3556:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3591:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3602:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3587:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3587:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3611:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3566:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3566:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3556:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3207:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3218:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3230:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3238:6:4",
														"type": ""
													}
												],
												"src": "3162:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3731:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3748:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3751:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3741:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3741:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3741:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3642:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3854:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3871:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3874:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3864:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3864:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3864:12:4"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "3765:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3977:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3994:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3987:12:4"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3888:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:478:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4167:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4169:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4169:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4169:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4146:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4154:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4142:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4142:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4161:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4138:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4138:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:35:4"
															},
															"nodeType": "YulIf",
															"src": "4128:122:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4259:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4282:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4269:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:20:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4259:6:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4332:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "4334:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4334:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4334:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4304:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4312:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4301:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4301:30:4"
															},
															"nodeType": "YulIf",
															"src": "4298:117:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4424:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4440:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4436:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4436:17:4"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "4424:8:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4507:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4509:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4509:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4509:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "4472:8:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4486:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4494:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4482:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4482:17:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4468:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4468:32:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4502:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4465:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:41:4"
															},
															"nodeType": "YulIf",
															"src": "4462:128:4"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4085:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4093:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "4101:8:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4111:6:4",
														"type": ""
													}
												],
												"src": "4028:568:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4755:781:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4801:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4803:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4803:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4803:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4776:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4785:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4772:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4797:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4768:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4768:32:4"
															},
															"nodeType": "YulIf",
															"src": "4765:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4894:312:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4909:45:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4940:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4951:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4936:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4936:17:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4923:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:31:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4913:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5001:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5003:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5003:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5003:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4973:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4981:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4970:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4970:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "4967:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5098:98:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5168:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5164:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5116:47:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5116:80:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5098:6:4"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5106:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5216:313:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5231:46:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5262:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5273:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5258:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5258:18:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5245:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:32:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5235:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5324:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5326:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5326:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5326:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5296:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5304:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5293:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5293:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "5290:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5421:98:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5491:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5502:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5487:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5487:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5511:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5439:47:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:80:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5421:6:4"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4701:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4712:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4724:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4732:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4740:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4748:6:4",
														"type": ""
													}
												],
												"src": "4602:934:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5607:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5624:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5647:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5629:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5629:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5617:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5617:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5617:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5595:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5602:3:4",
														"type": ""
													}
												],
												"src": "5542:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5764:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5774:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5786:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5797:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5782:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5782:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5774:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5854:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5867:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5878:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5863:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5863:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5810:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5810:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5810:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5736:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5748:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5759:4:4",
														"type": ""
													}
												],
												"src": "5666:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5960:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6006:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6008:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6008:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6008:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5981:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5990:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5977:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5977:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6002:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5973:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:32:4"
															},
															"nodeType": "YulIf",
															"src": "5970:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "6099:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6114:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6128:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6118:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6143:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6178:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6189:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6174:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6174:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6198:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6153:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6153:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6143:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5930:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5941:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5953:6:4",
														"type": ""
													}
												],
												"src": "5894:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6294:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6334:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6316:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6316:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6304:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6304:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6304:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6282:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6289:3:4",
														"type": ""
													}
												],
												"src": "6229:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6451:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6461:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6473:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6484:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6469:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6461:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6541:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6554:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6565:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6550:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6550:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6497:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6497:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6423:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6435:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6446:4:4",
														"type": ""
													}
												],
												"src": "6353:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6625:61:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6635:45:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6650:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6657:22:4",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6646:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6646:34:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6635:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6607:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6617:7:4",
														"type": ""
													}
												],
												"src": "6581:105:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6734:78:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6790:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6799:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6802:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6792:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6792:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6792:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6757:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6781:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "6764:16:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6764:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6754:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6754:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6747:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6747:42:4"
															},
															"nodeType": "YulIf",
															"src": "6744:62:4"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6727:5:4",
														"type": ""
													}
												],
												"src": "6692:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6880:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6890:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6905:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6899:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6899:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6890:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6947:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "6921:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6921:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6921:32:4"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6858:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6866:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6874:5:4",
														"type": ""
													}
												],
												"src": "6818:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7007:78:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7063:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7072:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7075:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7065:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7065:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7065:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7030:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7054:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "7037:16:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7037:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7027:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7027:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7020:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:42:4"
															},
															"nodeType": "YulIf",
															"src": "7017:62:4"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7000:5:4",
														"type": ""
													}
												],
												"src": "6965:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7153:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7163:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7178:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7172:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7172:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7163:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7220:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "7194:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7194:32:4"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7131:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7139:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7147:5:4",
														"type": ""
													}
												],
												"src": "7091:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7301:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7311:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7326:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7320:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7320:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7311:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7369:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7342:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7279:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7287:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7295:5:4",
														"type": ""
													}
												],
												"src": "7238:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7529:829:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7576:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7578:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7578:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7578:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7550:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7546:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7546:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7571:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7542:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7542:33:4"
															},
															"nodeType": "YulIf",
															"src": "7539:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "7669:127:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7684:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7698:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7688:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7713:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7758:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7769:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7754:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7754:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7778:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7723:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7713:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7806:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7821:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7835:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7825:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7851:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7896:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7907:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7892:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7892:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7916:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7861:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7861:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7851:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7944:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7959:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7973:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7963:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7989:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8035:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8046:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8031:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8031:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8055:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7999:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7999:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7989:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8083:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8098:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8112:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8102:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8128:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8174:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8185:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8170:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8170:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8194:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8138:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8138:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8128:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8222:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8237:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8251:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8241:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8268:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8313:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8324:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8309:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8309:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8333:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8278:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8278:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "8268:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7467:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7478:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7490:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7498:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7506:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7514:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7522:6:4",
														"type": ""
													}
												],
												"src": "7387:971:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8460:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8477:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8482:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8470:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8470:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8470:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8498:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8517:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8522:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8513:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8513:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8498:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8432:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8437:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8448:11:4",
														"type": ""
													}
												],
												"src": "8364:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8645:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8667:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8675:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8663:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8663:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8679:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8656:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8656:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8656:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8637:6:4",
														"type": ""
													}
												],
												"src": "8539:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8873:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8883:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8949:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8954:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8890:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8890:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8883:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9055:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "8966:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8966:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8966:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9068:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9079:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9084:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9075:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9075:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9068:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8861:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8869:3:4",
														"type": ""
													}
												],
												"src": "8727:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9270:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9280:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9292:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9303:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9288:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9288:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9280:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9327:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9338:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9323:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9323:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9346:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9352:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9342:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9342:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9316:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9316:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9316:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9372:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9506:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9380:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9380:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9372:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9250:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9265:4:4",
														"type": ""
													}
												],
												"src": "9099:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9630:70:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9652:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9660:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9648:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9648:14:4"
																	},
																	{
																		"hexValue": "494e434f4e53495354454e545f504152414d535f4c454e475448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9664:28:4",
																		"type": "",
																		"value": "INCONSISTENT_PARAMS_LENGTH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9641:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9641:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9641:52:4"
														}
													]
												},
												"name": "store_literal_in_memory_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9622:6:4",
														"type": ""
													}
												],
												"src": "9524:176:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9852:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9862:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9928:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9933:2:4",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9869:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9869:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9862:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10034:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704",
																	"nodeType": "YulIdentifier",
																	"src": "9945:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9945:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9945:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10047:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10058:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10063:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10054:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10054:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10047:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9840:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9848:3:4",
														"type": ""
													}
												],
												"src": "9706:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10249:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10259:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10271:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10282:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10267:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10267:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10259:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10306:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10317:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10302:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10302:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10325:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10331:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10321:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10321:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10295:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10295:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10295:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10351:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10485:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10359:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10359:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10351:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10229:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10244:4:4",
														"type": ""
													}
												],
												"src": "10078:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10531:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10548:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10551:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10541:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10541:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10541:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10645:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10648:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10638:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10638:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10638:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10669:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10672:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10662:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10662:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10662:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10503:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10717:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10734:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10737:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10727:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10727:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10727:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10831:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10834:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10824:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10824:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10824:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10855:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10858:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10848:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10848:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10848:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10689:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10918:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10928:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10955:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10937:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10937:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10928:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11051:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11053:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11053:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11053:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10976:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10983:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10973:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10973:77:4"
															},
															"nodeType": "YulIf",
															"src": "10970:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11082:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11093:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11100:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11089:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11089:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11082:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10904:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10914:3:4",
														"type": ""
													}
												],
												"src": "10875:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11220:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11242:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11250:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11238:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11238:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11254:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11231:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11231:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11231:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11310:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11318:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11306:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11306:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11323:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11299:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11299:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11299:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11212:6:4",
														"type": ""
													}
												],
												"src": "11114:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11491:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11501:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11567:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11572:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11508:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11508:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11501:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11673:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "11584:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11584:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11584:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11686:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11697:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11702:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11693:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11693:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11686:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11479:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11487:3:4",
														"type": ""
													}
												],
												"src": "11345:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11888:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11898:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11910:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11921:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11906:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11906:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11898:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11945:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11956:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11941:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11941:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11964:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11970:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11960:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11960:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11934:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11934:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11934:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11990:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12124:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11998:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11998:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11990:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11868:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11883:4:4",
														"type": ""
													}
												],
												"src": "11717:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12170:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12187:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12190:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12180:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12180:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12180:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12284:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12287:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12277:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12277:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12277:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12308:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12311:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12301:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12301:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12301:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12142:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12370:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12380:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12403:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12385:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12385:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12380:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12414:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12437:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12419:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12419:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12414:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12461:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12463:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12463:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12463:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12458:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12451:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12451:9:4"
															},
															"nodeType": "YulIf",
															"src": "12448:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12493:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12502:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12505:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12498:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12498:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12493:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12359:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12362:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12368:1:4",
														"type": ""
													}
												],
												"src": "12328:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12567:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12577:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12600:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12582:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12582:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12577:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12611:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12634:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12616:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12616:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12611:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12645:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12668:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12671:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12664:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12664:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12649:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12682:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12711:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12693:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12693:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12682:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12900:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12902:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12902:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12902:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12833:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12826:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12826:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12856:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12863:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12872:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12859:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12859:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12853:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12853:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12806:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12806:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12786:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12786:113:4"
															},
															"nodeType": "YulIf",
															"src": "12783:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12550:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12553:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12559:7:4",
														"type": ""
													}
												],
												"src": "12519:410:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_AggregatorV3Interface_$487(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_AggregatorV3Interface_$487(value) {\n        if iszero(eq(value, cleanup_t_contract$_AggregatorV3Interface_$487(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_AggregatorV3Interface_$487(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_AggregatorV3Interface_$487(value)\n    }\n\n    function abi_decode_tuple_t_contract$_AggregatorV3Interface_$487(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_AggregatorV3Interface_$487(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704(memPtr) {\n\n        mstore(add(memPtr, 0), \"INCONSISTENT_PARAMS_LENGTH\")\n\n    }\n\n    function abi_encode_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a61461019d5780637bc6c34e146101a75780638da5cb5b146101d7578063ad5c4648146101f5578063f2fde38b14610213578063f56730ac1461022f576100b4565b806316345f18146100b95780633176fce1146100e957806339c0f0c4146101055780633fbff512146101355780634cb3dc2e146101515780635b2e4dc51461016d575b600080fd5b6100d360048036038101906100ce9190610e43565b61025f565b6040516100e09190610e89565b60405180910390f35b61010360048036038101906100fe9190610f06565b6102e0565b005b61011f600480360381019061011a9190610f59565b610366565b60405161012c9190610e89565b60405180910390f35b61014f600480360381019061014a9190610ffe565b610482565b005b61016b60048036038101906101669190610f06565b6106e2565b005b61018760048036038101906101829190610f06565b6107fc565b604051610194919061108e565b60405180910390f35b6101a5610a33565b005b6101c160048036038101906101bc91906110a9565b610abb565b6040516101ce9190610e89565b60405180910390f35b6101df610b66565b6040516101ec91906110e5565b60405180910390f35b6101fd610b8f565b60405161020a91906110e5565b60405180910390f35b61022d600480360381019061022891906110a9565b610bb5565b005b61024960048036038101906102449190610f59565b610cac565b604051610256919061108e565b60405180910390f35b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190611183565b50505091505080915050919050565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561047057600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061047c565b670de0b6b3a764000090505b92915050565b61048a610cd1565b73ffffffffffffffffffffffffffffffffffffffff166104a8610b66565b73ffffffffffffffffffffffffffffffffffffffff16146104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f59061125b565b60405180910390fd5b818190508484905014610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d906112c7565b60405180910390fd5b60005b848490508110156106db57828282818110610567576105666112e7565b5b905060200201602081019061057c91906110a9565b60026000878785818110610593576105926112e7565b5b90506020020160208101906105a891906110a9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828282818110610633576106326112e7565b5b905060200201602081019061064891906110a9565b73ffffffffffffffffffffffffffffffffffffffff16858583818110610671576106706112e7565b5b905060200201602081019061068691906110a9565b73ffffffffffffffffffffffffffffffffffffffff167f126a75207b8b11156ec1f4a0ad246f458582451fc5bee4b8a729a1a68886e13260405160405180910390a380806106d390611345565b915050610549565b5050505050565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610777816001610cd990919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161480156108ac5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b156108e157670de0b6b3a764000091506108c585610abb565b9050600081136108dc576108d98686610366565b90505b610a03565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561098c5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b156109c15761099a86610abb565b9150670de0b6b3a76400009050600082136109bc576109b98587610366565b91505b610a02565b6109ca86610abb565b91506109d585610abb565b9050600082136109ec576109e98587610366565b91505b60008113610a01576109fe8686610366565b90505b5b5b610a2882610a1a8387610cef90919063ffffffff16565b610cd990919063ffffffff16565b925050509392505050565b610a3b610cd1565b73ffffffffffffffffffffffffffffffffffffffff16610a59610b66565b73ffffffffffffffffffffffffffffffffffffffff1614610aaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa69061125b565b60405180910390fd5b610ab96000610d05565b565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b6057610b5d8161025f565b91505b50919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bbd610cd1565b73ffffffffffffffffffffffffffffffffffffffff16610bdb610b66565b73ffffffffffffffffffffffffffffffffffffffff1614610c31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c289061125b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ca0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c97906113ff565b60405180910390fd5b610ca981610d05565b50565b6003602052816000526040600020602052806000526040600020600091509150505481565b600033905090565b60008183610ce7919061144e565b905092915050565b60008183610cfd919061147f565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dfe82610dd3565b9050919050565b6000610e1082610df3565b9050919050565b610e2081610e05565b8114610e2b57600080fd5b50565b600081359050610e3d81610e17565b92915050565b600060208284031215610e5957610e58610dc9565b5b6000610e6784828501610e2e565b91505092915050565b6000819050919050565b610e8381610e70565b82525050565b6000602082019050610e9e6000830184610e7a565b92915050565b610ead81610df3565b8114610eb857600080fd5b50565b600081359050610eca81610ea4565b92915050565b6000819050919050565b610ee381610ed0565b8114610eee57600080fd5b50565b600081359050610f0081610eda565b92915050565b600080600060608486031215610f1f57610f1e610dc9565b5b6000610f2d86828701610ebb565b9350506020610f3e86828701610ebb565b9250506040610f4f86828701610ef1565b9150509250925092565b60008060408385031215610f7057610f6f610dc9565b5b6000610f7e85828601610ebb565b9250506020610f8f85828601610ebb565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fbe57610fbd610f99565b5b8235905067ffffffffffffffff811115610fdb57610fda610f9e565b5b602083019150836020820283011115610ff757610ff6610fa3565b5b9250929050565b6000806000806040858703121561101857611017610dc9565b5b600085013567ffffffffffffffff81111561103657611035610dce565b5b61104287828801610fa8565b9450945050602085013567ffffffffffffffff81111561106557611064610dce565b5b61107187828801610fa8565b925092505092959194509250565b61108881610ed0565b82525050565b60006020820190506110a3600083018461107f565b92915050565b6000602082840312156110bf576110be610dc9565b5b60006110cd84828501610ebb565b91505092915050565b6110df81610df3565b82525050565b60006020820190506110fa60008301846110d6565b92915050565b600069ffffffffffffffffffff82169050919050565b61111f81611100565b811461112a57600080fd5b50565b60008151905061113c81611116565b92915050565b61114b81610e70565b811461115657600080fd5b50565b60008151905061116881611142565b92915050565b60008151905061117d81610eda565b92915050565b600080600080600060a0868803121561119f5761119e610dc9565b5b60006111ad8882890161112d565b95505060206111be88828901611159565b94505060406111cf8882890161116e565b93505060606111e08882890161116e565b92505060806111f18882890161112d565b9150509295509295909350565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112456020836111fe565b91506112508261120f565b602082019050919050565b6000602082019050818103600083015261127481611238565b9050919050565b7f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000600082015250565b60006112b1601a836111fe565b91506112bc8261127b565b602082019050919050565b600060208201905081810360008301526112e0816112a4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061135082610ed0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361138257611381611316565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006113e96026836111fe565b91506113f48261138d565b604082019050919050565b60006020820190508181036000830152611418816113dc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061145982610ed0565b915061146483610ed0565b9250826114745761147361141f565b5b828204905092915050565b600061148a82610ed0565b915061149583610ed0565b92508282026114a381610ed0565b915082820484148315176114ba576114b9611316565b5b509291505056fea2646970667358221220c8e1b83740addfbd5738d716778813e79cae25f52b3a338dfa8d5516369b8c8e64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x7BC6C34E EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xF56730AC EQ PUSH2 0x22F JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x16345F18 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3176FCE1 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x39C0F0C4 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3FBFF512 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x4CB3DC2E EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x5B2E4DC5 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0xA33 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x470 JUMPI PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x47C JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48A PUSH2 0xCD1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4A8 PUSH2 0xB66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP1 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x6DB JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x567 JUMPI PUSH2 0x566 PUSH2 0x12E7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x593 JUMPI PUSH2 0x592 PUSH2 0x12E7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0x12E7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x671 JUMPI PUSH2 0x670 PUSH2 0x12E7 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x126A75207B8B11156EC1F4A0AD246F458582451FC5BEE4B8A729A1A68886E132 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH2 0x6D3 SWAP1 PUSH2 0x1345 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x549 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x777 DUP2 PUSH1 0x1 PUSH2 0xCD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x8AC JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8E1 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP2 POP PUSH2 0x8C5 DUP6 PUSH2 0xABB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x8DC JUMPI PUSH2 0x8D9 DUP7 DUP7 PUSH2 0x366 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x98C JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x9C1 JUMPI PUSH2 0x99A DUP7 PUSH2 0xABB JUMP JUMPDEST SWAP2 POP PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 DUP3 SGT PUSH2 0x9BC JUMPI PUSH2 0x9B9 DUP6 DUP8 PUSH2 0x366 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST PUSH2 0x9CA DUP7 PUSH2 0xABB JUMP JUMPDEST SWAP2 POP PUSH2 0x9D5 DUP6 PUSH2 0xABB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 SGT PUSH2 0x9EC JUMPI PUSH2 0x9E9 DUP6 DUP8 PUSH2 0x366 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 DUP2 SGT PUSH2 0xA01 JUMPI PUSH2 0x9FE DUP7 DUP7 PUSH2 0x366 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xA28 DUP3 PUSH2 0xA1A DUP4 DUP8 PUSH2 0xCEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xCD1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA59 PUSH2 0xB66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP1 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB9 PUSH1 0x0 PUSH2 0xD05 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB60 JUMPI PUSH2 0xB5D DUP2 PUSH2 0x25F JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xBBD PUSH2 0xCD1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDB PUSH2 0xB66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC28 SWAP1 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC97 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA9 DUP2 PUSH2 0xD05 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xCE7 SWAP2 SWAP1 PUSH2 0x144E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFE DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 DUP3 PUSH2 0xDF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE20 DUP2 PUSH2 0xE05 JUMP JUMPDEST DUP2 EQ PUSH2 0xE2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE3D DUP2 PUSH2 0xE17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH2 0xE58 PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE67 DUP5 DUP3 DUP6 ADD PUSH2 0xE2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE83 DUP2 PUSH2 0xE70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE9E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEAD DUP2 PUSH2 0xDF3 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xECA DUP2 PUSH2 0xEA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE3 DUP2 PUSH2 0xED0 JUMP JUMPDEST DUP2 EQ PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF00 DUP2 PUSH2 0xEDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2D DUP7 DUP3 DUP8 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF3E DUP7 DUP3 DUP8 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF4F DUP7 DUP3 DUP8 ADD PUSH2 0xEF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF70 JUMPI PUSH2 0xF6F PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF7E DUP6 DUP3 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF8F DUP6 DUP3 DUP7 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0xF99 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDB JUMPI PUSH2 0xFDA PUSH2 0xF9E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xFA3 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1018 JUMPI PUSH2 0x1017 PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1036 JUMPI PUSH2 0x1035 PUSH2 0xDCE JUMP JUMPDEST JUMPDEST PUSH2 0x1042 DUP8 DUP3 DUP9 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1065 JUMPI PUSH2 0x1064 PUSH2 0xDCE JUMP JUMPDEST JUMPDEST PUSH2 0x1071 DUP8 DUP3 DUP9 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1088 DUP2 PUSH2 0xED0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x107F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP5 DUP3 DUP6 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DF DUP2 PUSH2 0xDF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111F DUP2 PUSH2 0x1100 JUMP JUMPDEST DUP2 EQ PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x113C DUP2 PUSH2 0x1116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114B DUP2 PUSH2 0xE70 JUMP JUMPDEST DUP2 EQ PUSH2 0x1156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1168 DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x117D DUP2 PUSH2 0xEDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x119F JUMPI PUSH2 0x119E PUSH2 0xDC9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11AD DUP9 DUP3 DUP10 ADD PUSH2 0x112D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x11BE DUP9 DUP3 DUP10 ADD PUSH2 0x1159 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x11CF DUP9 DUP3 DUP10 ADD PUSH2 0x116E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x11E0 DUP9 DUP3 DUP10 ADD PUSH2 0x116E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x11F1 DUP9 DUP3 DUP10 ADD PUSH2 0x112D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1245 PUSH1 0x20 DUP4 PUSH2 0x11FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1250 DUP3 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1274 DUP2 PUSH2 0x1238 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E434F4E53495354454E545F504152414D535F4C454E475448000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B1 PUSH1 0x1A DUP4 PUSH2 0x11FE JUMP JUMPDEST SWAP2 POP PUSH2 0x12BC DUP3 PUSH2 0x127B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E0 DUP2 PUSH2 0x12A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1350 DUP3 PUSH2 0xED0 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1382 JUMPI PUSH2 0x1381 PUSH2 0x1316 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E9 PUSH1 0x26 DUP4 PUSH2 0x11FE JUMP JUMPDEST SWAP2 POP PUSH2 0x13F4 DUP3 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1418 DUP2 PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1459 DUP3 PUSH2 0xED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1464 DUP4 PUSH2 0xED0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1474 JUMPI PUSH2 0x1473 PUSH2 0x141F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148A DUP3 PUSH2 0xED0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1495 DUP4 PUSH2 0xED0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14A3 DUP2 PUSH2 0xED0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14BA JUMPI PUSH2 0x14B9 PUSH2 0x1316 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xE1 0xB8 CALLDATACOPY BLOCKHASH 0xAD 0xDF 0xBD JUMPI CODESIZE 0xD7 AND PUSH24 0x8813E79CAE25F52B3A338DFA8D5516369B8C8E64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1009:3323:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4175:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3614:271;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1382:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3959:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2502:1088;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1614:101:0;;;:::i;:::-;;2196:300:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;982:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1084:19:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1864:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3891:61:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1795:395;1897:6;1978:12;2134:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1919:242;;;;;;2178:5;2171:12;;;1795:395;;;:::o;4175:155::-;4318:5;4293:6;:14;4300:6;4293:14;;;;;;;;;;;;;;;:22;4308:6;4293:22;;;;;;;;;;;;;;;:30;;;;4175:155;;;:::o;3614:271::-;3718:6;3769:1;3744:6;:14;3751:6;3744:14;;;;;;;;;;;;;;;:22;3759:6;3744:22;;;;;;;;;;;;;;;;:26;3740:139;;;3800:6;:14;3807:6;3800:14;;;;;;;;;;;;;;;:22;3815:6;3800:22;;;;;;;;;;;;;;;;3786:37;;;;3740:139;3861:7;3854:14;;3614:271;;;;;:::o;1382:407::-;1205:12:0;:10;:12::i;:::-;1194:23;;:7;:5;:7::i;:::-;:23;;;1186:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1538:7:3::1;;:14;;1521:6;;:13;;:31;1513:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1599:9;1594:189;1618:6;;:13;;1614:1;:17;1594:189;;;1701:7;;1709:1;1701:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1652:13;:24;1666:6;;1673:1;1666:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1652:24;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;1761:7;;1769:1;1761:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1731:41;;1750:6;;1757:1;1750:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1731:41;;;;;;;;;;;;1633:3;;;;;:::i;:::-;;;;1594:189;;;;1382:407:::0;;;;:::o;3959:210::-;4101:5;4076:6;:14;4083:6;4076:14;;;;;;;;;;;;;;;:22;4091:6;4076:22;;;;;;;;;;;;;;;:30;;;;4141:21;4156:5;4149:1;4141:14;;:21;;;;:::i;:::-;4116:6;:14;4123:6;4116:14;;;;;;;;;;;;;;;:22;4131:6;4116:22;;;;;;;;;;;;;;;:46;;;;3959:210;;;:::o;2502:1088::-;2624:14;2650:13;2673;2711:4;;;;;;;;;;;2701:14;;:6;:14;;;:32;;;;;2729:4;;;;;;;;;;;2719:14;;:6;:14;;;;2701:32;2697:817;;;2758:7;2749:16;;2788:30;2811:6;2788:22;:30::i;:::-;2779:39;;2847:1;2837:6;:11;2833:92;;2877:33;2895:6;2903;2877:17;:33::i;:::-;2868:42;;2833:92;2697:817;;;2955:4;;;;;;;;;;;2945:14;;:6;:14;;;;:32;;;;;2973:4;;;;;;;;;;;2963:14;;:6;:14;;;2945:32;2941:573;;;3002:30;3025:6;3002:22;:30::i;:::-;2993:39;;3055:7;3046:16;;3091:1;3081:6;:11;3077:92;;3121:33;3139:6;3147;3121:17;:33::i;:::-;3112:42;;3077:92;2941:573;;;3208:30;3231:6;3208:22;:30::i;:::-;3199:39;;3261:30;3284:6;3261:22;:30::i;:::-;3252:39;;3320:1;3310:6;:11;3306:92;;3350:33;3368:6;3376;3350:17;:33::i;:::-;3341:42;;3306:92;3426:1;3416:6;:11;3412:92;;3456:33;3474:6;3482;3456:17;:33::i;:::-;3447:42;;3412:92;2941:573;2697:817;3533:50;3575:6;3534:27;3553:6;3534;:10;;:27;;;;:::i;:::-;3533:33;;:50;;;;:::i;:::-;3524:59;;2640:950;;2502:1088;;;;;:::o;1614:101:0:-;1205:12;:10;:12::i;:::-;1194:23;;:7;:5;:7::i;:::-;:23;;;1186:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1678:30:::1;1705:1;1678:18;:30::i;:::-;1614:101::o:0;2196:300:3:-;2288:12;2316:28;2347:13;:20;2361:5;2347:20;;;;;;;;;;;;;;;;;;;;;;;;;2316:51;;2408:1;2381:29;;2389:6;2381:29;;;2377:113;;2434:45;2471:6;2434:14;:45::i;:::-;2426:53;;2377:113;2306:190;2196:300;;;:::o;982:85:0:-;1028:7;1054:6;;;;;;;;;;;1047:13;;982:85;:::o;1084:19:3:-;;;;;;;;;;;;;:::o;1864:198:0:-;1205:12;:10;:12::i;:::-;1194:23;;:7;:5;:7::i;:::-;:23;;;1186:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1972:1:::1;1952:22;;:8;:22;;::::0;1944:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2027:28;2046:8;2027:18;:28::i;:::-;1864:198:::0;:::o;3891:61:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;587:96:1:-;640:7;666:10;659:17;;587:96;:::o;3767::2:-;3825:7;3855:1;3851;:5;;;;:::i;:::-;3844:12;;3767:96;;;;:::o;3382:::-;3440:7;3470:1;3466;:5;;;;:::i;:::-;3459:12;;3382:96;;;;:::o;2216:187:0:-;2289:16;2308:6;;;;;;;;;;;2289:25;;2333:8;2324:6;;:17;;;;;;;;;;;;;;;;;;2387:8;2356:40;;2377:8;2356:40;;;;;;;;;;;;2279:124;2216:187;:::o;88:117:4:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:125::-;634:7;663:24;681:5;663:24;:::i;:::-;652:35;;568:125;;;:::o;699:180::-;801:53;848:5;801:53;:::i;:::-;794:5;791:64;781:92;;869:1;866;859:12;781:92;699:180;:::o;885:197::-;960:5;998:6;985:20;976:29;;1014:62;1070:5;1014:62;:::i;:::-;885:197;;;;:::o;1088:387::-;1176:6;1225:2;1213:9;1204:7;1200:23;1196:32;1193:119;;;1231:79;;:::i;:::-;1193:119;1351:1;1376:82;1450:7;1441:6;1430:9;1426:22;1376:82;:::i;:::-;1366:92;;1322:146;1088:387;;;;:::o;1481:76::-;1517:7;1546:5;1535:16;;1481:76;;;:::o;1563:115::-;1648:23;1665:5;1648:23;:::i;:::-;1643:3;1636:36;1563:115;;:::o;1684:218::-;1775:4;1813:2;1802:9;1798:18;1790:26;;1826:69;1892:1;1881:9;1877:17;1868:6;1826:69;:::i;:::-;1684:218;;;;:::o;1908:122::-;1981:24;1999:5;1981:24;:::i;:::-;1974:5;1971:35;1961:63;;2020:1;2017;2010:12;1961:63;1908:122;:::o;2036:139::-;2082:5;2120:6;2107:20;2098:29;;2136:33;2163:5;2136:33;:::i;:::-;2036:139;;;;:::o;2181:77::-;2218:7;2247:5;2236:16;;2181:77;;;:::o;2264:122::-;2337:24;2355:5;2337:24;:::i;:::-;2330:5;2327:35;2317:63;;2376:1;2373;2366:12;2317:63;2264:122;:::o;2392:139::-;2438:5;2476:6;2463:20;2454:29;;2492:33;2519:5;2492:33;:::i;:::-;2392:139;;;;:::o;2537:619::-;2614:6;2622;2630;2679:2;2667:9;2658:7;2654:23;2650:32;2647:119;;;2685:79;;:::i;:::-;2647:119;2805:1;2830:53;2875:7;2866:6;2855:9;2851:22;2830:53;:::i;:::-;2820:63;;2776:117;2932:2;2958:53;3003:7;2994:6;2983:9;2979:22;2958:53;:::i;:::-;2948:63;;2903:118;3060:2;3086:53;3131:7;3122:6;3111:9;3107:22;3086:53;:::i;:::-;3076:63;;3031:118;2537:619;;;;;:::o;3162:474::-;3230:6;3238;3287:2;3275:9;3266:7;3262:23;3258:32;3255:119;;;3293:79;;:::i;:::-;3255:119;3413:1;3438:53;3483:7;3474:6;3463:9;3459:22;3438:53;:::i;:::-;3428:63;;3384:117;3540:2;3566:53;3611:7;3602:6;3591:9;3587:22;3566:53;:::i;:::-;3556:63;;3511:118;3162:474;;;;;:::o;3642:117::-;3751:1;3748;3741:12;3765:117;3874:1;3871;3864:12;3888:117;3997:1;3994;3987:12;4028:568;4101:8;4111:6;4161:3;4154:4;4146:6;4142:17;4138:27;4128:122;;4169:79;;:::i;:::-;4128:122;4282:6;4269:20;4259:30;;4312:18;4304:6;4301:30;4298:117;;;4334:79;;:::i;:::-;4298:117;4448:4;4440:6;4436:17;4424:29;;4502:3;4494:4;4486:6;4482:17;4472:8;4468:32;4465:41;4462:128;;;4509:79;;:::i;:::-;4462:128;4028:568;;;;;:::o;4602:934::-;4724:6;4732;4740;4748;4797:2;4785:9;4776:7;4772:23;4768:32;4765:119;;;4803:79;;:::i;:::-;4765:119;4951:1;4940:9;4936:17;4923:31;4981:18;4973:6;4970:30;4967:117;;;5003:79;;:::i;:::-;4967:117;5116:80;5188:7;5179:6;5168:9;5164:22;5116:80;:::i;:::-;5098:98;;;;4894:312;5273:2;5262:9;5258:18;5245:32;5304:18;5296:6;5293:30;5290:117;;;5326:79;;:::i;:::-;5290:117;5439:80;5511:7;5502:6;5491:9;5487:22;5439:80;:::i;:::-;5421:98;;;;5216:313;4602:934;;;;;;;:::o;5542:118::-;5629:24;5647:5;5629:24;:::i;:::-;5624:3;5617:37;5542:118;;:::o;5666:222::-;5759:4;5797:2;5786:9;5782:18;5774:26;;5810:71;5878:1;5867:9;5863:17;5854:6;5810:71;:::i;:::-;5666:222;;;;:::o;5894:329::-;5953:6;6002:2;5990:9;5981:7;5977:23;5973:32;5970:119;;;6008:79;;:::i;:::-;5970:119;6128:1;6153:53;6198:7;6189:6;6178:9;6174:22;6153:53;:::i;:::-;6143:63;;6099:117;5894:329;;;;:::o;6229:118::-;6316:24;6334:5;6316:24;:::i;:::-;6311:3;6304:37;6229:118;;:::o;6353:222::-;6446:4;6484:2;6473:9;6469:18;6461:26;;6497:71;6565:1;6554:9;6550:17;6541:6;6497:71;:::i;:::-;6353:222;;;;:::o;6581:105::-;6617:7;6657:22;6650:5;6646:34;6635:45;;6581:105;;;:::o;6692:120::-;6764:23;6781:5;6764:23;:::i;:::-;6757:5;6754:34;6744:62;;6802:1;6799;6792:12;6744:62;6692:120;:::o;6818:141::-;6874:5;6905:6;6899:13;6890:22;;6921:32;6947:5;6921:32;:::i;:::-;6818:141;;;;:::o;6965:120::-;7037:23;7054:5;7037:23;:::i;:::-;7030:5;7027:34;7017:62;;7075:1;7072;7065:12;7017:62;6965:120;:::o;7091:141::-;7147:5;7178:6;7172:13;7163:22;;7194:32;7220:5;7194:32;:::i;:::-;7091:141;;;;:::o;7238:143::-;7295:5;7326:6;7320:13;7311:22;;7342:33;7369:5;7342:33;:::i;:::-;7238:143;;;;:::o;7387:971::-;7490:6;7498;7506;7514;7522;7571:3;7559:9;7550:7;7546:23;7542:33;7539:120;;;7578:79;;:::i;:::-;7539:120;7698:1;7723:63;7778:7;7769:6;7758:9;7754:22;7723:63;:::i;:::-;7713:73;;7669:127;7835:2;7861:63;7916:7;7907:6;7896:9;7892:22;7861:63;:::i;:::-;7851:73;;7806:128;7973:2;7999:64;8055:7;8046:6;8035:9;8031:22;7999:64;:::i;:::-;7989:74;;7944:129;8112:2;8138:64;8194:7;8185:6;8174:9;8170:22;8138:64;:::i;:::-;8128:74;;8083:129;8251:3;8278:63;8333:7;8324:6;8313:9;8309:22;8278:63;:::i;:::-;8268:73;;8222:129;7387:971;;;;;;;;:::o;8364:169::-;8448:11;8482:6;8477:3;8470:19;8522:4;8517:3;8513:14;8498:29;;8364:169;;;;:::o;8539:182::-;8679:34;8675:1;8667:6;8663:14;8656:58;8539:182;:::o;8727:366::-;8869:3;8890:67;8954:2;8949:3;8890:67;:::i;:::-;8883:74;;8966:93;9055:3;8966:93;:::i;:::-;9084:2;9079:3;9075:12;9068:19;;8727:366;;;:::o;9099:419::-;9265:4;9303:2;9292:9;9288:18;9280:26;;9352:9;9346:4;9342:20;9338:1;9327:9;9323:17;9316:47;9380:131;9506:4;9380:131;:::i;:::-;9372:139;;9099:419;;;:::o;9524:176::-;9664:28;9660:1;9652:6;9648:14;9641:52;9524:176;:::o;9706:366::-;9848:3;9869:67;9933:2;9928:3;9869:67;:::i;:::-;9862:74;;9945:93;10034:3;9945:93;:::i;:::-;10063:2;10058:3;10054:12;10047:19;;9706:366;;;:::o;10078:419::-;10244:4;10282:2;10271:9;10267:18;10259:26;;10331:9;10325:4;10321:20;10317:1;10306:9;10302:17;10295:47;10359:131;10485:4;10359:131;:::i;:::-;10351:139;;10078:419;;;:::o;10503:180::-;10551:77;10548:1;10541:88;10648:4;10645:1;10638:15;10672:4;10669:1;10662:15;10689:180;10737:77;10734:1;10727:88;10834:4;10831:1;10824:15;10858:4;10855:1;10848:15;10875:233;10914:3;10937:24;10955:5;10937:24;:::i;:::-;10928:33;;10983:66;10976:5;10973:77;10970:103;;11053:18;;:::i;:::-;10970:103;11100:1;11093:5;11089:13;11082:20;;10875:233;;;:::o;11114:225::-;11254:34;11250:1;11242:6;11238:14;11231:58;11323:8;11318:2;11310:6;11306:15;11299:33;11114:225;:::o;11345:366::-;11487:3;11508:67;11572:2;11567:3;11508:67;:::i;:::-;11501:74;;11584:93;11673:3;11584:93;:::i;:::-;11702:2;11697:3;11693:12;11686:19;;11345:366;;;:::o;11717:419::-;11883:4;11921:2;11910:9;11906:18;11898:26;;11970:9;11964:4;11960:20;11956:1;11945:9;11941:17;11934:47;11998:131;12124:4;11998:131;:::i;:::-;11990:139;;11717:419;;;:::o;12142:180::-;12190:77;12187:1;12180:88;12287:4;12284:1;12277:15;12311:4;12308:1;12301:15;12328:185;12368:1;12385:20;12403:1;12385:20;:::i;:::-;12380:25;;12419:20;12437:1;12419:20;:::i;:::-;12414:25;;12458:1;12448:35;;12463:18;;:::i;:::-;12448:35;12505:1;12502;12498:9;12493:14;;12328:185;;;;:::o;12519:410::-;12559:7;12582:20;12600:1;12582:20;:::i;:::-;12577:25;;12616:20;12634:1;12616:20;:::i;:::-;12611:25;;12671:1;12668;12664:9;12693:30;12711:11;12693:30;:::i;:::-;12682:41;;12872:1;12863:7;12859:15;12856:1;12853:22;12833:1;12826:9;12806:83;12783:139;;12902:18;;:::i;:::-;12783:139;12567:362;12519:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1073400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH()": "2580",
								"aPrice(address,address)": "infinite",
								"getAssetPrice(address,address,uint256)": "infinite",
								"getChainLinkAssetPrice(address)": "infinite",
								"getLatestPrice(address)": "infinite",
								"getUniswapV3Price(address,address)": "infinite",
								"owner()": "2566",
								"renounceOwnership()": "30374",
								"setAssetOracles(address[],address[])": "infinite",
								"setTokenPrice(address,address,uint256)": "infinite",
								"setTokenPriceB(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30808"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1009,
									"end": 4332,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1258,
									"end": 1376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 867,
									"end": 899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 886,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 886,
									"end": 896,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 886,
									"end": 896,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 886,
									"end": 896,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 886,
									"end": 898,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 886,
									"end": 898,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 886,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 886,
									"end": 898,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 886,
									"end": 898,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 867,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 867,
									"end": 885,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 885,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 867,
									"end": 899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 899,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 867,
									"end": 899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 867,
									"end": 899,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 867,
									"end": 899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1319,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1302,
									"end": 1320,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1302,
									"end": 1320,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1302,
									"end": 1306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1302,
									"end": 1320,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1302,
									"end": 1320,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1302,
									"end": 1320,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1294,
									"end": 1348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1294,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1365,
									"end": 1369,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1358,
									"end": 1369,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1258,
									"end": 1376,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 587,
									"end": 683,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 587,
									"end": 683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 640,
									"end": 647,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 666,
									"end": 676,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 659,
									"end": 676,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 659,
									"end": 676,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 587,
									"end": 683,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 587,
									"end": 683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2403,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2216,
									"end": 2403,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2308,
									"end": 2314,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2289,
									"end": 2314,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2289,
									"end": 2314,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2341,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2330,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2324,
									"end": 2330,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2377,
									"end": 2385,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2356,
									"end": 2396,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2279,
									"end": 2403,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2403,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1377,
									"end": 1550,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1377,
									"end": 1550,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "PUSH",
									"source": 4,
									"value": "556E696C656E6456323A205A45524F2041444452455353000000000000000000"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1494,
									"end": 1543,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1377,
									"end": 1550,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1377,
									"end": 1550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1922,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1556,
									"end": 1922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1698,
									"end": 1701,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1719,
									"end": 1786,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1783,
									"end": 1785,
									"name": "PUSH",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1778,
									"end": 1781,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1719,
									"end": 1786,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1719,
									"end": 1786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1719,
									"end": 1786,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1719,
									"end": 1786,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1712,
									"end": 1786,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1712,
									"end": 1786,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1888,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1884,
									"end": 1887,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1888,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1795,
									"end": 1888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1888,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1795,
									"end": 1888,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1913,
									"end": 1915,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1904,
									"end": 1916,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1897,
									"end": 1916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1897,
									"end": 1916,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1922,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1922,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1922,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1928,
									"end": 2347,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1928,
									"end": 2347,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2098,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2132,
									"end": 2134,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2121,
									"end": 2130,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2135,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2109,
									"end": 2135,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2109,
									"end": 2135,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2181,
									"end": 2190,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2175,
									"end": 2179,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2171,
									"end": 2191,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2167,
									"end": 2168,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2156,
									"end": 2165,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2152,
									"end": 2169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2145,
									"end": 2192,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2209,
									"end": 2340,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 2335,
									"end": 2339,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2209,
									"end": 2340,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2209,
									"end": 2340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2209,
									"end": 2340,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 2209,
									"end": 2340,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2201,
									"end": 2340,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2201,
									"end": 2340,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1928,
									"end": 2347,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1928,
									"end": 2347,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1928,
									"end": 2347,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1928,
									"end": 2347,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 4332,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c8e1b83740addfbd5738d716778813e79cae25f52b3a338dfa8d5516369b8c8e64736f6c63430008130033",
									".code": [
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "7BC6C34E"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "AD5C4648"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "F56730AC"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "16345F18"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "3176FCE1"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "39C0F0C4"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "3FBFF512"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "4CB3DC2E"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "5B2E4DC5"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 4332,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1795,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1795,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1795,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4175,
											"end": 4330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4175,
											"end": 4330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3614,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3614,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3614,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1382,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1382,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3959,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3959,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2502,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2502,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1715,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1614,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1614,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1614,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1715,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1614,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1715,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2196,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2196,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2196,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 982,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 982,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1084,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1084,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1864,
											"end": 2062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1864,
											"end": 2062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3891,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3891,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3891,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1897,
											"end": 1903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1990,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2134,
											"end": 2159,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2159,
											"name": "PUSH",
											"source": 3,
											"value": "FEAF968C"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2134,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1919,
											"end": 2161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 2190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4318,
											"end": 4323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4306,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4308,
											"end": 4314,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4315,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4323,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4323,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4323,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3757,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3758,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3765,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3740,
											"end": 3879,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3740,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3740,
											"end": 3879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3786,
											"end": 3823,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3740,
											"end": 3879,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3740,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 3868,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3854,
											"end": 3868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3854,
											"end": 3868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1205,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1205,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1194,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1186,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1552,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1552,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1527,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1527,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1534,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1521,
											"end": 1552,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1513,
											"end": 1583,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1513,
											"end": 1583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1599,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1594,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1624,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1624,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1631,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1594,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1708,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1708,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1701,
											"end": 1711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1701,
											"end": 1711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1701,
											"end": 1711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1672,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1672,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1674,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1666,
											"end": 1675,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1666,
											"end": 1675,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1666,
											"end": 1675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1712,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1768,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1768,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1761,
											"end": 1771,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1761,
											"end": 1771,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1761,
											"end": 1771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1756,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1756,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1758,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1750,
											"end": 1759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1750,
											"end": 1759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1750,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "126A75207B8B11156EC1F4A0AD246F458582451FC5BEE4B8A729A1A68886E132"
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1772,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1636,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1636,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1633,
											"end": 1636,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1633,
											"end": 1636,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1633,
											"end": 1636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1636,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1636,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1633,
											"end": 1636,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1594,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1594,
											"end": 1783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4090,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4097,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4098,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4106,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4150,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4162,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4162,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4141,
											"end": 4162,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4162,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4141,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4122,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4130,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4138,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4162,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4116,
											"end": 4162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2733,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2733,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2701,
											"end": 2733,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2725,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2733,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2733,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2701,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 3514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2697,
											"end": 3514,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2765,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2749,
											"end": 2765,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2749,
											"end": 2765,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2788,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2788,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2788,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2788,
											"end": 2818,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2788,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2843,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2837,
											"end": 2848,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2833,
											"end": 2925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2895,
											"end": 2901,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2909,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2877,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2868,
											"end": 2910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2833,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2697,
											"end": 3514,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 3514,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2697,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2951,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2977,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2977,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2945,
											"end": 2977,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2973,
											"end": 2977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 2977,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 2977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 2969,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 2977,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 2977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 2977,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2977,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2945,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3514,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2941,
											"end": 3514,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3002,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3091,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3092,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3077,
											"end": 3169,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3139,
											"end": 3145,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3153,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3121,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3121,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3154,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3169,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3077,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2941,
											"end": 3514,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3514,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2941,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3231,
											"end": 3237,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3208,
											"end": 3238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3238,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3208,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3284,
											"end": 3290,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3261,
											"end": 3291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3291,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3261,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3252,
											"end": 3291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3252,
											"end": 3291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3310,
											"end": 3321,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3306,
											"end": 3398,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3368,
											"end": 3374,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3350,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3383,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3350,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 3398,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3306,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3422,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3427,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3412,
											"end": 3504,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3456,
											"end": 3489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3489,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3456,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3504,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3412,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3514,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2941,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 3514,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2697,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3553,
											"end": 3559,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3540,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3534,
											"end": 3544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3534,
											"end": 3561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3561,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3534,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3533,
											"end": 3566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3583,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3533,
											"end": 3583,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3583,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3533,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 3590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 3590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 3590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1715,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1614,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1205,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1205,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1194,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1186,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1705,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1678,
											"end": 1708,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1678,
											"end": 1708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2300,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2360,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2347,
											"end": 2367,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2408,
											"end": 2409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2377,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2377,
											"end": 2490,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2434,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2479,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2434,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2377,
											"end": 2490,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2377,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1205,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1205,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1194,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1186,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1972,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1944,
											"end": 2017,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1944,
											"end": 2017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2055,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2046,
											"end": 2054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2027,
											"end": 2055,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2055,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2027,
											"end": 2055,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 587,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 587,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 640,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 676,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 659,
											"end": 676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 587,
											"end": 683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3851,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3767,
											"end": 3863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3466,
											"end": 3467,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3466,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3382,
											"end": 3478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3382,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2403,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2216,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2396,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2216,
											"end": 2403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 693,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 568,
											"end": 693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 681,
											"end": 686,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 663,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 663,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 663,
											"end": 687,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 663,
											"end": 687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 652,
											"end": 687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 652,
											"end": 687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 568,
											"end": 693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 568,
											"end": 693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 699,
											"end": 879,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 699,
											"end": 879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 801,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 848,
											"end": 853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 801,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 801,
											"end": 854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 801,
											"end": 854,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 801,
											"end": 854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 794,
											"end": 799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 791,
											"end": 855,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 781,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 781,
											"end": 873,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 869,
											"end": 870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 871,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 781,
											"end": 873,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 781,
											"end": 873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 699,
											"end": 879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 699,
											"end": 879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1082,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 885,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 960,
											"end": 965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1005,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1014,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1014,
											"end": 1076,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1014,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1082,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 1082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1475,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1088,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1222,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1196,
											"end": 1228,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1231,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1231,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 1193,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1352,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1376,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1458,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1376,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1475,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1475,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1557,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1481,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1678,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1563,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1665,
											"end": 1670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1648,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1671,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1648,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1646,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1672,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1902,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1684,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1775,
											"end": 1779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1890,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1894,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1874,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1826,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1895,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1826,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1902,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1902,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 2030,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1908,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1981,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2006,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1961,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 1961,
											"end": 2024,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2022,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1961,
											"end": 2024,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 1961,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 2030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 2030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2175,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2036,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2082,
											"end": 2087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2127,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2163,
											"end": 2168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2136,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2169,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2136,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2175,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2175,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2258,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2181,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2225,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2258,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2386,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2264,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2337,
											"end": 2361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2337,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2327,
											"end": 2362,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2378,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2531,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2392,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2483,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2519,
											"end": 2524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2492,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2525,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2492,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2531,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 3156,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2537,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2677,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2766,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2647,
											"end": 2766,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2685,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2685,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2685,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2685,
											"end": 2764,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2685,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2766,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2647,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2864,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2830,
											"end": 2883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2883,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2830,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2883,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3003,
											"end": 3010,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 2992,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2958,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 3011,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 3011,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 3021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3062,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3131,
											"end": 3138,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3129,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3086,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3139,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 3156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 3156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 3156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 3156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 3156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 3156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3636,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3162,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3273,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3285,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3290,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3374,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3255,
											"end": 3374,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3293,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3293,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3372,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3293,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3374,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3255,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3414,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3483,
											"end": 3490,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3472,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3438,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3491,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3438,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3428,
											"end": 3491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3566,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 3611,
											"end": 3618,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3600,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3587,
											"end": 3609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3566,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3566,
											"end": 3619,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 3566,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3556,
											"end": 3619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3556,
											"end": 3619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3636,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3636,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3759,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3642,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3748,
											"end": 3749,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3741,
											"end": 3753,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3882,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3765,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3874,
											"end": 3875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3876,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 4005,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3888,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 3998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 3995,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4596,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4028,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4101,
											"end": 4109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4164,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4142,
											"end": 4159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4138,
											"end": 4165,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4128,
											"end": 4250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4169,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4250,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4128,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4282,
											"end": 4288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4289,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4259,
											"end": 4289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4259,
											"end": 4289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4304,
											"end": 4310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4331,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4415,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 4298,
											"end": 4415,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4334,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 4334,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4334,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4334,
											"end": 4413,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 4334,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4415,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 4298,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4448,
											"end": 4452,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4446,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4505,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4494,
											"end": 4498,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4499,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4465,
											"end": 4506,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4462,
											"end": 4590,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4462,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 4462,
											"end": 4590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4509,
											"end": 4588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4462,
											"end": 4590,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 4462,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4596,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4596,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 5536,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4602,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 4730,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4738,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4740,
											"end": 4746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4754,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4797,
											"end": 4799,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4785,
											"end": 4794,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4783,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4795,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4768,
											"end": 4800,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4884,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 4765,
											"end": 4884,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4803,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 4803,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4803,
											"end": 4882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4803,
											"end": 4882,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 4803,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4884,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 4765,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 4949,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4936,
											"end": 4953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 4954,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4999,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4973,
											"end": 4979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4970,
											"end": 5000,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 5084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 4967,
											"end": 5084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 5003,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5003,
											"end": 5082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5082,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 5003,
											"end": 5082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 5084,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 4967,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5116,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 5188,
											"end": 5195,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5179,
											"end": 5185,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5177,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5116,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5116,
											"end": 5196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5116,
											"end": 5196,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 5116,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5196,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5196,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4894,
											"end": 5206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5275,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5262,
											"end": 5271,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5277,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5296,
											"end": 5302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5293,
											"end": 5323,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5290,
											"end": 5407,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5290,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 5290,
											"end": 5407,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 5326,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5326,
											"end": 5405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5326,
											"end": 5405,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 5326,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5290,
											"end": 5407,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 5290,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 5511,
											"end": 5518,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5502,
											"end": 5508,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5491,
											"end": 5500,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5509,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5439,
											"end": 5519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5519,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 5439,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5519,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5519,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 5536,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 5536,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 5536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 5536,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 5536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 5536,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 5536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4602,
											"end": 5536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5660,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5542,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5629,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5647,
											"end": 5652,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5629,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5629,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5629,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5629,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5627,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5617,
											"end": 5654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5759,
											"end": 5763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5799,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5786,
											"end": 5795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5782,
											"end": 5800,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5774,
											"end": 5800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5774,
											"end": 5800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5810,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5876,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5863,
											"end": 5880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 5860,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5810,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5810,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5810,
											"end": 5881,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 5810,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5666,
											"end": 5888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 6223,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5894,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5953,
											"end": 5959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6004,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 5988,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5977,
											"end": 6000,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 6005,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5970,
											"end": 6089,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5970,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 5970,
											"end": 6089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6008,
											"end": 6087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5970,
											"end": 6089,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 5970,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 6198,
											"end": 6205,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6195,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 6153,
											"end": 6206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6099,
											"end": 6216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 6223,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 6223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 6223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 6223,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 6223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6229,
											"end": 6347,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6229,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6316,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6316,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 6316,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6316,
											"end": 6340,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 6316,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6304,
											"end": 6341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6229,
											"end": 6347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6229,
											"end": 6347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6229,
											"end": 6347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6575,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 6353,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6446,
											"end": 6450,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6486,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6473,
											"end": 6482,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6469,
											"end": 6487,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6461,
											"end": 6487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6461,
											"end": 6487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6497,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6554,
											"end": 6563,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6550,
											"end": 6567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6541,
											"end": 6547,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6497,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6497,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6497,
											"end": 6568,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 6497,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6575,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6575,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6686,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6581,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6679,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6650,
											"end": 6655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6646,
											"end": 6680,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6635,
											"end": 6680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6635,
											"end": 6680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6686,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6812,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6692,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6781,
											"end": 6786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6764,
											"end": 6787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6787,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6764,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6757,
											"end": 6762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6754,
											"end": 6788,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6744,
											"end": 6806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6799,
											"end": 6800,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6792,
											"end": 6804,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6806,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6744,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 6959,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6818,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6905,
											"end": 6911,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6899,
											"end": 6912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6890,
											"end": 6912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6890,
											"end": 6912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6921,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 6947,
											"end": 6952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6921,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6921,
											"end": 6953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6921,
											"end": 6953,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 6921,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 6959,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 6959,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 6959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 6959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 6959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6965,
											"end": 7085,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6965,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7037,
											"end": 7060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7054,
											"end": 7059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7037,
											"end": 7060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7037,
											"end": 7060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7037,
											"end": 7060,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7037,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7030,
											"end": 7035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7027,
											"end": 7061,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7017,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 7017,
											"end": 7079,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7072,
											"end": 7073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7065,
											"end": 7077,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7017,
											"end": 7079,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 7017,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6965,
											"end": 7085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6965,
											"end": 7085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7232,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7091,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7147,
											"end": 7152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7172,
											"end": 7185,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7163,
											"end": 7185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7163,
											"end": 7185,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 7220,
											"end": 7225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7194,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7226,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 7194,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7091,
											"end": 7232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7381,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7238,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7295,
											"end": 7300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7320,
											"end": 7333,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7311,
											"end": 7333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7311,
											"end": 7333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7342,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 7369,
											"end": 7374,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7342,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7342,
											"end": 7375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7342,
											"end": 7375,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 7342,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7381,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7238,
											"end": 7381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 8358,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 7387,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7490,
											"end": 7496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7506,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7514,
											"end": 7520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7522,
											"end": 7528,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7571,
											"end": 7574,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 7559,
											"end": 7568,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7546,
											"end": 7569,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7575,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7539,
											"end": 7659,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7539,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 7539,
											"end": 7659,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 7578,
											"end": 7657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7539,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 7539,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7698,
											"end": 7699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 7778,
											"end": 7785,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7769,
											"end": 7775,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7767,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7754,
											"end": 7776,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7723,
											"end": 7786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7713,
											"end": 7786,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 7713,
											"end": 7786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7669,
											"end": 7796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7837,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7861,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 7916,
											"end": 7923,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7913,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7896,
											"end": 7905,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7892,
											"end": 7914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7861,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7861,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7861,
											"end": 7924,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 7861,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7851,
											"end": 7924,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7851,
											"end": 7924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7806,
											"end": 7934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7973,
											"end": 7975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7999,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 8055,
											"end": 8062,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8046,
											"end": 8052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8035,
											"end": 8044,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8053,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7999,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7999,
											"end": 8063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7999,
											"end": 8063,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 7999,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7989,
											"end": 8063,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7989,
											"end": 8063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7944,
											"end": 8073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8114,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8138,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 8194,
											"end": 8201,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 8170,
											"end": 8192,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8138,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 8138,
											"end": 8202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8138,
											"end": 8202,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 8138,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8202,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8083,
											"end": 8212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8251,
											"end": 8254,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8278,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 8333,
											"end": 8340,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8324,
											"end": 8330,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8322,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 8309,
											"end": 8331,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8278,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 8278,
											"end": 8341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8278,
											"end": 8341,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 8278,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8268,
											"end": 8341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8268,
											"end": 8341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8222,
											"end": 8351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 8358,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 8358,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 8358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 8358,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 8358,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 8358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 8358,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 8358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7387,
											"end": 8358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8364,
											"end": 8533,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 8364,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8448,
											"end": 8459,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8482,
											"end": 8488,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8477,
											"end": 8480,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8470,
											"end": 8489,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8517,
											"end": 8520,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8527,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8498,
											"end": 8527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8498,
											"end": 8527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8364,
											"end": 8533,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8364,
											"end": 8533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8364,
											"end": 8533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8364,
											"end": 8533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8364,
											"end": 8533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8539,
											"end": 8721,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8539,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 8713,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8675,
											"end": 8676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8677,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8656,
											"end": 8714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8539,
											"end": 8721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8539,
											"end": 8721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8727,
											"end": 9093,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 8727,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8869,
											"end": 8872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8890,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 8954,
											"end": 8956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8949,
											"end": 8952,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 8890,
											"end": 8957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8890,
											"end": 8957,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 8890,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8883,
											"end": 8957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8883,
											"end": 8957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8966,
											"end": 9059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 9055,
											"end": 9058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8966,
											"end": 9059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8966,
											"end": 9059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8966,
											"end": 9059,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 8966,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9084,
											"end": 9086,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9079,
											"end": 9082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9075,
											"end": 9087,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8727,
											"end": 9093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8727,
											"end": 9093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8727,
											"end": 9093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8727,
											"end": 9093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9099,
											"end": 9518,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 9099,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9265,
											"end": 9269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9303,
											"end": 9305,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9292,
											"end": 9301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9288,
											"end": 9306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9280,
											"end": 9306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9280,
											"end": 9306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9352,
											"end": 9361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9346,
											"end": 9350,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9342,
											"end": 9362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9338,
											"end": 9339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9327,
											"end": 9336,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9316,
											"end": 9363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9380,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9380,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 9380,
											"end": 9511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9380,
											"end": 9511,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 9380,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9372,
											"end": 9511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9372,
											"end": 9511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9099,
											"end": 9518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9099,
											"end": 9518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9099,
											"end": 9518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9099,
											"end": 9518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9524,
											"end": 9700,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 9524,
											"end": 9700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9664,
											"end": 9692,
											"name": "PUSH",
											"source": 4,
											"value": "494E434F4E53495354454E545F504152414D535F4C454E475448000000000000"
										},
										{
											"begin": 9660,
											"end": 9661,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9658,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9641,
											"end": 9693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9524,
											"end": 9700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9524,
											"end": 9700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9706,
											"end": 10072,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 9706,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 9933,
											"end": 9935,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 9869,
											"end": 9936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9936,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 9869,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9862,
											"end": 9936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9862,
											"end": 9936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9945,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 10034,
											"end": 10037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9945,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 9945,
											"end": 10038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9945,
											"end": 10038,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 9945,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10063,
											"end": 10065,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10058,
											"end": 10061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10054,
											"end": 10066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10047,
											"end": 10066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10047,
											"end": 10066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9706,
											"end": 10072,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9706,
											"end": 10072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9706,
											"end": 10072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9706,
											"end": 10072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10497,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 10078,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10244,
											"end": 10248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10282,
											"end": 10284,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10271,
											"end": 10280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10267,
											"end": 10285,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10259,
											"end": 10285,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10259,
											"end": 10285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10331,
											"end": 10340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10325,
											"end": 10329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10321,
											"end": 10341,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10317,
											"end": 10318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10306,
											"end": 10315,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10302,
											"end": 10319,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10295,
											"end": 10342,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10359,
											"end": 10490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 10485,
											"end": 10489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10359,
											"end": 10490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10359,
											"end": 10490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10359,
											"end": 10490,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 10359,
											"end": 10490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10351,
											"end": 10490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10351,
											"end": 10490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10497,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10497,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10503,
											"end": 10683,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 10503,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10551,
											"end": 10628,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10548,
											"end": 10549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10648,
											"end": 10652,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 10645,
											"end": 10646,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10638,
											"end": 10653,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10672,
											"end": 10676,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10669,
											"end": 10670,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10662,
											"end": 10677,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10689,
											"end": 10869,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10689,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10737,
											"end": 10814,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10734,
											"end": 10735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10834,
											"end": 10838,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 10831,
											"end": 10832,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10824,
											"end": 10839,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10858,
											"end": 10862,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10855,
											"end": 10856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10848,
											"end": 10863,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10875,
											"end": 11108,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 10875,
											"end": 11108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10914,
											"end": 10917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10937,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 10955,
											"end": 10960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10937,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 10937,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10937,
											"end": 10961,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 10937,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10961,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10983,
											"end": 11049,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10976,
											"end": 10981,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10973,
											"end": 11050,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10970,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 10970,
											"end": 11073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11053,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 11053,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 11053,
											"end": 11071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11053,
											"end": 11071,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 11053,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10970,
											"end": 11073,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 10970,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11100,
											"end": 11101,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11093,
											"end": 11098,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11089,
											"end": 11102,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11082,
											"end": 11102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10875,
											"end": 11108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10875,
											"end": 11108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10875,
											"end": 11108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10875,
											"end": 11108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11114,
											"end": 11339,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 11114,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11254,
											"end": 11288,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11250,
											"end": 11251,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11238,
											"end": 11252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11231,
											"end": 11289,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11323,
											"end": 11331,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11318,
											"end": 11320,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11310,
											"end": 11316,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11306,
											"end": 11321,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11299,
											"end": 11332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11114,
											"end": 11339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11114,
											"end": 11339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11345,
											"end": 11711,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 11345,
											"end": 11711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11487,
											"end": 11490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11508,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 11572,
											"end": 11574,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 11567,
											"end": 11570,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11508,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 11508,
											"end": 11575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11508,
											"end": 11575,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 11508,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11501,
											"end": 11575,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11501,
											"end": 11575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 11673,
											"end": 11676,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 11584,
											"end": 11677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11677,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 11584,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11702,
											"end": 11704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11697,
											"end": 11700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11686,
											"end": 11705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11686,
											"end": 11705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11345,
											"end": 11711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11345,
											"end": 11711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11345,
											"end": 11711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11345,
											"end": 11711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11717,
											"end": 12136,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 11717,
											"end": 12136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11883,
											"end": 11887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11921,
											"end": 11923,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11910,
											"end": 11919,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 11924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11898,
											"end": 11924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11898,
											"end": 11924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11970,
											"end": 11979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11964,
											"end": 11968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11960,
											"end": 11980,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11956,
											"end": 11957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11945,
											"end": 11954,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11941,
											"end": 11958,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11934,
											"end": 11981,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11998,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 12124,
											"end": 12128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11998,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 11998,
											"end": 12129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11998,
											"end": 12129,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 11998,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11990,
											"end": 12129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11990,
											"end": 12129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11717,
											"end": 12136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11717,
											"end": 12136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11717,
											"end": 12136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11717,
											"end": 12136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12142,
											"end": 12322,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 12142,
											"end": 12322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12190,
											"end": 12267,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12187,
											"end": 12188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12268,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12287,
											"end": 12291,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 12284,
											"end": 12285,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12311,
											"end": 12315,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 12308,
											"end": 12309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12301,
											"end": 12316,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12328,
											"end": 12513,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 12328,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 12403,
											"end": 12404,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 12385,
											"end": 12405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12380,
											"end": 12405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12380,
											"end": 12405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12419,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 12437,
											"end": 12438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12419,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 12419,
											"end": 12439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12419,
											"end": 12439,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 12419,
											"end": 12439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 12439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12458,
											"end": 12459,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12448,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 12448,
											"end": 12483,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12463,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 12463,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 12463,
											"end": 12481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12463,
											"end": 12481,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 12463,
											"end": 12481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12448,
											"end": 12483,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 12448,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12505,
											"end": 12506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12502,
											"end": 12503,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12498,
											"end": 12507,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12493,
											"end": 12507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12493,
											"end": 12507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12328,
											"end": 12513,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12328,
											"end": 12513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12328,
											"end": 12513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12328,
											"end": 12513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12328,
											"end": 12513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12519,
											"end": 12929,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 12519,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12559,
											"end": 12566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12582,
											"end": 12602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 12600,
											"end": 12601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12582,
											"end": 12602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 12582,
											"end": 12602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12582,
											"end": 12602,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 12582,
											"end": 12602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12577,
											"end": 12602,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12577,
											"end": 12602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12616,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 12634,
											"end": 12635,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12616,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 12616,
											"end": 12636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12616,
											"end": 12636,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 12616,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12636,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12671,
											"end": 12672,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12668,
											"end": 12669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12664,
											"end": 12673,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 12693,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 12711,
											"end": 12722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12693,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 12693,
											"end": 12723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12693,
											"end": 12723,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 12693,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12682,
											"end": 12723,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12682,
											"end": 12723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12872,
											"end": 12873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12863,
											"end": 12870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12859,
											"end": 12874,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12856,
											"end": 12857,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12853,
											"end": 12875,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12833,
											"end": 12834,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12826,
											"end": 12835,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12806,
											"end": 12889,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 12783,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 12783,
											"end": 12922,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 12902,
											"end": 12920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12783,
											"end": 12922,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 12783,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12567,
											"end": 12929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12519,
											"end": 12929,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12519,
											"end": 12929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12519,
											"end": 12929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12519,
											"end": 12929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12519,
											"end": 12929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"lib/access/Ownable.sol",
								"lib/utils/Context.sol",
								"lib/utils/math/SafeMath.sol",
								"oracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"aPrice(address,address)": "f56730ac",
							"getAssetPrice(address,address,uint256)": "5b2e4dc5",
							"getChainLinkAssetPrice(address)": "7bc6c34e",
							"getLatestPrice(address)": "16345f18",
							"getUniswapV3Price(address,address)": "39c0f0c4",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setAssetOracles(address[],address[])": "3fbff512",
							"setTokenPrice(address,address,uint256)": "4cb3dc2e",
							"setTokenPriceB(address,address,uint256)": "3176fce1",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"AssetOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"aPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getChainLinkAssetPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"getUniswapV3Price\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"}],\"name\":\"setAssetOracles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setTokenPriceB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"oracle.sol\":\"UnilendV2oracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/access/Ownable.sol\":{\"keccak256\":\"0x64d0f54d0d9a6c9f78e54930477a509a0c2bee91ddda7b2f4a781074b6e66ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d0f0721942b0dc9d2f5c57b97c814bb7b18e06614a872cbaf68feab2174bb8\",\"dweb:/ipfs/QmacDiUVK818R4iXkEAUfehwaYFvptqLAELkcf9aJXZjyy\"]},\"lib/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"lib/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"oracle.sol\":{\"keccak256\":\"0x5b56f8d4c7a5ba2e8d7f9b2fc3bf5f00ff0117ef87e4781ab74b20d81ffc9464\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9b1f69e247809dccee118e58a4f853382c1254accd0104d96d7e7e1be44def9\",\"dweb:/ipfs/QmbmGAmbBHeSFE4NMGXHgeVfRsibUSXi4xvNtbnEy71Krs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "oracle.sol:UnilendV2oracle",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 494,
								"contract": "oracle.sol:UnilendV2oracle",
								"label": "WETH",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 499,
								"contract": "oracle.sol:UnilendV2oracle",
								"label": "assetsOracles",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_contract(AggregatorV3Interface)487)"
							},
							{
								"astId": 802,
								"contract": "oracle.sol:UnilendV2oracle",
								"label": "aPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)487": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_contract(AggregatorV3Interface)487)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => contract AggregatorV3Interface)",
								"numberOfBytes": "32",
								"value": "t_contract(AggregatorV3Interface)487"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/access/Ownable.sol": {
				"ast": {
					"absolutePath": "lib/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "lib/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"614:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "886:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "886:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "867:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 104,
									"src": "843:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1037:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1054:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1047:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "912:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "991:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1028:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:0"
									},
									"scope": 104,
									"src": "982:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1176:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1194:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1194:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1205:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1205:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1194:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1219:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1186:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1186:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1264:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1073:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1164:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:2:0"
									},
									"src": "1155:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1668:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1697:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1697:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1697:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1678:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1678:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1678:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1278:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nameLocations": [
													"1658:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1658:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1658:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1623:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1640:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1668:0:0"
									},
									"scope": 104,
									"src": "1614:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1934:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1952:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1972:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1964:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1952:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1976:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1944:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1944:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1944:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2046:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2027:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2027:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2027:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1721:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nameLocations": [
													"1924:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1924:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1924:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1873:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1899:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1891:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1890:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1934:0:0"
									},
									"scope": 104,
									"src": "1864:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2279:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2297:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2289:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2289:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2308:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2289:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2324:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2333:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2324:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2324:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2377:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2387:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2356:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2351:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2068:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2225:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2252:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2244:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2243:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2279:0:0"
									},
									"scope": 104,
									"src": "2216:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "585:1820:0",
							"usedErrors": []
						}
					],
					"src": "33:2373:0"
				},
				"id": 0
			},
			"lib/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "58:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "573:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "649:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "666:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "670:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "666:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "659:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "596:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "640:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:1"
									},
									"scope": 126,
									"src": "587:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "756:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "773:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "777:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "773:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "766:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "698:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "740:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "740:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:16:1"
									},
									"scope": 126,
									"src": "689:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "555:235:1",
							"usedErrors": []
						}
					],
					"src": "33:758:1"
				},
				"id": 1
			},
			"lib/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "lib/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							438
						]
					},
					"id": 439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 438,
							"linearizedBaseContracts": [
								438
							],
							"name": "SafeMath",
							"nameLocation": "406:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "633:140:2",
										"statements": [
											{
												"id": 159,
												"nodeType": "UncheckedBlock",
												"src": "643:124:2",
												"statements": [
													{
														"assignments": [
															142
														],
														"declarations": [
															{
																"constant": false,
																"id": 142,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 159,
																"src": "667:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 141,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 146,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "679:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 147,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "702:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 148,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "706:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 154,
														"nodeType": "IfStatement",
														"src": "698:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 152,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 140,
															"id": 153,
															"nodeType": "Return",
															"src": "709:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 156,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "754:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 157,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 140,
														"id": 158,
														"nodeType": "Return",
														"src": "740:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "573:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "584:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:2"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "618:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "624:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:2"
									},
									"scope": 438,
									"src": "557:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "995:113:2",
										"statements": [
											{
												"id": 187,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 173,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1033:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 174,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "1037:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 180,
														"nodeType": "IfStatement",
														"src": "1029:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 172,
															"id": 179,
															"nodeType": "Return",
															"src": "1040:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 182,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "1085:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 183,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 166,
																		"src": "1089:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 185,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 172,
														"id": 186,
														"nodeType": "Return",
														"src": "1071:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "935:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "946:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:2"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "980:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "986:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:2"
									},
									"scope": 438,
									"src": "919:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1332:417:2",
										"statements": [
											{
												"id": 229,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 201,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1600:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 208,
														"nodeType": "IfStatement",
														"src": "1596:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 200,
															"id": 207,
															"nodeType": "Return",
															"src": "1608:16:2"
														}
													},
													{
														"assignments": [
															210
														],
														"declarations": [
															{
																"constant": false,
																"id": 210,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 229,
																"src": "1638:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 209,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 214,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 211,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1650:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 212,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1654:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 215,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1673:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 216,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "1677:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 218,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1682:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 224,
														"nodeType": "IfStatement",
														"src": "1669:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 222,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 200,
															"id": 223,
															"nodeType": "Return",
															"src": "1685:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1730:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 227,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 200,
														"id": 228,
														"nodeType": "Return",
														"src": "1716:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1272:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1283:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1317:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1323:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:2"
									},
									"scope": 438,
									"src": "1256:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "1974:114:2",
										"statements": [
											{
												"id": 257,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2012:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 250,
														"nodeType": "IfStatement",
														"src": "2008:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 248,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 242,
															"id": 249,
															"nodeType": "Return",
															"src": "2020:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 252,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2065:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 253,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "2069:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 255,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 242,
														"id": 256,
														"nodeType": "Return",
														"src": "2051:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1914:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1925:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1959:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1965:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:2"
									},
									"scope": 438,
									"src": "1898:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2323:114:2",
										"statements": [
											{
												"id": 285,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2361:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 278,
														"nodeType": "IfStatement",
														"src": "2357:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 276,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 270,
															"id": 277,
															"nodeType": "Return",
															"src": "2369:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 280,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2414:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 281,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "2418:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 270,
														"id": 284,
														"nodeType": "Return",
														"src": "2400:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2263:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2274:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2308:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2314:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:2"
									},
									"scope": 438,
									"src": "2247:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "2739:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 297,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2756:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 298,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2760:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 296,
												"id": 300,
												"nodeType": "Return",
												"src": "2749:12:2"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2685:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2730:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:2"
									},
									"scope": 438,
									"src": "2672:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "3106:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "3123:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 313,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3127:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 311,
												"id": 315,
												"nodeType": "Return",
												"src": "3116:12:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3052:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3063:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:2"
									},
									"scope": 438,
									"src": "3039:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "3449:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "3466:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 328,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "3470:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 326,
												"id": 330,
												"nodeType": "Return",
												"src": "3459:12:2"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3395:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3406:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3440:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:2"
									},
									"scope": 438,
									"src": "3382:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3834:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "3851:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "3855:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 341,
												"id": 345,
												"nodeType": "Return",
												"src": "3844:12:2"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3780:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3791:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3825:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:2"
									},
									"scope": 438,
									"src": "3767:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "4383:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "4400:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 358,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "4404:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 356,
												"id": 360,
												"nodeType": "Return",
												"src": "4393:12:2"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4329:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4340:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:2"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4374:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:2"
									},
									"scope": 438,
									"src": "4316:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "5001:106:2",
										"statements": [
											{
												"id": 385,
												"nodeType": "UncheckedBlock",
												"src": "5011:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 375,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "5043:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 376,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "5048:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5043:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 378,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "5051:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 374,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5035:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5035:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 380,
														"nodeType": "ExpressionStatement",
														"src": "5035:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 381,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "5085:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 382,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "5089:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5085:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 373,
														"id": 384,
														"nodeType": "Return",
														"src": "5078:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4906:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4898:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4925:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4917:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4950:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4936:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 368,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:80:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4992:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:9:2"
									},
									"scope": 438,
									"src": "4876:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "5716:105:2",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "5726:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 400,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5758:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5762:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5758:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 403,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "5765:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 399,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5750:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 405,
														"nodeType": "ExpressionStatement",
														"src": "5750:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "5799:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "5803:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 398,
														"id": 409,
														"nodeType": "Return",
														"src": "5792:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "5113:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5600:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5621:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5613:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5613:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5640:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5632:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5603:80:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5707:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:2"
									},
									"scope": 438,
									"src": "5591:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "6592:105:2",
										"statements": [
											{
												"id": 435,
												"nodeType": "UncheckedBlock",
												"src": "6602:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 425,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "6634:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6638:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6634:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 428,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6641:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 424,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6626:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6626:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "6626:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "6675:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 432,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "6679:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6675:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 423,
														"id": 434,
														"nodeType": "Return",
														"src": "6668:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "5827:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6476:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6516:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6508:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6541:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6527:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6527:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:80:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6583:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6583:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:9:2"
									},
									"scope": 438,
									"src": "6467:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 439,
							"src": "398:6301:2",
							"usedErrors": []
						}
					],
					"src": "33:6667:2"
				},
				"id": 2
			},
			"oracle.sol": {
				"ast": {
					"absolutePath": "oracle.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							487
						],
						"Context": [
							126
						],
						"Ownable": [
							104
						],
						"SafeMath": [
							438
						],
						"UnilendV2oracle": [
							853
						]
					},
					"id": 854,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 440,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "lib/utils/Context.sol",
							"file": "./lib/utils/Context.sol",
							"id": 441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 127,
							"src": "57:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/utils/math/SafeMath.sol",
							"file": "./lib/utils/math/SafeMath.sol",
							"id": 442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 439,
							"src": "91:39:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/access/Ownable.sol",
							"file": "./lib/access/Ownable.sol",
							"id": 443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 105,
							"src": "131:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 487,
							"linearizedBaseContracts": [
								487
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "305:21:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "342:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:3"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "376:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 445,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "376:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:7:3"
									},
									"scope": 487,
									"src": "333:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "398:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "409:2:3"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "435:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "435:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "434:15:3"
									},
									"scope": 487,
									"src": "389:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "465:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:2:3"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "498:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:9:3"
									},
									"scope": 487,
									"src": "456:51:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "522:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "542:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "535:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 459,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "535:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:17:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "619:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "612:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 462,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "612:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "647:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 464,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "640:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "675:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "667:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "706:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "698:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "736:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "729:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 470,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "729:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:163:3"
									},
									"scope": 487,
									"src": "513:249:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "777:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "792:2:3"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "862:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "855:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 475,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "855:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "890:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "883:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 477,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "883:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "918:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "910:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "949:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "941:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "979:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "972:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 483,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "972:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:163:3"
									},
									"scope": 487,
									"src": "768:237:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 854,
							"src": "295:712:3",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 488,
										"name": "Ownable",
										"nameLocations": [
											"1037:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "1037:7:3"
									},
									"id": 489,
									"nodeType": "InheritanceSpecifier",
									"src": "1037:7:3"
								}
							],
							"canonicalName": "UnilendV2oracle",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 853,
							"linearizedBaseContracts": [
								853,
								104,
								126
							],
							"name": "UnilendV2oracle",
							"nameLocation": "1018:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 492,
									"libraryName": {
										"id": 490,
										"name": "SafeMath",
										"nameLocations": [
											"1057:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 438,
										"src": "1057:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1051:27:3",
									"typeName": {
										"id": 491,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1070:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 494,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "1099:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "1084:19:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 493,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1084:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 499,
									"mutability": "mutable",
									"name": "assetsOracles",
									"nameLocation": "1160:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "1110:63:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$487_$",
										"typeString": "mapping(address => contract AggregatorV3Interface)"
									},
									"typeName": {
										"id": 498,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 495,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1118:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1110:41:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$487_$",
											"typeString": "mapping(address => contract AggregatorV3Interface)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 497,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 496,
												"name": "AggregatorV3Interface",
												"nameLocations": [
													"1129:21:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 487,
												"src": "1129:21:3"
											},
											"referencedDeclaration": 487,
											"src": "1129:21:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
												"typeString": "contract AggregatorV3Interface"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "126a75207b8b11156ec1f4a0ad246f458582451fc5bee4b8a729a1a68886e132",
									"id": 505,
									"name": "AssetOracleUpdated",
									"nameLocation": "1186:18:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "1221:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "1205:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"indexed": true,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "1244:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "1228:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:47:3"
									},
									"src": "1180:72:3"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "1284:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 511,
																"name": "weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "1302:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1318:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1310:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 512,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1310:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1310:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1302:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e696c656e6456323a205a45524f2041444452455353",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f",
																"typeString": "literal_string \"UnilendV2: ZERO ADDRESS\""
															},
															"value": "UnilendV2: ZERO ADDRESS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89119d0e48795ebbdaab59273a7da6c91d730d817c1a25b48ee9b540bce7897f",
																"typeString": "literal_string \"UnilendV2: ZERO ADDRESS\""
															}
														],
														"id": 510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1294:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1294:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "1294:54:3"
											},
											{
												"expression": {
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 520,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "1358:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 521,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "1365:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1358:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "1358:11:3"
											}
										]
									},
									"id": 525,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "weth",
												"nameLocation": "1278:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1270:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:14:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1284:0:3"
									},
									"scope": 853,
									"src": "1258:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "1503:286:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 537,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "1521:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1528:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1521:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 539,
																	"name": "sources",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "1538:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1546:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1538:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1521:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e434f4e53495354454e545f504152414d535f4c454e475448",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1554:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704",
																"typeString": "literal_string \"INCONSISTENT_PARAMS_LENGTH\""
															},
															"value": "INCONSISTENT_PARAMS_LENGTH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a807dff59d3474096247bf1cf10d6df8b988b576943ecf8c7dd58f40a940e704",
																"typeString": "literal_string \"INCONSISTENT_PARAMS_LENGTH\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1513:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1513:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "1513:70:3"
											},
											{
												"body": {
													"id": 577,
													"nodeType": "Block",
													"src": "1638:145:3",
													"statements": [
														{
															"expression": {
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 556,
																		"name": "assetsOracles",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "1652:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$487_$",
																			"typeString": "mapping(address => contract AggregatorV3Interface)"
																		}
																	},
																	"id": 560,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 557,
																			"name": "assets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "1666:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 559,
																		"indexExpression": {
																			"id": 558,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "1673:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1666:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1652:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																		"typeString": "contract AggregatorV3Interface"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 562,
																				"name": "sources",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "1701:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "1709:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1701:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 561,
																		"name": "AggregatorV3Interface",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 487,
																		"src": "1679:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$487_$",
																			"typeString": "type(contract AggregatorV3Interface)"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1679:33:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																		"typeString": "contract AggregatorV3Interface"
																	}
																},
																"src": "1652:60:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																	"typeString": "contract AggregatorV3Interface"
																}
															},
															"id": 567,
															"nodeType": "ExpressionStatement",
															"src": "1652:60:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 569,
																			"name": "assets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "1750:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 571,
																		"indexExpression": {
																			"id": 570,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "1757:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1750:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 572,
																			"name": "sources",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "1761:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 574,
																		"indexExpression": {
																			"id": 573,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "1769:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1761:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 568,
																	"name": "AssetOracleUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "1731:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address)"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1731:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 576,
															"nodeType": "EmitStatement",
															"src": "1726:46:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 549,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "1614:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 550,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "1618:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1625:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1618:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1614:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 578,
												"initializationExpression": {
													"assignments": [
														546
													],
													"declarations": [
														{
															"constant": false,
															"id": 546,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1607:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 578,
															"src": "1599:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 545,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1599:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 548,
													"initialValue": {
														"hexValue": "30",
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1611:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1599:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1633:3:3",
														"subExpression": {
															"id": 553,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1633:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 555,
													"nodeType": "ExpressionStatement",
													"src": "1633:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1594:189:3"
											}
										]
									},
									"functionSelector": "3fbff512",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 534,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 533,
												"name": "onlyOwner",
												"nameLocations": [
													"1493:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1493:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1493:9:3"
										}
									],
									"name": "setAssetOracles",
									"nameLocation": "1391:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1435:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "1416:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 526,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1416:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 527,
													"nodeType": "ArrayTypeName",
													"src": "1416:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "sources",
												"nameLocation": "1470:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "1451:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 529,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1451:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 530,
													"nodeType": "ArrayTypeName",
													"src": "1451:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:77:3"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1503:0:3"
									},
									"scope": 853,
									"src": "1382:407:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "1909:281:3",
										"statements": [
											{
												"assignments": [
													null,
													589,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 589,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1985:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "1978:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 588,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1978:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 593,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 590,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "2134:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2144:15:3",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 486,
														"src": "2134:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2134:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1919:242:3"
											},
											{
												"expression": {
													"id": 594,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 589,
													"src": "2178:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 587,
												"id": 595,
												"nodeType": "Return",
												"src": "2171:12:3"
											}
										]
									},
									"functionSelector": "16345f18",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "1804:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "priceFeed",
												"nameLocation": "1841:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1819:31:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
													"typeString": "contract AggregatorV3Interface"
												},
												"typeName": {
													"id": 582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 581,
														"name": "AggregatorV3Interface",
														"nameLocations": [
															"1819:21:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 487,
														"src": "1819:21:3"
													},
													"referencedDeclaration": 487,
													"src": "1819:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1818:33:3"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1897:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 585,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1897:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:8:3"
									},
									"scope": 853,
									"src": "1795:395:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "2306:190:3",
										"statements": [
											{
												"assignments": [
													606
												],
												"declarations": [
													{
														"constant": false,
														"id": 606,
														"mutability": "mutable",
														"name": "source",
														"nameLocation": "2338:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 630,
														"src": "2316:28:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 605,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 604,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"2316:21:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 487,
																"src": "2316:21:3"
															},
															"referencedDeclaration": 487,
															"src": "2316:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"baseExpression": {
														"id": 607,
														"name": "assetsOracles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "2347:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$487_$",
															"typeString": "mapping(address => contract AggregatorV3Interface)"
														}
													},
													"id": 609,
													"indexExpression": {
														"id": 608,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "2361:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2347:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2316:51:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 613,
																"name": "source",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "2389:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																	"typeString": "contract AggregatorV3Interface"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																	"typeString": "contract AggregatorV3Interface"
																}
															],
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2381:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 611,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2381:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2381:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2408:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2400:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2400:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2400:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2381:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "2377:113:3",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "2412:78:3",
													"statements": [
														{
															"expression": {
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 620,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "2426:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 623,
																					"name": "source",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 606,
																					"src": "2471:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																						"typeString": "contract AggregatorV3Interface"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																						"typeString": "contract AggregatorV3Interface"
																					}
																				],
																				"id": 622,
																				"name": "AggregatorV3Interface",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 487,
																				"src": "2449:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$487_$",
																					"typeString": "type(contract AggregatorV3Interface)"
																				}
																			},
																			"id": 624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2449:29:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																				"typeString": "contract AggregatorV3Interface"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AggregatorV3Interface_$487",
																				"typeString": "contract AggregatorV3Interface"
																			}
																		],
																		"id": 621,
																		"name": "getLatestPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "2434:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_contract$_AggregatorV3Interface_$487_$returns$_t_int256_$",
																			"typeString": "function (contract AggregatorV3Interface) view returns (int256)"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2434:45:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "2426:53:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 627,
															"nodeType": "ExpressionStatement",
															"src": "2426:53:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7bc6c34e",
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainLinkAssetPrice",
									"nameLocation": "2205:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "2236:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2228:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:15:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2295:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 601,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2288:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2287:14:3"
									},
									"scope": 853,
									"src": "2196:300:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "2640:950:3",
										"statements": [
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "price0",
														"nameLocation": "2657:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 764,
														"src": "2650:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 642,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2650:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 644,
												"nodeType": "VariableDeclarationStatement",
												"src": "2650:13:3"
											},
											{
												"assignments": [
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "price1",
														"nameLocation": "2680:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 764,
														"src": "2673:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 645,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2673:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 647,
												"nodeType": "VariableDeclarationStatement",
												"src": "2673:13:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 648,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "2701:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 649,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "2711:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2701:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 651,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "2719:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 652,
															"name": "WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "2729:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2719:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2701:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 678,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "2945:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 679,
																"name": "WETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "2955:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2945:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 681,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "2963:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 682,
																"name": "WETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "2973:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2963:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2945:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 744,
														"nodeType": "Block",
														"src": "3185:329:3",
														"statements": [
															{
																"expression": {
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 708,
																		"name": "price0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "3199:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 710,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "3231:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 709,
																			"name": "getChainLinkAssetPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "3208:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int256_$",
																				"typeString": "function (address) view returns (int256)"
																			}
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3208:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "3199:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 713,
																"nodeType": "ExpressionStatement",
																"src": "3199:39:3"
															},
															{
																"expression": {
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 714,
																		"name": "price1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "3252:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 716,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 635,
																				"src": "3284:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 715,
																			"name": "getChainLinkAssetPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "3261:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int256_$",
																				"typeString": "function (address) view returns (int256)"
																			}
																		},
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3261:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "3252:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 719,
																"nodeType": "ExpressionStatement",
																"src": "3252:39:3"
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 720,
																		"name": "price0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "3310:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3320:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3310:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 731,
																"nodeType": "IfStatement",
																"src": "3306:92:3",
																"trueBody": {
																	"id": 730,
																	"nodeType": "Block",
																	"src": "3323:75:3",
																	"statements": [
																		{
																			"expression": {
																				"id": 728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 723,
																					"name": "price0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 643,
																					"src": "3341:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 725,
																							"name": "token1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 635,
																							"src": "3368:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 726,
																							"name": "token0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 633,
																							"src": "3376:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 724,
																						"name": "getUniswapV3Price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 796,
																						"src": "3350:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_int256_$",
																							"typeString": "function (address,address) view returns (int256)"
																						}
																					},
																					"id": 727,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3350:33:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "3341:42:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"id": 729,
																			"nodeType": "ExpressionStatement",
																			"src": "3341:42:3"
																		}
																	]
																}
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "price1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "3416:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3426:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3416:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 743,
																"nodeType": "IfStatement",
																"src": "3412:92:3",
																"trueBody": {
																	"id": 742,
																	"nodeType": "Block",
																	"src": "3429:75:3",
																	"statements": [
																		{
																			"expression": {
																				"id": 740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 735,
																					"name": "price1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 646,
																					"src": "3447:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 737,
																							"name": "token0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 633,
																							"src": "3474:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 738,
																							"name": "token1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 635,
																							"src": "3482:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 736,
																						"name": "getUniswapV3Price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 796,
																						"src": "3456:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_int256_$",
																							"typeString": "function (address,address) view returns (int256)"
																						}
																					},
																					"id": 739,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3456:33:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "3447:42:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"id": 741,
																			"nodeType": "ExpressionStatement",
																			"src": "3447:42:3"
																		}
																	]
																}
															}
														]
													},
													"id": 745,
													"nodeType": "IfStatement",
													"src": "2941:573:3",
													"trueBody": {
														"id": 707,
														"nodeType": "Block",
														"src": "2979:200:3",
														"statements": [
															{
																"expression": {
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 685,
																		"name": "price0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "2993:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 687,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 633,
																				"src": "3025:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 686,
																			"name": "getChainLinkAssetPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "3002:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int256_$",
																				"typeString": "function (address) view returns (int256)"
																			}
																		},
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3002:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "2993:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 690,
																"nodeType": "ExpressionStatement",
																"src": "2993:39:3"
															},
															{
																"expression": {
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 691,
																		"name": "price1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "3046:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3055:7:3",
																		"subdenomination": "ether",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1"
																	},
																	"src": "3046:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 694,
																"nodeType": "ExpressionStatement",
																"src": "3046:16:3"
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 695,
																		"name": "price0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "3081:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3091:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3081:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 706,
																"nodeType": "IfStatement",
																"src": "3077:92:3",
																"trueBody": {
																	"id": 705,
																	"nodeType": "Block",
																	"src": "3094:75:3",
																	"statements": [
																		{
																			"expression": {
																				"id": 703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 698,
																					"name": "price0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 643,
																					"src": "3112:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 700,
																							"name": "token1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 635,
																							"src": "3139:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 701,
																							"name": "token0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 633,
																							"src": "3147:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 699,
																						"name": "getUniswapV3Price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 796,
																						"src": "3121:17:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_int256_$",
																							"typeString": "function (address,address) view returns (int256)"
																						}
																					},
																					"id": 702,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3121:33:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "3112:42:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"id": 704,
																			"nodeType": "ExpressionStatement",
																			"src": "3112:42:3"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 746,
												"nodeType": "IfStatement",
												"src": "2697:817:3",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "2735:200:3",
													"statements": [
														{
															"expression": {
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 655,
																	"name": "price0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "2749:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2758:7:3",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "2749:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 658,
															"nodeType": "ExpressionStatement",
															"src": "2749:16:3"
														},
														{
															"expression": {
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 659,
																	"name": "price1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "2779:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 661,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "2811:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "getChainLinkAssetPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "2788:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int256_$",
																			"typeString": "function (address) view returns (int256)"
																		}
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2788:30:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "2779:39:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 664,
															"nodeType": "ExpressionStatement",
															"src": "2779:39:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 665,
																	"name": "price1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "2837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2847:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2837:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 676,
															"nodeType": "IfStatement",
															"src": "2833:92:3",
															"trueBody": {
																"id": 675,
																"nodeType": "Block",
																"src": "2850:75:3",
																"statements": [
																	{
																		"expression": {
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 668,
																				"name": "price1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 646,
																				"src": "2868:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 670,
																						"name": "token0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 633,
																						"src": "2895:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 671,
																						"name": "token1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 635,
																						"src": "2903:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 669,
																					"name": "getUniswapV3Price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "2877:17:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_int256_$",
																						"typeString": "function (address,address) view returns (int256)"
																					}
																				},
																				"id": 672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2877:33:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2868:42:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 674,
																		"nodeType": "ExpressionStatement",
																		"src": "2868:42:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 747,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "3524:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 759,
																		"name": "price0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "3575:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3567:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 757,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3567:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3567:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 752,
																						"name": "price1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 646,
																						"src": "3553:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3545:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 750,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "3545:7:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3545:15:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 748,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "3534:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3541:3:3",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 332,
																			"src": "3534:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3534:27:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 755,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3533:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3563:3:3",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 347,
															"src": "3533:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3533:50:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3524:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "3524:59:3"
											}
										]
									},
									"functionSelector": "5b2e4dc5",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetPrice",
									"nameLocation": "2511:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2542:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2534:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2534:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2566:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2558:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2590:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2582:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:78:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "2632:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2624:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2623:16:3"
									},
									"scope": 853,
									"src": "2502:1088:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "3730:155:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 774,
																"name": "aPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "3744:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 776,
															"indexExpression": {
																"id": 775,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "3751:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3744:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 778,
														"indexExpression": {
															"id": 777,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "3759:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3744:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3769:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3744:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "3840:39:3",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3861:7:3",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"functionReturnParameters": 773,
															"id": 792,
															"nodeType": "Return",
															"src": "3854:14:3"
														}
													]
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "3740:139:3",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "3772:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"baseExpression": {
																				"id": 783,
																				"name": "aPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "3800:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 785,
																			"indexExpression": {
																				"id": 784,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "3807:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3800:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 787,
																		"indexExpression": {
																			"id": 786,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 769,
																			"src": "3815:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3800:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3793:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3793:6:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 773,
															"id": 789,
															"nodeType": "Return",
															"src": "3786:37:3"
														}
													]
												}
											}
										]
									},
									"functionSelector": "39c0f0c4",
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUniswapV3Price",
									"nameLocation": "3623:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3649:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "3641:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "3665:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "3657:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:32:3"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "3718:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 771,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3718:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3717:8:3"
									},
									"scope": 853,
									"src": "3614:271:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f56730ac",
									"id": 802,
									"mutability": "mutable",
									"name": "aPrice",
									"nameLocation": "3946:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "3891:61:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 801,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 797,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3899:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3891:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 800,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 798,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3918:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3910:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 799,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3929:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "4066:103:3",
										"statements": [
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 811,
																"name": "aPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "4076:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 814,
															"indexExpression": {
																"id": 812,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "4083:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4076:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 815,
														"indexExpression": {
															"id": 813,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4091:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4076:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 816,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "4101:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4076:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "4076:30:3"
											},
											{
												"expression": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 819,
																"name": "aPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "4116:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 822,
															"indexExpression": {
																"id": 820,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "4123:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4116:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 823,
														"indexExpression": {
															"id": 821,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4131:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4116:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 829,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "4156:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4149:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4141:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 824,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4141:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4141:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4152:3:3",
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 347,
															"src": "4141:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4141:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4116:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "4116:46:3"
											}
										]
									},
									"functionSelector": "4cb3dc2e",
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenPrice",
									"nameLocation": "3968:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "3999:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "3991:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "4023:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "4015:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "4047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "4039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:77:3"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4066:0:3"
									},
									"scope": 853,
									"src": "3959:210:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "4283:47:3",
										"statements": [
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 843,
																"name": "aPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "4293:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 846,
															"indexExpression": {
																"id": 844,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "4300:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4293:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 847,
														"indexExpression": {
															"id": 845,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "4308:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4293:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 848,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "4318:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4293:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "4293:30:3"
											}
										]
									},
									"functionSelector": "3176fce1",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenPriceB",
									"nameLocation": "4184:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "4216:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "4208:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4208:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "4240:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "4232:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4232:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "4264:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "4256:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4256:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4198:77:3"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4283:0:3"
									},
									"scope": 853,
									"src": "4175:155:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 854,
							"src": "1009:3323:3",
							"usedErrors": []
						}
					],
					"src": "0:4333:3"
				},
				"id": 3
			}
		}
	}
}